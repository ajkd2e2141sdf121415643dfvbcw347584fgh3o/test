--99night  อันนี้ปัจจุบัน
pcall(function()
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local Stats = game:GetService("Stats")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

_G.ESPPlayer = false
_G.ESPEnemies = false
_G.Itemsesp = false
_G.farmtree = false
_G.KillEnemiesAll = false 
_G.Bring = false
_G.BringP = false
_G.Store = false
_G.SelectItems = {}
_G.Method = "Campfire"
_G.range = 5
_G.infjump = false
_G.fly = false
_G.Speedfly = 70
_G.clickteleport = false
_G.noclip = false
_G.light = false
_G.lightBrightness = 1
_G.lightRange = 200
_G.ESPlife = false 
_G.ESPItems = false 
_G.SafeMode = false
_G.SafeP = "PlayersPosition"



--uiแต่งv2
_G.Color = Color3.fromRGB(0, 42, 255)
local FixVersion = "Vector Hub"
function Vec(text)
    local Notification = require(game.ReplicatedStorage.Notification)
    local notification = Notification.new(text)
    notification.Duration = 10
    notification:Display()
end

--[[Perpid]]
local Ui =  game:GetService("CoreGui").RobloxGui.Modules:FindFirstChild("dsfwefwfwdfsfasdadaxczcw")
if Ui then
    Ui:Destroy()
end
local UserInputService = game:GetService("UserInputService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local TweenService = game:GetService("TweenService")
local tween = game:service"TweenService"
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local GuiService = game:GetService("GuiService")
local SoundClick2 = Instance.new("Sound")
SoundClick2.Name = "Sound Effect"
SoundClick2.SoundId = "rbxassetid://3398620867"
SoundClick2.Volume = 1
SoundClick2.Parent = game.Workspace
local UIStroke = Instance.new("UIStroke")
local UICorner = Instance.new("UICorner")
local ScreenGui = Instance.new("ScreenGui")
local ImageButton = Instance.new("ImageButton")
local RobloxButton = Enum.ButtonStyle.RobloxButton
ScreenGui.Parent =  game:GetService("CoreGui").RobloxGui.Modules
ScreenGui.Name = "dsfwefwfwdfsfasdadaxczcw"
ImageButton.Parent = ScreenGui
ImageButton.Position = UDim2.new(0.120833337, 0, 0.0952890813, 0)
ImageButton.Size = UDim2.new(0, 65, 0, 65)
ImageButton.Draggable = true
ImageButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ImageButton.BackgroundTransparency = 1
ImageButton.Image = "rbxassetid://16129235054"
function LoadFunction()    
        ImageButton.MouseEnter:Connect(function()
        TweenService:Create(
            ImageButton,
            TweenInfo.new(.2, Enum.EasingStyle.Back, Enum.EasingDirection.InOut),
            {Size = UDim2.new(0, 80, 0, 80)}
        ):Play()
    end)
    ImageButton.MouseLeave:Connect(function()
        TweenService:Create(
            ImageButton,
            TweenInfo.new(.2, Enum.EasingStyle.Back, Enum.EasingDirection.InOut),
            {Size = UDim2.new(0, 65, 0, 65)}
        ):Play()
    end)
    
    local LoadFocus = false
    
    ImageButton.MouseButton1Down:Connect(function()
        if LoadFocus == false then 
            LoadFocus = false
            TweenService:Create(
                ImageButton,
                TweenInfo.new(.2, Enum.EasingStyle.Back, Enum.EasingDirection.InOut),
                {Rotation = 180}
            ):Play()
            SoundClick2:Play()
            TweenService:Create(
                ImageButton,
                TweenInfo.new(.4, Enum.EasingStyle.Quart, Enum.EasingDirection.In),
                {ImageTransparency = 0}
            ):Play()
            wait(.5)
            TweenService:Create(
                ImageButton,
                TweenInfo.new(.2, Enum.EasingStyle.Back, Enum.EasingDirection.InOut),
                {Rotation = 0}
            ):Play()
            TweenService:Create(
                ImageButton,
                TweenInfo.new(.4, Enum.EasingStyle.Quart, Enum.EasingDirection.In),
                {ImageTransparency = 0}
            ):Play()
            wait(.5)	
            
        end
    end)
end
    LoadFunction()
    ImageButton.MouseButton1Down:connect(function()
    game:GetService("VirtualInputManager"):SendKeyEvent(true,Enum.KeyCode.F1,false,game)
    game:GetService("VirtualInputManager"):SendKeyEvent(false,Enum.KeyCode.F1,false,game)
    end)

    if game:GetService("CoreGui").RobloxGui.Modules:FindFirstChild("VVV") then game:GetService("CoreGui").RobloxGui.Modules:FindFirstChild("VVV"):Destroy() end
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local function MakeDraggable(topbarobject, object)
    local Dragging = nil
    local DragInput = nil
    local DragStart = nil
    local StartPosition = nil

    local function Update(input)
        local Delta = input.Position - DragStart
        local pos = UDim2.new(StartPosition.X.Scale, StartPosition.X.Offset + Delta.X, StartPosition.Y.Scale,
            StartPosition.Y.Offset + Delta.Y)
        local Tween = TweenService:Create(object, TweenInfo.new(0.15), {
            Position = pos
        })
        Tween:Play()
    end

    topbarobject.InputBegan:Connect(
        function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                Dragging = true
                DragStart = input.Position
                StartPosition = object.Position

                input.Changed:Connect(
                    function()
                        if input.UserInputState == Enum.UserInputState.End then
                            Dragging = false
                        end
                    end
                )
            end
        end
    )

    topbarobject.InputChanged:Connect(
        function(input)
            if
                input.UserInputType == Enum.UserInputType.MouseMovement or
                input.UserInputType == Enum.UserInputType.Touch
            then
                DragInput = input
            end
        end
    )

    UserInputService.InputChanged:Connect(
        function(input)
            if input == DragInput and Dragging then
                Update(input)
            end
        end
    )
end

local Update = {}

function Update:Window(text, logo, keybind)
    local UICorner = Instance.new("UICorner")
    local osfunc = {}
    local uihide = false
    local abc = false
    local currentpage = ""
    local keybind = keybind or Enum.KeyCode.F1
    local yoo = string.gsub(tostring(keybind), "Enum.KeyCode.", "")

    local Window = Instance.new("ScreenGui")
    Window.Name = "VVV"
    Window.Parent = game:GetService("CoreGui").RobloxGui.Modules
    Window.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    local Main = Instance.new("Frame")
    Main.Name = "Main"
    Main.Parent = Window
    Main.ClipsDescendants = true
    Main.AnchorPoint = Vector2.new(0.5, 0.5)
    Main.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    Main.BackgroundTransparency = 0
    Main.Position = UDim2.new(0.5, 0, 0.5, 0)
    Main.Size = UDim2.new(0, 0, 0, 0)
    UICorner.Parent = Main

    --Main:TweenSize(UDim2.new(0, 656, 0, 400),"Out","Quad",0.4,true)
    --Main:TweenSize(UDim2.new(0, 656, 0, 350),"Out","Quad",0.4,true)
    Main:TweenSize(UDim2.new(0, 550, 0, 350), "Out", "Quad", 0.4, true)
    local BtnStroke = Instance.new("UIStroke")

    BtnStroke.Name = "BtnStroke"
    BtnStroke.Parent = Main
    BtnStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    BtnStroke.Color = _G.Color 
    BtnStroke.LineJoinMode = Enum.LineJoinMode.Round
    BtnStroke.Thickness = 1
    BtnStroke.Transparency = 0
    BtnStroke.Enabled = true
    BtnStroke.Archivable = true

    local MCNR = Instance.new("UICorner")
    MCNR.Name = "MCNR"
    MCNR.Parent = Main
    MCNR.CornerRadius = UDim.new(0, 0)
    local Top = Instance.new("Frame")
    Top.Name = "Top"
    Top.Parent = Main
    Top.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    --Top.Size = UDim2.new(0, 656, 0, 27)
    Top.Size = UDim2.new(0, 556, 0, 30)
    Top.BackgroundTransparency = 1.000
    local TCNR = Instance.new("UICorner")
    TCNR.Name = "TCNR"
    TCNR.Parent = Top
    TCNR.CornerRadius = UDim.new(0, 5)

    local Tab = Instance.new("Frame")
    Tab.Name = "Tab"
    Tab.Parent = Main
    Tab.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    Tab.Position = UDim2.new(0, 5, 0, 50)

    Tab.Size = UDim2.new(0, 0, 0, 0)
 
    local TabCorner = Instance.new("UIListLayout")
    TabCorner.Name = "TabCorner"
    TabCorner.Parent = Tab
    TabCorner.SortOrder = Enum.SortOrder.LayoutOrder
    TabCorner.Padding = UDim.new(0, 15)
    local BtnStroke = Instance.new("UIStroke")
    local ScrollTab = Instance.new("ScrollingFrame")
    local Crner = Instance.new("UICorner")
    ScrollTab.Name = "ScrollTab"
    ScrollTab.Parent = Tab
    ScrollTab.Active = true
    ScrollTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ScrollTab.BackgroundTransparency = 1.000
    ScrollTab.Size = UDim2.new(0, 133, 0, 300)
    ScrollTab.CanvasSize = UDim2.new(0, 0, 0, 0)
    ScrollTab.ScrollBarThickness = 0

    local PLL = Instance.new("UIListLayout")
    PLL.Name = "PLL"
    PLL.Parent = ScrollTab
    PLL.SortOrder = Enum.SortOrder.LayoutOrder
    PLL.Padding = UDim.new(0, 15)

    local PPD = Instance.new("UIPadding")
    PPD.Name = "PPD"
    PPD.Parent = ScrollTab
    PPD.PaddingLeft = UDim.new(0, 9)
    PPD.PaddingTop = UDim.new(0, 2)
    local BtnStroke = Instance.new("UIStroke")
    local Frame = Instance.new("Frame")
    local TextLabel = Instance.new("TextLabel")

    local Page = Instance.new("Frame")
    Page.Name = "Page"
    Page.Parent = Main
    Page.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    Page.BackgroundTransparency = 1.000
    Page.Position = UDim2.new(0.255426834, 0, 0.086000003, 0)
    Page.Size = UDim2.new(0, 410, 0, 308)

    local PCNR = Instance.new("UICorner")
    PCNR.Parent = Page
    PCNR.CornerRadius = UDim.new(0, 3)

    local MainPage = Instance.new("Frame")
    MainPage.Name = "MainPage"
    MainPage.Parent = Page
    MainPage.ClipsDescendants = true
    MainPage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    MainPage.BackgroundTransparency = 1.000
    MainPage.Size = UDim2.new(0, 410, 0, 308) --410308

    local PageList = Instance.new("Folder")
    PageList.Name = "PageList"
    PageList.Parent = MainPage

    local UIPageLayout = Instance.new("UIPageLayout")

    UIPageLayout.Parent = PageList
    UIPageLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIPageLayout.EasingDirection = Enum.EasingDirection.InOut
    UIPageLayout.EasingStyle = Enum.EasingStyle.Quad
    UIPageLayout.FillDirection = Enum.FillDirection.Vertical
    UIPageLayout.Padding = UDim.new(0, 10)
    UIPageLayout.TweenTime = 0.1
    UIPageLayout.GamepadInputEnabled = false
    UIPageLayout.ScrollWheelInputEnabled = false
    UIPageLayout.TouchInputEnabled = false

    MakeDraggable(Top, Main)


    UserInputService.InputBegan:Connect(function(input)
        if input.KeyCode == Enum.KeyCode.F1 then
            if uihide == false then
                uihide = true
                Main:TweenSize(UDim2.new(0, 0, 0, 0), "In", "Quad", 0.4, true)
                Main.Visible = false
            else
                uihide = false
                Main:TweenSize(UDim2.new(0, 550, 0, 350), "Out", "Quad", 0.5, true)
                Main.Visible = true
            end
        end
    end)

    Frame.Parent = Main
    Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    Frame.BackgroundTransparency = 1.000
    Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Frame.BorderSizePixel = 0
    Frame.Position = UDim2.new(0.1, -150, 0.158805028, -80)
    Frame.Size = UDim2.new(0, 327, 0, 100)

    TextLabel.Parent = Frame
    TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel.BackgroundTransparency = 1.000
    TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel.BorderSizePixel = 0
    TextLabel.Position = UDim2.new(0.199847102, 0, 0.25, 0)
    TextLabel.Size = UDim2.new(0, 200, 0, 50)
    TextLabel.Font = Enum.Font.FredokaOne
    TextLabel.Text = FixVersion
    TextLabel.TextColor3 = Color3.fromRGB(0, 86, 255)
    TextLabel.TextSize = 18.000
    TextLabel.TextWrapped = true
 
    local uitab = {}

    function uitab:Tab(text, img)
        local BtnStroke = Instance.new("UIStroke")
        local bc = Instance.new("UICorner")
        local TabButton = Instance.new("TextButton")
        local title = Instance.new("TextLabel")
        local TUICorner = Instance.new("UICorner")
        local Title = Instance.new("TextLabel")
        TabButton.Parent = ScrollTab
        TabButton.Name = text .. "Server"
        TabButton.Text = ""
        TabButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TabButton.BackgroundTransparency = 1.000
        TabButton.Size = UDim2.new(0, 120, 0, 25)
        TabButton.Font = Enum.Font.GothamSemibold
        TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        TabButton.TextSize = 12.000
        TabButton.TextTransparency = 0.5

        Title.Parent = TabButton
        Title.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
        Title.BackgroundTransparency = 1.000
        Title.Position = UDim2.new(0, 25, 0, 0)
        Title.Size = UDim2.new(0, 100, 0, 25)
        Title.Font = Enum.Font.GothamSemibold
        Title.Text = text
        Title.TextColor3 = Color3.fromRGB(255, 255, 255)
        Title.TextSize = 15.000
        Title.TextXAlignment = Enum.TextXAlignment.Left
        local IDK = Instance.new("ImageLabel")
        IDK.Name = "LogoIDK"
        IDK.Parent = TabButton
        IDK.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        IDK.BackgroundTransparency = 1.000
        IDK.Position = UDim2.new(0, 3, 0, 3)
        IDK.Size = UDim2.new(0, 20, 0, 20)
        IDK.Image = img
        TUICorner.CornerRadius = UDim.new(0, 3)
        TUICorner.Parent = TabButton

        BtnStroke.Name = "BtnStroke"
        BtnStroke.Parent = TabButton
        BtnStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
        BtnStroke.Color = _G.Color 
        BtnStroke.LineJoinMode = Enum.LineJoinMode.Round
        BtnStroke.Thickness = 1
        BtnStroke.Transparency = 0
        BtnStroke.Enabled = true
        BtnStroke.Archivable = true

        local MainFramePage = Instance.new("ScrollingFrame")
        MainFramePage.Name = text .. "_Page"
        MainFramePage.Parent = PageList
        MainFramePage.Active = true
        MainFramePage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        MainFramePage.BackgroundTransparency = 1.000
        MainFramePage.BorderSizePixel = 0
        MainFramePage.Size = UDim2.new(0, 400, 0, 308)
        MainFramePage.CanvasSize = UDim2.new(0, 0, 0, 0)
        MainFramePage.ScrollBarThickness = 0

        local UIPadding = Instance.new("UIPadding")
        local UIListLayout = Instance.new("UIListLayout")

        UIPadding.Parent = MainFramePage
        UIPadding.PaddingLeft = UDim.new(0, 10)
        UIPadding.PaddingTop = UDim.new(0, 5)

        UIListLayout.Padding = UDim.new(0, 12)
        UIListLayout.Parent = MainFramePage
        UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

        TabButton.MouseButton1Click:Connect(function()
            for i, v in next, ScrollTab:GetChildren() do
                if v:IsA("TextButton") then
                    TweenService:Create(
                        v,
                        TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {
                            TextTransparency = 0.5
                        }
                    ):Play()
                end
                TweenService:Create(
                    TabButton,
                    TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {
                        TextTransparency = 0
                    }
                ):Play()
            end
            for i, v in next, PageList:GetChildren() do
                currentpage = string.gsub(TabButton.Name, "Server", "") .. "_Page"
                if v.Name == currentpage then
                    UIPageLayout:JumpTo(v)
                end
            end
        end)

        if abc == false then
            for i, v in next, ScrollTab:GetChildren() do
                if v:IsA("TextButton") then
                    TweenService:Create(
                        v,
                        TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {
                            TextTransparency = 0.5
                        }
                    ):Play()
                end
                TweenService:Create(
                    TabButton,
                    TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {
                        TextTransparency = 0
                    }
                ):Play()
            end
            UIPageLayout:JumpToIndex(1)
            abc = true
        end

        game:GetService("RunService").Stepped:Connect(function()
            pcall(function()
                MainFramePage.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y + 20)
                ScrollTab.CanvasSize = UDim2.new(0, 0, 0, PLL.AbsoluteContentSize.Y + 20)
            end)
        end)
        function Update:Notification(textdesc)
            local NotificationHold = Instance.new("TextButton")
            local NotificationFrame = Instance.new("Frame")
            local OkayBtn = Instance.new("TextButton")
            local OkayBtnCorner = Instance.new("UICorner")
            local OkayBtnTitle = Instance.new("TextLabel")
            local NotificationTitle = Instance.new("TextLabel")
            local NotificationDesc = Instance.new("TextLabel")
            local NotifCorner = Instance.new("UICorner")
            local NotifHolderUIStroke = Instance.new("UIStroke")
            local Line = Instance.new("Frame")

            NotificationHold.Name = "NotificationHold"
            NotificationHold.Parent = Main
            NotificationHold.BackgroundColor3 = Color3.new(125, 125, 125)
            NotificationHold.BackgroundTransparency = 1
            NotificationHold.BorderSizePixel = 0
            NotificationHold.Size = UDim2.new(0, 589, 0, 378)
            NotificationHold.AutoButtonColor = false
            NotificationHold.Font = Enum.Font.SourceSans
            NotificationHold.Text = ""
            NotificationHold.TextColor3 = Color3.new(125, 0, 125)
            NotificationHold.TextSize = 13.000

            TweenService:Create(NotificationHold, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
                BackgroundTransparency = 1
            }):Play()
            wait(0.4)

            NotificationFrame.Name = "NotificationFrame"
            NotificationFrame.Parent = NotificationHold
            NotificationFrame.AnchorPoint = Vector2.new(0.5, 0.5)
            NotificationFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
            NotificationFrame.BorderColor3 = Color3.new(125, 0, 125)
            NotificationFrame.BorderSizePixel = 0
            NotificationFrame.Transparency = 0
            NotificationFrame.ClipsDescendants = true
            NotificationFrame.Position = UDim2.new(0, 295, 0, 190)
            NotificationFrame.Size = UDim2.new(0, 0, 0, 0)

            NotificationFrame:TweenSize(UDim2.new(0, 400, 0, 250), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6,
                true)

            NotifCorner.Name = "NotifCorner"
            NotifCorner.Parent = NotificationFrame
            NotifCorner.CornerRadius = UDim.new(0, 5)

            NotifHolderUIStroke.Name = "NotifHolderUIStroke"
            NotifHolderUIStroke.Parent = NotificationFrame
            NotifHolderUIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
            NotifHolderUIStroke.Color = Color3.new(125, 0, 125)
            NotifHolderUIStroke.LineJoinMode = Enum.LineJoinMode.Round
            NotifHolderUIStroke.Thickness = 2
            NotifHolderUIStroke.Transparency = 0
            NotifHolderUIStroke.Enabled = true
            NotifHolderUIStroke.Archivable = true

            OkayBtn.Name = "OkayBtn"
            OkayBtn.Parent = NotificationFrame
            OkayBtn.BackgroundColor3 = Color3.fromRGB(190, 190, 190)
            OkayBtn.BorderSizePixel = 2
            OkayBtn.BorderColor3 = Color3.new(125, 0, 125)
            OkayBtn.Position = UDim2.new(0, 125, 0, 190)
            OkayBtn.Size = UDim2.new(0, 150, 0, 30)
            OkayBtn.AutoButtonColor = true
            OkayBtn.Font = Enum.Font.SourceSans
            OkayBtn.Text = ""
            OkayBtn.TextColor3 = Color3.new(125, 0, 125)
            OkayBtn.TextSize = 13.000

            OkayBtnCorner.CornerRadius = UDim.new(0, 5)
            OkayBtnCorner.Name = "OkayBtnCorner"
            OkayBtnCorner.Parent = OkayBtn

            OkayBtnTitle.Name = "OkayBtnTitle"
            OkayBtnTitle.Parent = OkayBtn
            OkayBtnTitle.BackgroundColor3 = Color3.new(125, 0, 125)
            OkayBtnTitle.BackgroundTransparency = 1.000
            OkayBtnTitle.Size = UDim2.new(0, 150, 0, 30)
            OkayBtnTitle.Text = "OK"
            OkayBtnTitle.Font = Enum.Font.GothamSemibold
            OkayBtnTitle.TextColor3 = Color3.fromRGB(0, 0, 0)
            OkayBtnTitle.TextSize = 22.000

            NotificationTitle.Name = "NotificationTitle"
            NotificationTitle.Parent = NotificationFrame
            NotificationTitle.BackgroundColor3 = Color3.new(125, 0, 125)
            NotificationTitle.BackgroundTransparency = 1.000
            NotificationTitle.Position = UDim2.new(0, 0, 0, 10)
            NotificationTitle.Size = UDim2.new(0, 400, 0, 25)
            NotificationTitle.ZIndex = 3
            NotificationTitle.Font = Enum.Font.GothamSemibold
            NotificationTitle.Text = "Notification"
            NotificationTitle.TextColor3 = Color3.fromRGB(255, 0, 0)
            NotificationTitle.TextSize = 22.000

            Line.Name = "Line"
            Line.Parent = NotificationFrame
            Line.BackgroundColor3 = Color3.new(125, 0, 125)
            Line.BorderSizePixel = 0
            Line.Position = UDim2.new(0, 10, 0, 40)
            Line.Size = UDim2.new(0, 380, 0, 1)

            NotificationDesc.Name = "NotificationDesc"
            NotificationDesc.Parent = NotificationFrame
            NotificationDesc.BackgroundColor3 = _G.SectionColor
            NotificationDesc.BackgroundTransparency = 1.000
            NotificationDesc.Position = UDim2.new(0, 10, 0, 80)
            NotificationDesc.Size = UDim2.new(0, 380, 0, 200)
            NotificationDesc.Font = Enum.Font.GothamSemibold
            NotificationDesc.Text = textdesc
            NotificationDesc.TextScaled = false
            NotificationDesc.TextColor3 = Color3.new(125, 0, 125)
            NotificationDesc.TextSize = 16.000
            NotificationDesc.TextWrapped = true
            NotificationDesc.TextXAlignment = Enum.TextXAlignment.Center
            NotificationDesc.TextYAlignment = Enum.TextYAlignment.Top

            OkayBtn.MouseEnter:Connect(function()
                TweenService:Create(OkayBtn, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
                    BackgroundColor3 = Color3.fromRGB(34, 34, 34) }):Play()
            end)

            OkayBtn.MouseLeave:Connect(function()
                TweenService:Create(OkayBtn, TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
                    BackgroundColor3 = Color3.fromRGB(25, 25, 25) }):Play()
            end)

            OkayBtn.MouseButton1Click:Connect(function()
                NotificationFrame:TweenSize(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6,
                    true)

                wait(0.4)

                TweenService:Create(NotificationHold, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {
                        BackgroundTransparency = 1
                    }):Play()

                wait(.3)

                NotificationHold:Destroy()
            end)
        end

        local main = {}
        function main:Button(text, callback)
            local Button = Instance.new("Frame")
            local UICorner = Instance.new("UICorner")
            local TextBtn = Instance.new("TextButton")
            local UICorner_2 = Instance.new("UICorner")
            local Black = Instance.new("Frame")
            local UICorner_3 = Instance.new("UICorner")

            Button.Name = "Button"
            Button.Parent = MainFramePage
            Button.BackgroundColor3 = Color3.new(0, 0, 0)
            Button.Size = UDim2.new(0, 387, 0, 31)

            UICorner.CornerRadius = UDim.new(0, 5)
            UICorner.Parent = Button

            TextBtn.Name = "TextBtn"
            TextBtn.Parent = Button
            TextBtn.BackgroundColor3 = _G.Color 
            TextBtn.BackgroundTransparency = 0.30000001192092896
            TextBtn.Position = UDim2.new(0, 1, 0, 1)
            TextBtn.Size = UDim2.new(0, 385, 0, 32)
            TextBtn.AutoButtonColor = false
            TextBtn.Font = Enum.Font.GothamSemibold
            TextBtn.Text = text
            TextBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
            TextBtn.TextSize = 15.000

            UICorner_2.CornerRadius = UDim.new(0, 5)
            UICorner_2.Parent = TextBtn

            Black.Name = "Black"
            Black.Parent = Button
            Black.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
            Black.BackgroundTransparency = 1.000
            Black.BorderSizePixel = 0
            Black.Position = UDim2.new(0, 1, 0, 1)
            Black.Size = UDim2.new(0, 385, 0, 29)

            UICorner_3.CornerRadius = UDim.new(0, 5)
            UICorner_3.Parent = Black

            TextBtn.MouseEnter:Connect(function()
                TweenService:Create(
                    Black,
                    TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {
                        BackgroundTransparency = 0.7
                    }
                ):Play()
            end)
            TextBtn.MouseLeave:Connect(function()
                TweenService:Create(
                    Black,
                    TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {
                        BackgroundTransparency = 1
                    }
                ):Play()
            end)
            TextBtn.MouseButton1Click:Connect(function()
                TextBtn.TextSize = 0
                TweenService:Create(
                    TextBtn,
                    TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {
                        TextSize = 15
                    }
                ):Play()
                callback()
            end)
        end
        function main:Toggle(text, config, callback)
            config = config or false
            local toggled = config
            local UICorner = Instance.new("UICorner")
            local UIStroke = Instance.new("UIStroke")
            local Button = Instance.new("TextButton")
            local UICorner_2 = Instance.new("UICorner")
            local Title = Instance.new("TextLabel")
            local ToggleImage = Instance.new("Frame")
            local UICorner_3 = Instance.new("UICorner")
            local Circle = Instance.new("ImageLabel")
            local UICorner_4 = Instance.new("UICorner")
            local imgLabelIcon = Instance.new("ImageLabel")


            Button.Name = "Button"
            Button.Parent = MainFramePage
            Button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
            Button.Position = UDim2.new(0, 1, 0, 1)
            Button.Size = UDim2.new(0, 387, 0, 31)
            Button.Transparency = 1
            Button.AutoButtonColor = false
            Button.Font = Enum.Font.SourceSans
            Button.Text = ""
            Button.TextColor3 = Color3.fromRGB(0, 0, 0)
            Button.TextSize = 11.000
            UIStroke.Name = "UIStroke"
            UIStroke.Parent = Button
            UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
            UIStroke.Color = _G.Color 
            UIStroke.LineJoinMode = Enum.LineJoinMode.Round
            UIStroke.Thickness = 1
            UIStroke.Transparency = 0
            UIStroke.Enabled = true
            UIStroke.Archivable = true

            UICorner_2.CornerRadius = UDim.new(0, 3)
            UICorner_2.Parent = Button

            imgLabelIcon.Name = "Icon"
            imgLabelIcon.Parent = Button
            imgLabelIcon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            imgLabelIcon.BackgroundTransparency = 1.000
            imgLabelIcon.Position = UDim2.new(0, 5, 0, 1)
            imgLabelIcon.Size = UDim2.new(0, 30, 0, 30)
            imgLabelIcon.Image = "rbxassetid://"

            Title.Parent = Button
            Title.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
            Title.BackgroundTransparency = 1.000
            Title.Position = UDim2.new(0, 45, 0, 1)
            Title.Size = UDim2.new(0, 280, 0, 30)
            Title.Font = Enum.Font.GothamSemibold
            Title.Text = "" .. text
            Title.TextColor3 = Color3.fromRGB(255, 255, 255)
            Title.TextSize = 15
            Title.TextXAlignment = Enum.TextXAlignment.Left

            ToggleImage.Name = "ToggleImage"
            ToggleImage.Parent = Button
            ToggleImage.BackgroundColor3 = Color3.fromRGB(225, 225, 225)
            ToggleImage.BackgroundTransparency = 0.8999999761581421
            ToggleImage.Position = UDim2.new(0, 10, 0, 6)
            ToggleImage.Size = UDim2.new(0, 25, 0, 20)

            UICorner_3.CornerRadius = UDim.new(0, 10)
            UICorner_3.Parent = ToggleImage

            Circle.Name = "Circle"
            Circle.Parent = ToggleImage
            Circle.BackgroundColor3 = Color3.fromRGB(227, 60, 60)
            Circle.Position = UDim2.new(0, 0, 0, 0)
            Circle.Size = UDim2.new(0, 0, 0, 0)
            Circle.Image = "http://www.roblox.com/asset/?id=00"

            UICorner_4.CornerRadius = UDim.new(0, 10)
            UICorner_4.Parent = Circle

            Button.MouseButton1Click:Connect(function()
                local SoundClick = Instance.new("Sound")
                SoundClick.Name = "SoundEffect"
                SoundClick.SoundId = "rbxassetid://130785805"
                SoundClick.Volume = 1
                SoundClick.Parent = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")
                SoundClick:Play()
            if toggled == false then
                toggled = true
                pcall(callback,true)
                Circle.BackgroundColor3 = Color3.fromRGB(0,0,255)
                Circle.Image = "http://www.roblox.com/asset/?id=6023426926"
               -- Circle.Visible = true
                UICorner_3.CornerRadius = UDim.new(0, 100)
                Circle:TweenSize(UDim2.new(0, 25, 0, 20),"In","Back",0.1,true)
            else
                toggled = false
                pcall(callback,false) 
                Circle.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
                Circle:TweenSize(UDim2.new(0, 0, 0, 0),"In","Back",0.1,true)
                Circle.Image = "http://www.roblox.com/asset/?id=00"
                --Circle.Visible = false
            end
            SoundClick:Destroy()
        end)
        if config == true then
            toggled = true
            Circle.BackgroundColor3 = _G.Color
            Circle.Image = "http://www.roblox.com/asset/?id=6023426926"
            --Circle.Visible = true
            UICorner_3.CornerRadius = UDim.new(0, 100)
            Circle:TweenSize(UDim2.new(0, 25, 0, 20),"In","Back",0.1,true)
            pcall(callback, toggled)
        end
    end
        function main:Dropdown(text, option, callback)
            local isdropping = false
            local Dropdown = Instance.new("Frame")
            local UICorner = Instance.new("UICorner")
            local DropTitle = Instance.new("TextLabel")
            local DropScroll = Instance.new("ScrollingFrame")
            local UIListLayout = Instance.new("UIListLayout")
            local UIPadding = Instance.new("UIPadding")
            local DropButton = Instance.new("TextButton")
            local DropImage = Instance.new("ImageLabel")
            local UIStroke = Instance.new("UIStroke")

            Dropdown.Name = "Dropdown"
            Dropdown.Parent = MainFramePage
            Dropdown.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
            Dropdown.Transparency = 1
            Dropdown.ClipsDescendants = true
            Dropdown.Size = UDim2.new(0, 387, 0, 31)

            UIStroke.Name = "UIStroke"
            UIStroke.Parent = Dropdown
            UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
            UIStroke.Color = _G.Color 
            UIStroke.LineJoinMode = Enum.LineJoinMode.Round
            UIStroke.Thickness = 1
            UIStroke.Transparency = 0
            UIStroke.Enabled = true
            UIStroke.Archivable = true

            UICorner.CornerRadius = UDim.new(0, 3)
            UICorner.Parent = Dropdown

            DropTitle.Name = "DropTitle"
            DropTitle.Parent = Dropdown
            DropTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            DropTitle.BackgroundTransparency = 1.000
            DropTitle.Size = UDim2.new(0, 385, 0, 31)
            DropTitle.Font = Enum.Font.GothamSemibold
            DropTitle.Text = text 
            DropTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            DropTitle.TextSize = 15.000

            DropScroll.Name = "DropScroll"
            DropScroll.Parent = DropTitle
            DropScroll.Active = true
            DropScroll.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            DropScroll.BackgroundTransparency = 1.000
            DropScroll.BorderSizePixel = 0
            DropScroll.Position = UDim2.new(0, 0, 0, 31)
            DropScroll.Size = UDim2.new(0, 385, 0, 100)
            DropScroll.CanvasSize = UDim2.new(0, 0, 0, 0)
            DropScroll.ScrollBarThickness = 3

            UIListLayout.Parent = DropScroll
            UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
            UIListLayout.Padding = UDim.new(0, 5)

            UIPadding.Parent = DropScroll
            UIPadding.PaddingLeft = UDim.new(0, 5)
            UIPadding.PaddingTop = UDim.new(0, 5)

            DropButton.Name = "DropButton"
            DropButton.Parent = Dropdown
            DropButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            DropButton.BackgroundTransparency = 1.000
            DropButton.Size = UDim2.new(0, 385, 0, 31)
            DropButton.Font = Enum.Font.SourceSans
            DropButton.Text = ""
            DropButton.TextColor3 = Color3.fromRGB(0, 0, 0)
            DropButton.TextSize = 14.000

            for i, v in next, option do
                local Item = Instance.new("TextButton")

                Item.Name = "Item"
                Item.Parent = DropScroll
                Item.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Item.BackgroundTransparency = 1.000
                Item.Size = UDim2.new(0, 385, 0, 26)
                Item.Font = Enum.Font.GothamSemibold
                Item.Text = tostring(v)
                Item.TextColor3 = Color3.fromRGB(255, 255, 255)
                Item.TextSize = 13.000
                Item.TextTransparency = 0.500

                Item.MouseEnter:Connect(function()
                    TweenService:Create(
                        Item,
                        TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {
                            TextTransparency = 0
                        }
                    ):Play()
                end)

                Item.MouseLeave:Connect(function()
                    TweenService:Create(
                        Item,
                        TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {
                            TextTransparency = 0.5
                        }
                    ):Play()
                end)

                Item.MouseButton1Click:Connect(function()
                    isdropping = false
                    Dropdown:TweenSize(UDim2.new(0, 385, 0, 31), "Out", "Quad", 0.3, true)
                    TweenService:Create(
                        DropImage,
                        TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {
                            Rotation = 180
                        }
                    ):Play()
                    callback(Item.Text)
                    DropTitle.Text = text .. " : " .. Item.Text
                end)
            end

            DropScroll.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y + 10)

            DropButton.MouseButton1Click:Connect(function()
                if isdropping == false then
                    isdropping = true
                    Dropdown:TweenSize(UDim2.new(0, 385, 0, 131), "Out", "Quad", 0.3, true)
                    TweenService:Create(
                        DropImage,
                        TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {
                            Rotation = 0
                        }
                    ):Play()
                else
                    isdropping = false
                    Dropdown:TweenSize(UDim2.new(0, 385, 0, 31), "Out", "Quad", 0.3, true)
                    TweenService:Create(
                        DropImage,
                        TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {
                            Rotation = 180
                        }
                    ):Play()
                end
            end)

            local dropfunc = {}
            function dropfunc:Add(t)
                local Item = Instance.new("TextButton")
                Item.Name = "Item"
                Item.Parent = DropScroll
                Item.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Item.BackgroundTransparency = 1.000
                Item.Size = UDim2.new(0, 385, 0, 26)
                Item.Font = Enum.Font.GothamSemibold
                Item.Text = tostring(t)
                Item.TextColor3 = Color3.fromRGB(255, 255, 255)
                Item.TextSize = 13.000
                Item.TextTransparency = 0.500

                Item.MouseEnter:Connect(function()
                    TweenService:Create(
                        Item,
                        TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {
                            TextTransparency = 0
                        }
                    ):Play()
                end)

                Item.MouseLeave:Connect(function()
                    TweenService:Create(
                        Item,
                        TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {
                            TextTransparency = 0.5
                        }
                    ):Play()
                end)

                Item.MouseButton1Click:Connect(function()
                    isdropping = false
                    Dropdown:TweenSize(UDim2.new(0, 387, 0, 31), "Out", "Quad", 0.3, true)
                    TweenService:Create(
                        DropImage,
                        TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                        {
                            Rotation = 180
                        }
                    ):Play()
                    callback(Item.Text)
                    DropTitle.Text = text .. " : " .. Item.Text
                end)
            end

            function dropfunc:Clear()
                DropTitle.Text = tostring(text) .. " : "
                isdropping = false
                Dropdown:TweenSize(UDim2.new(0, 385, 0, 31), "Out", "Quad", 0.3, true)
                TweenService:Create(
                    DropImage,
                    TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {
                        Rotation = 180
                    }
                ):Play()
                for i, v in next, DropScroll:GetChildren() do
                    if v:IsA("TextButton") then
                        v:Destroy()
                    end
                end
            end

            return dropfunc
        end

         function main:MultiDropdown(text, optionList, callback)
        local selected = {}
        local isdropping = false
        local Dropdown = Instance.new("Frame")
        local UICorner = Instance.new("UICorner")
        local DropTitle = Instance.new("TextLabel")
        local DropScroll = Instance.new("ScrollingFrame")
        local UIListLayout = Instance.new("UIListLayout")
        local UIPadding = Instance.new("UIPadding")
        local DropButton = Instance.new("TextButton")
        local DropImage = Instance.new("ImageLabel")
        local UIStroke = Instance.new("UIStroke")

        Dropdown.Name = "MultiDropdown"
        Dropdown.Parent = MainFramePage
        Dropdown.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        Dropdown.Transparency = 1
        Dropdown.ClipsDescendants = true
        Dropdown.Size = UDim2.new(0, 387, 0, 31)

        UIStroke.Name = "UIStroke"
        UIStroke.Parent = Dropdown
        UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
        UIStroke.Color = _G.Color 
        UIStroke.Thickness = 1

        UICorner.CornerRadius = UDim.new(0, 3)
        UICorner.Parent = Dropdown

        DropTitle.Name = "DropTitle"
        DropTitle.Parent = Dropdown
        DropTitle.BackgroundTransparency = 1
        DropTitle.Size = UDim2.new(0, 385, 0, 31)
        DropTitle.Font = Enum.Font.GothamSemibold
        DropTitle.Text = text .. " : "
        DropTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
        DropTitle.TextSize = 15

        DropScroll.Name = "DropScroll"
        DropScroll.Parent = DropTitle
        DropScroll.Active = true
        DropScroll.BackgroundTransparency = 1
        DropScroll.BorderSizePixel = 0
        DropScroll.Position = UDim2.new(0, 0, 0, 31)
        DropScroll.Size = UDim2.new(0, 385, 0, 150)
        DropScroll.CanvasSize = UDim2.new(0, 0, 0, 0)
        DropScroll.ScrollBarThickness = 8

        UIListLayout.Parent = DropScroll
        UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        UIListLayout.Padding = UDim.new(0, 5)

        UIPadding.Parent = DropScroll
        UIPadding.PaddingLeft = UDim.new(0, 5)
        UIPadding.PaddingTop = UDim.new(0, 5)

        DropButton.Name = "DropButton"
        DropButton.Parent = Dropdown
        DropButton.BackgroundTransparency = 1
        DropButton.Size = UDim2.new(0, 385, 0, 31)
        DropButton.Font = Enum.Font.SourceSans
        DropButton.Text = ""

        DropImage.Name = "DropImage"
        DropImage.Parent = DropButton
        DropImage.BackgroundTransparency = 1
        DropImage.Position = UDim2.new(1, -25, 0, 6)
        DropImage.Size = UDim2.new(0, 20, 0, 20)
        DropImage.Image = "rbxassetid://6031091002"
        DropImage.Rotation = 180

        local function updateTitle()
            local combined = table.concat(selected, ", ")
            DropTitle.Text = text .. " : " .. combined
        end

        local function toggleSelection(value, button)
            local index = table.find(selected, value)
            if index then
                table.remove(selected, index)
                button.TextTransparency = 0.5
            else
                table.insert(selected, value)
                button.TextTransparency = 0
            end
            updateTitle()
            callback(selected)
        end
    
    -- ปรับปรุงการคำนวณ CanvasSize สำหรับ Dropdown
    local function updateDropdownCanvasSize()
        local contentHeight = UIListLayout.AbsoluteContentSize.Y
        local dropHeight = DropScroll.AbsoluteSize.Y
        DropScroll.CanvasSize = UDim2.new(0, 0, 0, math.max(contentHeight + 20, dropHeight + 10))
    end

        local function addItem(v)
            local Item = Instance.new("TextButton")
            Item.Name = "Item"
            Item.Parent = DropScroll
            Item.BackgroundTransparency = 1
            Item.Size = UDim2.new(0, 385, 0, 26)
            Item.Font = Enum.Font.GothamSemibold
            Item.Text = tostring(v)
            Item.TextColor3 = Color3.fromRGB(255, 255, 255)
            Item.TextSize = 13
            Item.TextTransparency = 0.5

            Item.MouseEnter:Connect(function()
                TweenService:Create(Item, TweenInfo.new(0.3), {TextTransparency = 0}):Play()
            end)

            Item.MouseLeave:Connect(function()
                if not table.find(selected, v) then
                    TweenService:Create(Item, TweenInfo.new(0.3), {TextTransparency = 0.5}):Play()
                end
            end)

            Item.MouseButton1Click:Connect(function()
                toggleSelection(v, Item)
            end)
        end

        for _, v in pairs(optionList) do
            addItem(v)
        end

        DropScroll.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y + 10)
    updateDropdownCanvasSize()

        -- เพิ่ม connection สำหรับอัปเดต CanvasSize เมื่อมีการเปลี่ยนแปลง
        UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(updateDropdownCanvasSize)
        DropButton.MouseButton1Click:Connect(function()
            isdropping = not isdropping
            local maxHeight = math.min(200, UIListLayout.AbsoluteContentSize.Y + 31)
            Dropdown:TweenSize(UDim2.new(0, 387, 0, isdropping and 200 or 31), "Out", "Quad", 0.3, true)
            TweenService:Create(DropImage, TweenInfo.new(0.3), {
                Rotation = isdropping and 0 or 180
            }):Play()
        end)

        local dropfunc = {}

        function dropfunc:Add(v)
            addItem(v)
        end

        function dropfunc:Clear()
            selected = {}
            updateTitle()
            for _, v in DropScroll:GetChildren() do
                if v:IsA("TextButton") then
                    v:Destroy()
                end
            end
        end

        function dropfunc:Get()
            return selected
        end

        return dropfunc
    end

function main:Slider(text, min, max, start, callback)
    local sliderfunc = {}
    local Value = start or min
    local dragging = false
    local connections = {}

    -- UI Elements
    local SliderFrame = Instance.new("Frame")
    local SliderFrame_2 = Instance.new("Frame")
    local UIStroke = Instance.new("UIStroke")
    local UICorner = Instance.new("UICorner")
    local Title = Instance.new("TextLabel")
    local SliderInput = Instance.new("Frame")
    local SliderButton = Instance.new("Frame")
    local SliderCount = Instance.new("Frame")
    local SliderCorner = Instance.new("UICorner")
    local SliderCorner2 = Instance.new("UICorner")
    local BoxFrame = Instance.new("Frame")
    local SliderBox = Instance.new("TextBox")
    local SliderStroke = Instance.new("UIStroke")
    local Title_2 = Instance.new("TextButton")
    local UICorner_2 = Instance.new("UICorner")
    local UICorner_3 = Instance.new("UICorner")

    SliderFrame.Name = "SliderFrame"
    SliderFrame.Parent = MainFramePage
    SliderFrame.BackgroundColor3 = _G.Color 
    SliderFrame.BackgroundTransparency = 1.000
    SliderFrame.BorderSizePixel = 0
    SliderFrame.Size = UDim2.new(0, 387, 0, 60)

    SliderFrame_2.Name = "SliderFrame_2"
    SliderFrame_2.Parent = SliderFrame
    SliderFrame_2.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    SliderFrame_2.BackgroundTransparency = 1
    SliderFrame_2.BorderSizePixel = 0
    SliderFrame_2.Position = UDim2.new(0, 1, 0, 1)
    SliderFrame_2.Size = UDim2.new(0, 387, 0, 60)

    UIStroke.Name = "UIStroke"
    UIStroke.Parent = SliderFrame_2
    UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    UIStroke.Color = _G.Color 
    UIStroke.LineJoinMode = Enum.LineJoinMode.Round
    UIStroke.Thickness = 1
    UIStroke.Transparency = 0
    UIStroke.Enabled = true
    UIStroke.Archivable = true

    UICorner.Parent = SliderFrame_2
    UICorner.CornerRadius = UDim.new(0, 3)

    Title.Parent = SliderFrame_2
    Title.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
    Title.BackgroundTransparency = 1.000
    Title.Position = UDim2.new(0, 9, 0, 5)
    Title.Size = UDim2.new(0, 280, 0, 30)
    Title.Font = Enum.Font.GothamSemibold
    Title.Text = text
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.TextSize = 15.000
    Title.TextXAlignment = Enum.TextXAlignment.Left

    SliderInput.Name = "SliderInput"
    SliderInput.Parent = SliderFrame_2
    SliderInput.BackgroundColor3 = _G.Color 
    SliderInput.BackgroundTransparency = 0.7
    SliderInput.BorderSizePixel = 0
    SliderInput.Position = UDim2.new(0, 8, 0, 42)
    SliderInput.Size = UDim2.new(0, 365, 0, 6)

    SliderCorner2.CornerRadius = UDim.new(0, 100000)
    SliderCorner2.Parent = SliderInput

    SliderButton.Name = "SliderButton"
    SliderButton.Parent = SliderInput
    SliderButton.BackgroundColor3 = _G.Color 
    SliderButton.BackgroundTransparency = 1.000
    SliderButton.BorderSizePixel = 0
    SliderButton.Position = UDim2.new(0, 0, 0, -7)
    SliderButton.Size = UDim2.new(0, 365, 0, 20)

    SliderCount.Name = "SliderCount"
    SliderCount.Parent = SliderButton
    SliderCount.BackgroundColor3 = _G.Color 
    SliderCount.BackgroundTransparency = 0.3
    SliderCount.BorderSizePixel = 0
    SliderCount.Size = UDim2.new(0, 18, 0, 18)

    Title_2.Name = "Title_2"
    Title_2.Parent = SliderButton
    Title_2.AnchorPoint = Vector2.new(0, 0)
    Title_2.BackgroundColor3 = _G.Color 
    Title_2.AutoButtonColor = false
    Title_2.BackgroundTransparency = 1.000
    Title_2.Size = UDim2.new(0, 18, 0, 18)
    Title_2.Font = Enum.Font.GothamBold
    Title_2.Text = tostring(Value)
    Title_2.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title_2.TextSize = 8.000
    Title_2.TextXAlignment = Enum.TextXAlignment.Center

    UICorner_2.Parent = Title_2
    UICorner_2.CornerRadius = UDim.new(0, 100000)

    SliderCorner.CornerRadius = UDim.new(0, 100000)
    SliderCorner.Parent = SliderCount

    BoxFrame.Name = "BoxFrame"
    BoxFrame.Parent = SliderFrame_2
    BoxFrame.BackgroundColor3 = _G.Color 
    BoxFrame.BackgroundTransparency = 1.000
    BoxFrame.Size = UDim2.new(0, 50, 0, 15)
    BoxFrame.Position = UDim2.new(0, 323, 0, 8)

    SliderBox.Name = "SliderBox"
    SliderBox.Parent = BoxFrame
    SliderBox.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
    SliderBox.BackgroundTransparency = 1.000
    SliderBox.Position = UDim2.new(0, 0, 0, 1.65)
    SliderBox.Size = UDim2.new(0, 50, 0, 15)
    SliderBox.ClearTextOnFocus = false
    SliderBox.Font = Enum.Font.Code
    SliderBox.Text = tostring(Value)
    SliderBox.TextColor3 = Color3.fromRGB(200, 200, 200)
    SliderBox.TextSize = 10.000
    SliderBox.TextTransparency = 0
    SliderBox.TextXAlignment = Enum.TextXAlignment.Center
    SliderBox.TextEditable = true

    SliderStroke.Name = "SliderStroke"
    SliderStroke.Parent = BoxFrame
    SliderStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    SliderStroke.Color = _G.Color 
    SliderStroke.LineJoinMode = Enum.LineJoinMode.Round
    SliderStroke.Thickness = 1
    SliderStroke.Transparency = 0.5
    SliderStroke.Enabled = true
    SliderStroke.Archivable = true

    UICorner_3.Parent = BoxFrame
    UICorner_3.CornerRadius = UDim.new(0, 2)

    -- ฟังก์ชั่นที่ปรับปรุง
    local UserInputService = game:GetService("UserInputService")
    local TweenService = game:GetService("TweenService")

    local function calculatePosition(inputX)
        local relativeX = inputX - SliderInput.AbsolutePosition.X
        return math.clamp(relativeX / SliderInput.AbsoluteSize.X, 0, 1)
    end

    local function updateSlider(percentage, animate)
        animate = animate ~= false
        Value = math.floor(percentage * (max - min) + min)
        Value = math.clamp(Value, min, max)

        local targetPos = UDim2.new(percentage, -9, 0, -7)  -- ปรับ offset ให้ center knob
        if animate then
            SliderCount:TweenPosition(targetPos, Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.1, true)
            Title_2:TweenPosition(targetPos, Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.1, true)
        else
            SliderCount.Position = targetPos
            Title_2.Position = targetPos
        end

        SliderBox.Text = tostring(Value)
        Title_2.Text = tostring(Value)
        pcall(callback, Value)
    end

    local function startDrag(input)
        if dragging then return end

        dragging = true

        -- Visual feedback
        TweenService:Create(SliderCount, TweenInfo.new(0.08, Enum.EasingStyle.Linear), {
            BackgroundTransparency = 0,
            Size = UDim2.new(0, 20, 0, 20)
        }):Play()

        TweenService:Create(Title_2, TweenInfo.new(0.12, Enum.EasingStyle.Linear), {
            AnchorPoint = Vector2.new(0.5, 0.5),
            TextSize = 13,
            BackgroundTransparency = 0,
            Size = UDim2.new(0, 25, 0, 25)
        }):Play()

        TweenService:Create(SliderBox, TweenInfo.new(0.08, Enum.EasingStyle.Linear), {
            TextTransparency = 0
        }):Play()

        TweenService:Create(SliderInput, TweenInfo.new(0.08, Enum.EasingStyle.Linear), {
            BackgroundTransparency = 0.5
        }):Play()

        TweenService:Create(SliderStroke, TweenInfo.new(0.08, Enum.EasingStyle.Linear), {
            Transparency = 0
        }):Play()

        -- อัปเดตทันที
        local percentage = calculatePosition(input.Position.X)
        updateSlider(percentage, false)

        -- Connections
        connections.inputChanged = UserInputService.InputChanged:Connect(function(deltaInput)
            if dragging and (deltaInput.UserInputType == Enum.UserInputType.MouseMovement or deltaInput.UserInputType == Enum.UserInputType.Touch) then
                local percentage = calculatePosition(deltaInput.Position.X)
                updateSlider(percentage, false)
            end
        end)
    end

    local function endDrag()
        if not dragging then return end

        dragging = false

        -- ล้าง connections
        for _, connection in pairs(connections) do
            if connection and connection.Connected then
                connection:Disconnect()
            end
        end
        connections = {}

        -- Reset visual feedback
        TweenService:Create(SliderCount, TweenInfo.new(0.08, Enum.EasingStyle.Linear), {
            BackgroundTransparency = 0.3,
            Size = UDim2.new(0, 18, 0, 18)
        }):Play()

        TweenService:Create(Title_2, TweenInfo.new(0.12, Enum.EasingStyle.Linear), {
            AnchorPoint = Vector2.new(0, 0),
            TextSize = 8,
            BackgroundTransparency = 1,
            Size = UDim2.new(0, 18, 0, 18)
        }):Play()

        TweenService:Create(SliderBox, TweenInfo.new(0.08, Enum.EasingStyle.Linear), {
            TextTransparency = 0.5
        }):Play()

        TweenService:Create(SliderInput, TweenInfo.new(0.08, Enum.EasingStyle.Linear), {
            BackgroundTransparency = 0.7
        }):Play()

        TweenService:Create(SliderStroke, TweenInfo.new(0.08, Enum.EasingStyle.Linear), {
            Transparency = 0.5
        }):Play()
    end

    -- Event connections
    SliderButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            startDrag(input)
        end
    end)

    UserInputService.InputEnded:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
            endDrag()
        end
    end)

    -- TextBox handling
    SliderBox.FocusLost:Connect(function(enterPressed)
        local inputValue = tonumber(SliderBox.Text)
        if inputValue then
            inputValue = math.clamp(inputValue, min, max)
            local percentage = (inputValue - min) / (max - min)
            updateSlider(percentage, true)
        else
            SliderBox.Text = tostring(Value)
        end
    end)

    -- ตั้งค่าเริ่มต้น
    local initialPercentage = (Value - min) / (max - min)
    updateSlider(initialPercentage, false)

    -- Return functions
    function sliderfunc:Set(newValue)
        newValue = math.clamp(newValue, min, max)
        local percentage = (newValue - min) / (max - min)
        updateSlider(percentage, true)
    end

    function sliderfunc:GetValue()
        return Value
    end

    return sliderfunc
end
function main:Textbox(text, disappear, callback)
    local Textbox = Instance.new("Frame")
    local TextboxCorner = Instance.new("UICorner")
    local Textboxx = Instance.new("Frame")
    local TextboxxCorner = Instance.new("UICorner")
    local TextboxxStroke = Instance.new("UIStroke") -- เพิ่มขอบ
    local TextboxLabel = Instance.new("TextLabel")
    local txtbtn = Instance.new("TextButton")
    local RealTextbox = Instance.new("TextBox")
    local UICorner = Instance.new("UICorner")

    -- ตั้งค่า Textbox Frame
    Textbox.Name = "Textbox"
    Textbox.Parent = MainFramePage
    Textbox.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    Textbox.BackgroundTransparency = 1 -- ทำให้โปร่งใสเพื่อให้สอดคล้องกับส่วนอื่น
    Textbox.Size = UDim2.new(0, 387, 0, 31)

    TextboxCorner.CornerRadius = UDim.new(0, 5)
    TextboxCorner.Name = "TextboxCorner"
    TextboxCorner.Parent = Textbox

    Textboxx.Name = "Textboxx"
    Textboxx.Parent = Textbox
    Textboxx.BackgroundTransparency = 1
    Textboxx.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    Textboxx.Position = UDim2.new(0, 1, 0, 1)
    Textboxx.Size = UDim2.new(0, 385, 0, 29)

    TextboxxCorner.CornerRadius = UDim.new(0, 5)
    TextboxxCorner.Name = "TextboxxCorner"
    TextboxxCorner.Parent = Textboxx

    TextboxxStroke.Name = "TextboxxStroke"
    TextboxxStroke.Parent = Textboxx
    TextboxxStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    TextboxxStroke.Color = _G.Color -- ใช้สีหลักจาก _G.Color (เช่น สีน้ำเงิน)
    TextboxxStroke.Thickness = 1
    TextboxxStroke.Transparency = 0

    TextboxLabel.Name = "TextboxLabel"
    TextboxLabel.Parent = Textbox
    TextboxLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    TextboxLabel.BackgroundTransparency = 1.000
    TextboxLabel.Position = UDim2.new(0, 15, 0, 0)
    TextboxLabel.Text = text
    TextboxLabel.Size = UDim2.new(0, 145, 0, 31)
    TextboxLabel.Font = Enum.Font.GothamSemibold
    TextboxLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextboxLabel.TextSize = 16.000
    TextboxLabel.TextTransparency = 0
    TextboxLabel.TextXAlignment = Enum.TextXAlignment.Left

    local RealTextboxStroke = Instance.new("UIStroke")
    RealTextboxStroke.Name = "RealTextboxStroke"
    RealTextboxStroke.Parent = RealTextbox
    RealTextboxStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    RealTextboxStroke.Color = _G.Color
    RealTextboxStroke.Thickness = 1
    RealTextboxStroke.Transparency = 0

    txtbtn.Name = "txtbtn"
    txtbtn.Parent = Textbox
    txtbtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    txtbtn.BackgroundTransparency = 1.000
    txtbtn.Position = UDim2.new(0, 1, 0, 1)
    txtbtn.Size = UDim2.new(0, 387, 0, 29)
    txtbtn.Font = Enum.Font.SourceSans
    txtbtn.Text = ""
    txtbtn.TextColor3 = Color3.fromRGB(0, 0, 0)
    txtbtn.TextSize = 14.000

    RealTextbox.Name = "RealTextbox"
    RealTextbox.Parent = Textbox
    RealTextbox.BackgroundColor3 = Color3.fromRGB(22, 22, 22)
    RealTextbox.BackgroundTransparency = 1
    RealTextbox.Position = UDim2.new(0, 320, 0, 4)
    RealTextbox.Size = UDim2.new(0, 50, 0, 24) 
    RealTextbox.Font = Enum.Font.GothamSemibold
    RealTextbox.Text = ""
    RealTextbox.TextColor3 = Color3.fromRGB(225, 225, 225)
    RealTextbox.TextSize = 11.000
    RealTextbox.TextTransparency = 0

    RealTextbox.FocusLost:Connect(function()
        local inputText = RealTextbox.Text
        if #inputText > 0 then
            callback(inputText) -- ส่งข้อความไปให้ callback
        end
        if disappear then
            Textbox:Destroy() -- ลบทั้ง Frame ถ้า disappear เป็น true
        end
        -- ไม่ล้าง RealTextbox.Text เพื่อให้ข้อความยังอยู่
    end)

    UICorner.CornerRadius = UDim.new(0, 5)
    UICorner.Parent = RealTextbox

    -- เพิ่ม Hover Effect ให้ Textboxx
    txtbtn.MouseEnter:Connect(function()
        TweenService:Create(
            Textboxx,
            TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {BackgroundColor3 = Color3.fromRGB(60, 60, 60)} -- สว่างขึ้นเมื่อ Hover
        ):Play()
    end)

    txtbtn.MouseLeave:Connect(function()
        TweenService:Create(
            Textboxx,
            TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {BackgroundColor3 = Color3.fromRGB(45, 45, 45)} -- กลับไปสีเดิม
        ):Play()
    end)
end

        function main:Label(text)
            local Label = Instance.new("TextLabel")
            local PaddingLabel = Instance.new("UIPadding")
            local labelfunc = {}

            Label.Name = "Label"
            Label.Parent = MainFramePage
            Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Label.BackgroundTransparency = 1.000
            Label.Size = UDim2.new(0, 410, 0, 20)
            Label.Font = Enum.Font.GothamSemibold
            Label.TextColor3 = Color3.fromRGB(225, 225, 225)
            Label.TextSize = 16.000
            Label.Text = text
            Label.TextXAlignment = Enum.TextXAlignment.Left

            PaddingLabel.PaddingLeft = UDim.new(0, 15)
            PaddingLabel.Parent = Label
            PaddingLabel.Name = "PaddingLabel"

            function labelfunc:Set(newtext)
                Label.Text = newtext
            end

            return labelfunc
        end

        function main:Label1(text)
            local Label1 = Instance.new("TextLabel")
            local PaddingLabel1 = Instance.new("UIPadding")
            local Label1func = {}

            Label1.Name = "Label1"
            Label1.Parent = MainFramePage
            Label1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Label1.BackgroundTransparency = 1.000
            Label1.Size = UDim2.new(0, 410, 0, 20)
            Label1.Font = Enum.Font.GothamSemibold
            Label1.TextColor3 = Color3.fromRGB(255, 255, 255)
            Label1.TextSize = 15.000
            Label1.Text = text
            Label1.TextXAlignment = Enum.TextXAlignment.Left

            PaddingLabel1.PaddingLeft = UDim.new(0, 15)
            PaddingLabel1.Parent = Label1
            PaddingLabel1.Name = "PaddingLabel1"
            function Label1func:Refresh(tochange)
                Label1.Text = tochange
            end

            return Label1func
        end

      function main:Textbox(text, disappear, callback)
        local Textbox = Instance.new("Frame")
        local TextboxCorner = Instance.new("UICorner")
        local Textboxx = Instance.new("Frame")
        local TextboxxCorner = Instance.new("UICorner")
        local TextboxxStroke = Instance.new("UIStroke") -- เพิ่มขอบ
        local TextboxLabel = Instance.new("TextLabel")
        local txtbtn = Instance.new("TextButton")
        local RealTextbox = Instance.new("TextBox")
        local UICorner = Instance.new("UICorner")

        -- ตั้งค่า Textbox Frame
        Textbox.Name = "Textbox"
        Textbox.Parent = MainFramePage
        Textbox.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        Textbox.BackgroundTransparency = 1 -- ทำให้โปร่งใสเพื่อให้สอดคล้องกับส่วนอื่น
        Textbox.Size = UDim2.new(0, 387, 0, 31)

        TextboxCorner.CornerRadius = UDim.new(0, 5)
        TextboxCorner.Name = "TextboxCorner"
        TextboxCorner.Parent = Textbox

        Textboxx.Name = "Textboxx"
        Textboxx.Parent = Textbox
        Textboxx.BackgroundTransparency = 1
        Textboxx.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        Textboxx.Position = UDim2.new(0, 1, 0, 1)
        Textboxx.Size = UDim2.new(0, 385, 0, 29)

        TextboxxCorner.CornerRadius = UDim.new(0, 5)
        TextboxxCorner.Name = "TextboxxCorner"
        TextboxxCorner.Parent = Textboxx

        TextboxxStroke.Name = "TextboxxStroke"
        TextboxxStroke.Parent = Textboxx
        TextboxxStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
        TextboxxStroke.Color = _G.Color -- ใช้สีหลักจาก _G.Color (เช่น สีน้ำเงิน)
        TextboxxStroke.Thickness = 1
        TextboxxStroke.Transparency = 0

        TextboxLabel.Name = "TextboxLabel"
        TextboxLabel.Parent = Textbox
        TextboxLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        TextboxLabel.BackgroundTransparency = 1.000
        TextboxLabel.Position = UDim2.new(0, 15, 0, 0)
        TextboxLabel.Text = text
        TextboxLabel.Size = UDim2.new(0, 145, 0, 31)
        TextboxLabel.Font = Enum.Font.GothamSemibold
        TextboxLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        TextboxLabel.TextSize = 16.000
        TextboxLabel.TextTransparency = 0
        TextboxLabel.TextXAlignment = Enum.TextXAlignment.Left

        local RealTextboxStroke = Instance.new("UIStroke")
        RealTextboxStroke.Name = "RealTextboxStroke"
        RealTextboxStroke.Parent = RealTextbox
        RealTextboxStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
        RealTextboxStroke.Color = _G.Color
        RealTextboxStroke.Thickness = 1
        RealTextboxStroke.Transparency = 0


        txtbtn.Name = "txtbtn"
        txtbtn.Parent = Textbox
        txtbtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        txtbtn.BackgroundTransparency = 1.000
        txtbtn.Position = UDim2.new(0, 1, 0, 1)
        txtbtn.Size = UDim2.new(0, 387, 0, 29)
        txtbtn.Font = Enum.Font.SourceSans
        txtbtn.Text = ""
        txtbtn.TextColor3 = Color3.fromRGB(0, 0, 0)
        txtbtn.TextSize = 14.000

        RealTextbox.Name = "RealTextbox"
        RealTextbox.Parent = Textbox
        RealTextbox.BackgroundColor3 = Color3.fromRGB(22, 22, 22)
        RealTextbox.BackgroundTransparency = 1
        RealTextbox.Position = UDim2.new(0, 320, 0, 4)
        RealTextbox.Size = UDim2.new(0, 50, 0, 24) 
        RealTextbox.Font = Enum.Font.GothamSemibold
        RealTextbox.Text = ""
        RealTextbox.TextColor3 = Color3.fromRGB(225, 225, 225)
        RealTextbox.TextSize = 11.000
        RealTextbox.TextTransparency = 0

        RealTextbox.FocusLost:Connect(function()
            callback(RealTextbox.Text)

        end)

        UICorner.CornerRadius = UDim.new(0, 5)
        UICorner.Parent = RealTextbox

        -- เพิ่ม Hover Effect ให้ Textboxx
        txtbtn.MouseEnter:Connect(function()
            TweenService:Create(
                Textboxx,
                TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {BackgroundColor3 = Color3.fromRGB(60, 60, 60)} -- สว่างขึ้นเมื่อ Hover
            ):Play()
        end)

        txtbtn.MouseLeave:Connect(function()
            TweenService:Create(
                Textboxx,
                TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {BackgroundColor3 = Color3.fromRGB(45, 45, 45)} -- กลับไปสีเดิม
            ):Play()
        end)
    end

        function main:Label(text)
            local Label = Instance.new("TextLabel")
            local PaddingLabel = Instance.new("UIPadding")
            local labelfunc = {}

            Label.Name = "Label"
            Label.Parent = MainFramePage
            Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Label.BackgroundTransparency = 1.000
            Label.Size = UDim2.new(0, 410, 0, 20)
            Label.Font = Enum.Font.GothamSemibold
            Label.TextColor3 = Color3.fromRGB(225, 225, 225)
            Label.TextSize = 16.000
            Label.Text = text
            Label.TextXAlignment = Enum.TextXAlignment.Left

            PaddingLabel.PaddingLeft = UDim.new(0, 15)
            PaddingLabel.Parent = Label
            PaddingLabel.Name = "PaddingLabel"

            function labelfunc:Set(newtext)
                Label.Text = newtext
            end

            return labelfunc
        end

        function main:Label1(text)
            local Label1 = Instance.new("TextLabel")
            local PaddingLabel1 = Instance.new("UIPadding")
            local Label1func = {}

            Label1.Name = "Label1"
            Label1.Parent = MainFramePage
            Label1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Label1.BackgroundTransparency = 1.000
            Label1.Size = UDim2.new(0, 410, 0, 20)
            Label1.Font = Enum.Font.GothamSemibold
            Label1.TextColor3 = Color3.fromRGB(255, 255, 255)
            Label1.TextSize = 15.000
            Label1.Text = text
            Label1.RichText = true
            Label1.TextXAlignment = Enum.TextXAlignment.Left

            PaddingLabel1.PaddingLeft = UDim.new(0, 15)
            PaddingLabel1.Parent = Label1
            PaddingLabel1.Name = "PaddingLabel1"
            function Label1func:Refresh(tochange)
                Label1.Text = tochange
            end

            return Label1func
        end

        function main:Dis(text, display)
            local Label1 = Instance.new("TextLabel")
            local PaddingLabel1 = Instance.new("UIPadding")
            local Label1func = {}

            Label1.Name = "Label1"
            Label1.Parent = MainFramePage
            Label1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Label1.BackgroundTransparency = 1.000
            Label1.Size = UDim2.new(0, 410, 0, 20)
            Label1.Font = Enum.Font.GothamSemibold
            Label1.TextColor3 = Color3.fromRGB(255, 255, 255)
            Label1.TextSize = 15.000
            Label1.Text = text
            Label1.TextXAlignment = Enum.TextXAlignment.Left

            Labeld.Name = "Labeld"
            Labeld.Parent = MainFramePage
            Labeld.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Labeld.BackgroundTransparency = 1.000
            Labeld.Size = UDim2.new(0, 410, 0, 20)
            Labeld.Font = Enum.Font.GothamSemibold
            Labeld.TextColor3 = _G.Color 
            Labeld.TextSize = 15.000
            Labeld.Text = display or ""
            Labeld.TextXAlignment = Enum.TextXAlignment.Left

            PaddingLabel1.PaddingLeft = UDim.new(0, 15)
            PaddingLabel1.Parent = Label1
            PaddingLabel1.Name = "PaddingLabel1"
            function Label1func:Refresh(tochange)
                Label1.Text = tochange
            end

            return Label1func
        end

        function main:Seperator(text)
            task.wait(0.1)
            local Seperator = Instance.new("Frame")
            local Sep1 = Instance.new("Frame")
            local Sep2 = Instance.new("TextLabel")
            local Sep3 = Instance.new("Frame")

            Seperator.Name = "Seperator"
            Seperator.Parent = MainFramePage
            Seperator.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Seperator.BackgroundTransparency = 1.000
            Seperator.Size = UDim2.new(0, 310, 0, 20)

            Sep1.Name = "Sep1"
            Sep1.Parent = Seperator
            Sep1.BackgroundColor3 = Color3.new(125, 125, 125)
            Sep1.BorderSizePixel = 0
            Sep1.Position = UDim2.new(0, 0, 0, 10)
            Sep1.Size = UDim2.new(0, 80, 0, 1)

            Sep2.Name = "Sep2"
            Sep2.Parent = Seperator
            Sep2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Sep2.BackgroundTransparency = 1.000
            Sep2.Position = UDim2.new(0, 140, 0, 0)
            Sep2.Size = UDim2.new(0, 100, 0, 20)
            Sep2.Font = Enum.Font.GothamSemibold
            Sep2.Text = text
            Sep2.TextColor3 = Color3.fromRGB(255, 255, 255)
            Sep2.TextSize = 14.000

            Sep3.Name = "Sep3"
            Sep3.Parent = Seperator
            Sep3.BackgroundColor3 = Color3.new(125, 125, 125)
            Sep3.BorderSizePixel = 0
            Sep3.Position = UDim2.new(0, 300, 0, 10)
            Sep3.Size = UDim2.new(0, 80, 0, 1)
        end

        function main:Line()
            local Linee = Instance.new("Frame")
            local Line = Instance.new("Frame")

            Linee.Name = "Linee"
            Linee.Parent = MainFramePage
            Linee.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Linee.BackgroundTransparency = 1.000
            Linee.Position = UDim2.new(0, 0, 0.119999997, 0)
            Linee.Size = UDim2.new(0, 10, 0, 10)

            Line.Name = "Line"
            Line.Parent = Linee
            Line.BackgroundColor3 = Color3.new(125, 125, 125)
            Line.BorderSizePixel = 0
            Line.Position = UDim2.new(0, 0, 0, 10)
            Line.Size = UDim2.new(0, 390, 0, 1)
        end

        return main
    end
    return uitab
end

local Library = Update:Window("Vector Hub", "", "", Enum.KeyCode.F1)
local page15 = Library:Tab("Status", "rbxassetid://16149111731")
local page3 = Library:Tab("Class","rbxassetid://11446835336")
local page1 = Library:Tab("General", "rbxassetid://6034798461")
local page4 = Library:Tab("Teleport","rbxassetid://12689978575")
local page2 = Library:Tab("Misc", "rbxassetid://11447063791")

page15:Seperator("Information")
page15:Label("[Username] : " .. LocalPlayer.DisplayName)
local TimeLabel = page15:Label("..")
local function UpdateTime()
    local GameTime = math.floor(Workspace.DistributedGameTime + 0.5)
    local Hour = math.floor(GameTime / 3600) % 24
    local Minute = math.floor(GameTime / 60) % 60
    local Second = GameTime % 60
    TimeLabel:Set(string.format("[GameTime] : %02d:%02d:%02d", Hour, Minute, Second))
end

spawn(function()
    while true do
        pcall(UpdateTime)
        wait(2)
    end
end)

local FpsLabel = page15:Label1("Client")
local PingLabel = page15:Label1("Client")

        
spawn(function()
    while true do
        local fps = math.floor(Workspace:GetRealPhysicsFPS())
        FpsLabel:Refresh("[Fps] : " .. fps)
        
        local success, ping = pcall(function()
            return Stats.Network.ServerStatsItem["Data Ping"]:GetValueString()
        end)
        if success then
            PingLabel:Refresh("[Ping] : " .. ping)
        end
        wait(1)
    end
end)

page15:Label("Join Discord For News\nเข้าดิสคอร์ดเพื่อข่าวสารต่างๆ")
        page15:Button("Copy Link Discord\nก็อปปี้ลิ้งดิสคอร์ด",function()
            setclipboard("https://discord.gg/977JQXX82w")
        game:GetService("StarterGui"):SetCore("SendNotification",{Title = "VectorHub",Text = "คัดลอกเรียบร้อยแล้ว",Icon = "rbxassetid://16129235054",Duration = 3})
    end)
local function getAxe()
    local inventory = LocalPlayer:WaitForChild("Inventory")
    return inventory:FindFirstChild("Old Axe") or 
           inventory:FindFirstChild("Good Axe") or
           inventory:FindFirstChild("Strong Axe") or
           inventory:FindFirstChild("Ice Axe") or
           inventory:FindFirstChild("Chainsaw") or 
           inventory:FindFirstChild("Spear") or 
           inventory:FindFirstChild("Katana") or 
           inventory:FindFirstChild("Laser Sword") or 
           inventory:FindFirstChild("Ice Sword") or 
           inventory:FindFirstChild("Morningstar") 
end

local function getOwnerID(axe)
    return axe and axe:FindFirstChild("Owner") and axe.Owner.Value or "8847500793"
end

local function createHighlight(target, color)
    if target:FindFirstChild("Highlight") then
        return target.Highlight
    end
    
    local highlight = Instance.new("Highlight")
    highlight.Parent = target
    highlight.FillColor = color or Color3.fromRGB(0, 255, 0)
    highlight.OutlineColor = color or Color3.fromRGB(0, 255, 0)
    highlight.FillTransparency = 0.7
    highlight.OutlineTransparency = 0
    return highlight
end

local function equipAxe(axe)
    if not axe then return false end
    return pcall(function()
        ReplicatedStorage:WaitForChild("RemoteEvents"):WaitForChild("EquipItemHandle"):FireServer("FireAllClients", axe)
    end)
end

local function damageTarget(target, axe, hitCounter, ownerID)
    if not target or not target.Parent or not axe then
        return false
    end
    
    local pivot = target:GetPivot()
    local offset = Vector3.new(math.random(-5, 5), 3, math.random(-5, 5))
    local cframe = CFrame.new(pivot.Position + offset, pivot.Position)
    
    return pcall(function()
        return ReplicatedStorage.RemoteEvents.ToolDamageObject:InvokeServer(target, axe, hitCounter .. "_" .. ownerID, cframe)
    end)
end
page4:Seperator("Teleport|เทเลพอร์ต")
spawn(function()
    pcall(function()
        local Players = game:GetService("Players")
        local RunService = game:GetService("RunService")
        local LocalPlayer = Players.LocalPlayer
        
        local function setupCharacter(Character)
            if not Character then return end

            local HRP = Character:WaitForChild("HumanoidRootPart", 5)
            local Humanoid = Character:WaitForChild("Humanoid", 5)

            if not HRP or not Humanoid then
                warn("HumanoidRootPart or Humanoid not found!")
                return
            end
            
            local function enableAntiFall()
                Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, false)
                Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall, false)
            end

            local function disableAntiFall()
                Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, true)
                Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall, true)
            end

            local function cancelFallState()
                if Humanoid:GetState() == Enum.HumanoidStateType.FallingDown or 
                   Humanoid:GetState() == Enum.HumanoidStateType.Freefall then
                    Humanoid:ChangeState(Enum.HumanoidStateType.Running)
                end
            end
            
            local steppedConnection
            steppedConnection = RunService.Stepped:Connect(function()
                if not Character.Parent or not LocalPlayer.Character or LocalPlayer.Character ~= Character then
                    steppedConnection:Disconnect()
                    return
                end

                if _G.Explorer then
                    if not Character.HumanoidRootPart:FindFirstChild("BodyClip") then
                        local Noclip = Instance.new("BodyVelocity")
                        Noclip.Name = "BodyClip"
                        Noclip.Parent = Character.HumanoidRootPart
                        Noclip.MaxForce = Vector3.new(100000, 100000, 100000)
                        Noclip.Velocity = Vector3.new(0, 0, 0)
                    end
                    
                    for _, v in pairs(Character:GetDescendants()) do
                        if v:IsA("BasePart") then
                            v.CanCollide = false    
                        end
                    end
                    
                    if not Character:FindFirstChild("Highlight") then
                        local Highlight = Instance.new("Highlight")
                        Highlight.FillColor = Color3.new(0, 0, 0)
                        Highlight.OutlineColor = Color3.new(0, 0, 1)
                        Highlight.FillTransparency = 0.5
                        Highlight.OutlineTransparency = 0 
                        Highlight.Parent = Character
                    end
                    
                    enableAntiFall()
                    cancelFallState()
                else
                    if Character.HumanoidRootPart:FindFirstChild("BodyClip") then
                        Character.HumanoidRootPart:FindFirstChild("BodyClip"):Destroy()
                    end
                    if Character:FindFirstChild("Highlight") then
                        Character:FindFirstChild("Highlight"):Destroy()
                    end
                    disableAntiFall()
                end
            end)
        end
        
        if LocalPlayer.Character then
            setupCharacter(LocalPlayer.Character)
        end
        
        LocalPlayer.CharacterAdded:Connect(function(newCharacter)
            setupCharacter(newCharacter)
        end)
        
        LocalPlayer.AncestryChanged:Connect(function()
            if not LocalPlayer:IsDescendantOf(game) then
                if steppedConnection then
                    steppedConnection:Disconnect()
                end
            end
        end)
    end)
end)

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")

local map = workspace:FindFirstChild("Map")
local campground = map and map:FindFirstChild("Campground")
local mainFire = campground and campground:FindFirstChild("MainFire")
local centerPart = mainFire and mainFire:FindFirstChild("Center")
local center = centerPart and centerPart.Position or Vector3.new(0, 0, 0)


local config = {
    radius = 10,          -- รัศมีเริ่มต้น
    radiusStep = 30,      -- ขยายรัศมีครั้งละเท่าไหร่
    angleStep = 30,       -- องศาต่อหนึ่ง tween
    speed = 0.8,          -- ความเร็วของ tween (วินาที)
    fixedHeight = 50,     -- ความสูงคงที่
    teleportOffset = 15   -- ระยะ offset เมื่อเทเลพอร์ต
}

local activeTween = nil 
local isExploring = false 

local function getCirclePos(angleDeg, radius)
    local rad = math.rad(angleDeg)
    local x = center.X + math.cos(rad) * radius
    local z = center.Z + math.sin(rad) * radius
    return Vector3.new(x, config.fixedHeight, z)
end

local function stopSpiral()
    if activeTween then
        activeTween:Cancel()
        activeTween = nil
    end
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        player.Character.HumanoidRootPart.CFrame = CFrame.new(center + Vector3.new(0, config.teleportOffset, 0))
    end
end

local function startSpiral()
    if isExploring then return end 
    isExploring = true
    local currentRadius = config.radius

    spawn(function()
        while isExploring do
            for angle = 0, 360 - config.angleStep, config.angleStep do
                if not isExploring then break end

                local targetPos = getCirclePos(angle, currentRadius)
                activeTween = TweenService:Create(
                    hrp,
                    TweenInfo.new(config.speed, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut),
                    { CFrame = CFrame.new(targetPos) }
                )
                activeTween:Play()
                activeTween.Completed:Wait()
                activeTween = nil
            end
            currentRadius = currentRadius + config.radiusStep
        end
    end)
end

page4:Toggle("Auto Explorer\nออโต้สำรวจแมพ", false, function(v)
    _G.Explorer = v
    if v then
        startSpiral()
    else
        isExploring = false
        stopSpiral()
    end
end)

page3:Seperator("Lobby|ล็อบบี้")

local Class = {"Camper","Scavenger","Cook","Decorator","Hunter","Medic","Lumberjack","Ranger","Base Defender","Berserker","Alien","Farmer","Brawler","Blacksmith","Assassin","Cybrog"}
page3:Dropdown("Select Class\nเลือกอาชีพ",Class,function(v)
 _G.SelectClass = v
end)

page3:Toggle("Buy Class Selected\nซื้ออาชีพที่เลือก", false ,function(v)
 _G.BuyClass = v
end) 

page3:Toggle("Equip Class Selected\nใช้อาชีพที่เลือก", false ,function(v)
 _G.EquipClass = v
end) 

spawn(function()
 while task.wait() do 
    if _G.BuyClass then 
        game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("RequestPurchaseClass"):FireServer(_G.SelectClass)
    end
 end
end)

spawn(function()
 while task.wait() do 
    if _G.EquipClass then 
        game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("UpdateEquipped"):FireServer(_G.SelectClass)
    end
 end
end)

page3:Button("UnEquip Class\nถอดอาชีพ",function()
game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("UpdateEquipped"):FireServer("None")
end)

page3:Seperator("Price|ราคา")
page3:Label("Camper: 10 Diamond")
page3:Label("Scavenger: 25 Diamond")
page3:Label("Cook: 40 Diamond")
page3:Label("Decorator: 40 Diamond")
page3:Label("Hunter: 40 Diamond")
page3:Label("Medic: 40 Diamond")
page3:Label("Lumberjack: 70 Diamond")
page3:Label("Ranger: 70 Diamond")
page3:Label("Base Defender: 40 Diamond")
page3:Label("Berserker: 100 Diamond")
page3:Label("Alien: 100 Diamond")
page3:Label("Farmer: 80 Diamond")
page3:Label("Brawler: 100 Diamond")
page3:Label("Blacksmith: 200 Diamond")
page3:Label("Assassin: 500 Diamond")
page3:Label("Cyborg: 600 Diamond")


page1:Seperator("Farm|ฟาร์ม")
page1:Slider("DistanceFarmTree\nระยะการฟาร์มต้นไม้", 1, 600, 100, function(v)
    _G.DistanceFarmtree = v
end)

page1:Toggle("Farming Tree\nฟาร์มต้นไม้", false, function(v)
    _G.farmtree = v
end)

local AllfolderNames = {"Landmarks", "Ground", "Foliage", "Campground", "Boundaries", "Blockers"}

local function isWithinDistance(tree)
    local player = game.Players.LocalPlayer
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return false
    end
    
    local humanoidRootPart = player.Character.HumanoidRootPart
    local treePosition
    if tree:IsA("Model") then
        if tree.PrimaryPart then
            treePosition = tree.PrimaryPart.Position
        else
            local treePart = tree:FindFirstChildOfClass("Part")
            if treePart then
                treePosition = treePart.Position
            else
                return false
            end
        end
    elseif tree:IsA("Part") then
        treePosition = tree.Position
    else
        return false
    end
    
    local distance = (humanoidRootPart.Position - treePosition).Magnitude
    return distance <= _G.DistanceFarmtree
end

spawn(function()
    while true do
        if _G.farmtree then
            local axe = getAxe()
            if axe then
                local ownerID = getOwnerID(axe)
                equipAxe(axe)
                
                local treesToFarm = {}

                for _, folderName in pairs(AllfolderNames) do
                    local folder = workspace.Map:FindFirstChild(folderName)
                    if folder then
                        for _, tree in pairs(folder:GetChildren()) do
                            if tree.Name == "Small Tree" and tree.Parent then
                                -- เช็คระยะห่างก่อนเพิ่มเข้าลิสต์
                                if isWithinDistance(tree) then
                                    table.insert(treesToFarm, tree)
                                end
                            end
                        end
                    end
                end

                -- 🔹 จำกัดรอบละ 10 ต้น
                local maxPerRound = 10
                local processed = 0

                for _, tree in pairs(treesToFarm) do
                    if not _G.farmtree or processed >= maxPerRound then break end
                    
                    -- เช็คระยะห่างอีกครั้งก่อนเริ่มฟาร์ม (เผื่อผู้เล่นเดินไป)
                    if isWithinDistance(tree) then
                        processed = processed + 1
                        spawn(function()
                            local highlight = createHighlight(tree, Color3.fromRGB(0, 255, 0))
                            local hitCounter = 1
                            
                            while _G.farmtree and tree.Parent and hitCounter < 50 do
                                -- เช็คระยะห่างอีกครั้งระหว่างฟาร์ม
                                if not isWithinDistance(tree) then
                                    break
                                end
                                
                                if not damageTarget(tree, axe, hitCounter, ownerID) then
                                    break
                                end
                                hitCounter = hitCounter + 1
                                task.wait(0.01)
                            end
                            
                            if highlight then
                                highlight:Destroy()
                            end
                        end)
                    end
                end

            end
        end
        task.wait(1)
    end
end)
page1:Slider("DistanceKillEnemies\nระยะการฆ่าศัตรู", 1, 600, 100, function(v)
    _G.DistanceKillenemies = v
end)

page1:Toggle("Kill Enemies All\nฆ่าศัตรูทั้งหมดรวมถึงสัตว์", false, function(v)
    _G.KillEnemiesAll = v
end)

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RemoteEvents = game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents")
local ToolDamageObject = RemoteEvents:WaitForChild("ToolDamageObject")

-- หา Part สำหรับโจมตี
local function getAttackPart(model)
    if model:IsA("Model") then
        return model.PrimaryPart or model:FindFirstChildWhichIsA("BasePart")
    elseif model:IsA("BasePart") then
        return model
    end
    return nil
end

-- ฟังก์ชันเช็คระยะห่าง
local function isWithinKillDistance(target)
    if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return false
    end
    
    local humanoidRootPart = LocalPlayer.Character.HumanoidRootPart
    local targetPart = getAttackPart(target)
    
    if not targetPart then
        return false
    end
    
    local distance = (humanoidRootPart.Position - targetPart.Position).Magnitude
    return distance <= _G.DistanceKillenemies
end

-- ฟังก์ชันโจมตี Target ทั่วไป
local function huntTarget(target, axe, ownerID, color)
    if not target or not target.Parent or not target:FindFirstChild("HealthBar") then
        return
    end

    spawn(function()
        local highlight = createHighlight(target, color)
        local hitCounter = 1
        
        while target.Parent and target:FindFirstChild("HealthBar") and _G.KillEnemiesAll and hitCounter < 100 do
            -- เช็คระยะห่างระหว่างการโจมตี
            if not isWithinKillDistance(target) then
                break
            end
            
            if not damageTarget(target, axe, hitCounter, ownerID) then
                break
            end
            hitCounter = hitCounter + 1
            task.wait(0.05)
        end
        
        if highlight then
            highlight:Destroy()
        end
    end)
end

-- 🔹 โจมตี IceBlock (เช็คระยะด้วย)
local function attackIceBlock(axe, ownerID)
    local cultist = workspace:FindFirstChild("Characters") and workspace.Characters:FindFirstChild("Cultist")
    if not cultist then return end

    local iceBlock = cultist:FindFirstChild("IceBlock")
    if not iceBlock then return end
    
    -- เช็คระยะห่างกับ IceBlock
    if not isWithinKillDistance(iceBlock) then return end

    -- หา BasePart ทั้งหมดใน IceBlock
    local blockParts = {}
    for _, part in ipairs(iceBlock:GetChildren()) do
        if part:IsA("BasePart") then
            table.insert(blockParts, part)
        end
    end
    if #blockParts == 0 then return end

    spawn(function()
        local hitCounter = 0
        while _G.KillEnemiesAll and iceBlock.Parent and hitCounter < 200 do
            -- เช็คระยะห่างระหว่างโจมตี IceBlock
            if not isWithinKillDistance(iceBlock) then
                break
            end
            
            hitCounter = hitCounter + 1

            -- เลือก Block สำหรับโจมตี
            local targetPart = blockParts[math.random(1, #blockParts)]
            if not targetPart or not targetPart.Parent then break end
            local attackCFrame = targetPart.CFrame

            local args = {
                targetPart, 
                axe,
                ownerID,
                attackCFrame
            }

            pcall(function()
                ToolDamageObject:InvokeServer(unpack(args))
            end)

            task.wait(0.05)
        end
    end)
end

-- รายชื่อศัตรูที่ไม่โจมตี
local excludeNames = {
    "Pelt Trader","Dino Kid","Kraken Kid","Squid Kid","Koala Kid",
    "Lost Child","Lost Child1","Lost Child2","Lost Child3","Lost Child4","Deer"
}

local function shouldExclude(targetName)
    targetName = string.lower(targetName):gsub("%s+", "")
    for _, excludeName in pairs(excludeNames) do
        if targetName == string.lower(excludeName):gsub("%s+", "") then
            return true
        end
    end
    return false
end

local function getDistanceToTarget(target)
    local root = getAttackPart(target)
    if not root or not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return math.huge
    end
    local playerPos = LocalPlayer.Character.HumanoidRootPart.Position
    local targetPos = root.Position
    return (playerPos - targetPos).Magnitude
end

local function sortEnemiesByDistance(enemies)
    local enemyList = {}
    for _, enemy in pairs(enemies) do
        if enemy:IsA("Model") and not shouldExclude(enemy.Name) and enemy:FindFirstChild("HealthBar") then
            -- เช็คระยะห่างก่อนเพิ่มเข้าลิสต์
            if isWithinKillDistance(enemy) then
                table.insert(enemyList, {
                    enemy = enemy,
                    distance = getDistanceToTarget(enemy)
                })
            end
        end
    end
    table.sort(enemyList, function(a, b)
        return a.distance < b.distance
    end)
    local sortedEnemies = {}
    for _, data in ipairs(enemyList) do
        table.insert(sortedEnemies, data.enemy)
    end
    return sortedEnemies
end

spawn(function()
    while true do
        if _G.KillEnemiesAll then
            local axe = getAxe()
            if axe then
                local ownerID = getOwnerID(axe)
                equipAxe(axe)
                
                -- โจมตี IceBlock ก่อน (ถ้าอยู่ในระยะ)
                attackIceBlock(axe, ownerID)

                -- จากนั้นโจมตีศัตรูปกติ (เฉพาะที่อยู่ในระยะ)
                local allEnemies = Workspace.Characters:GetChildren()
                local sortedEnemies = sortEnemiesByDistance(allEnemies)

                local maxPerRound = 10
                local processed = 0

                for _, target in ipairs(sortedEnemies) do
                    if not _G.KillEnemiesAll or processed >= maxPerRound then break end
                    
                    -- เช็คระยะห่างอีกครั้งก่อนโจมตี
                    if target.Parent and target:FindFirstChild("HealthBar") and isWithinKillDistance(target) then
                        processed = processed + 1
                        huntTarget(target, axe, ownerID, Color3.fromRGB(255, 0, 0))
                    end
                end
            end
        end
        task.wait(0.5)
    end
end)


page1:Toggle("Auto Farm Flower\nฟาร์มดอกไม้", false, function(v)
    _G.FarmFlower = v
end)

spawn(function()
    while task.wait(.1) do
        if _G.FarmFlower then
            local player = game.Players.LocalPlayer
            local character = player.Character or player.CharacterAdded:Wait()
            local hrp = character:FindFirstChild("HumanoidRootPart")
            
            if hrp then
                for _, flower in pairs(workspace.Map.Landmarks:GetDescendants()) do
                    if not _G.FarmFlower then break end
                    
                    if flower.Name == "Flower" and flower:FindFirstChild("HRP") then
                        hrp.CFrame = flower.HRP.CFrame + Vector3.new(0, 3, 0)
                        local args = {flower}
                        pcall(function()
                            game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("RequestPickFlower"):InvokeServer(unpack(args))
                        end)
                    end
                end
            end
        end
    end
end)

page1:Toggle("Auto Farm Coin\nฟาร์มเหรียญ", false, function(v)
    _G.Farmcoin = v
end)

spawn(function()
    while task.wait(.1) do
        if _G.Farmcoin then
            local player = game.Players.LocalPlayer
            local character = player.Character or player.CharacterAdded:Wait()
            local hrp = character:FindFirstChild("HumanoidRootPart")
            
            if hrp and workspace:FindFirstChild("Items") then
                local coinStack = workspace.Items:FindFirstChild("Coin Stack")
                
                if coinStack then
                    -- หา CFrame ของ Coin Stack
                    local targetCFrame = nil
                    if coinStack.PrimaryPart then
                        targetCFrame = coinStack.PrimaryPart.CFrame
                    elseif coinStack:FindFirstChild("HRP") then
                        targetCFrame = coinStack.HRP.CFrame
                    else
                        local firstPart = coinStack:FindFirstChildWhichIsA("BasePart")
                        if firstPart then
                            targetCFrame = firstPart.CFrame
                        end
                    end
                    
                    -- ถ้ามีตำแหน่งให้เทเลพอร์ต
                    if targetCFrame then
                        hrp.CFrame = targetCFrame + Vector3.new(0, 5, 0)
                        wait(0.5)
                        
                        -- เก็บเหรียญ
                        local args = {coinStack}
                        pcall(function()
                            game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("RequestCollectCoints"):InvokeServer(unpack(args))
                        end)
                        pcall(function()
                            game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("RequestCollectCoints"):FireServer(unpack(args))
                        end)
                    end
                end
            end
        end
    end
end)

page1:Toggle("Auto Farm Chest + Store Items\nออโต้ฟาร์มกล่อง + เก็บของใส่ถุง", false, function(v)
    _G.FarmChest = v
end)

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = game.Players.LocalPlayer
local itemsFolder = workspace:WaitForChild("Items", 5)

_G.FastMode = _G.FastMode or true -- โหมดเร็ว (ไม่รอของ spawn)
_G.ShowLogs = _G.ShowLogs or true -- แสดงข้อความ
_G.UseTeleport = _G.UseTeleport or true -- ใช้ Teleport หรือไม่

-- ฟังก์ชัน Teleport ไปหากล่อง
local function teleportToChest(chest)
    local player = Players.LocalPlayer
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") and chest:FindFirstChild("Main") then
        local success, err = pcall(function()
            player.Character.HumanoidRootPart.CFrame = chest.Main.CFrame + Vector3.new(0, 5, 0)
        end)
        
        if success and _G.ShowLogs then
            print("🚀 TP ไปหา: " .. chest.Name)
        elseif not success and _G.ShowLogs then
            warn("❌ TP ล้มเหลว: " .. tostring(err))
        end
        
        return success
    end
    return false
end

-- ฟังก์ชันเก็บไอเท็มทั้งหมดในรัศมี 20 หน่วย
local function collectNearbyItems()
    local inventory = LocalPlayer:WaitForChild("Inventory")
    local sack = inventory:FindFirstChild("Old Sack") or inventory:FindFirstChild("Good Sack") or inventory:FindFirstChild("Giant Sack")
    if not sack then
        if _G.ShowLogs then warn("❌ ไม่พบ Sack ใน Inventory") end
        return
    end
    
    if not (LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")) then
        if _G.ShowLogs then warn("❌ ไม่พบตัวละครหรือ HumanoidRootPart") end
        return
    end

    local HumanoidRootPart = LocalPlayer.Character.HumanoidRootPart

    for _, item in pairs(itemsFolder:GetChildren()) do
        if not _G.FarmChest then break end
        
        if item:IsA("Model") or item:IsA("BasePart") then
            local distance
            pcall(function()
                distance = (HumanoidRootPart.Position - item:GetPivot().Position).Magnitude
            end)
            
            if distance and distance <= 20 then
                pcall(function()
                    ReplicatedStorage:WaitForChild("RemoteEvents"):WaitForChild("RequestBagStoreItem"):InvokeServer(sack, item)
                    if _G.ShowLogs then
                        print("👜 เก็บไอเท็ม: " .. item.Name)
                    end
                end)
            end
        end
    end
end

-- ฟังก์ชันเปิดกล่องทั้งหมดและเก็บไอเท็ม
local function openAllChestsAndCollect()
    if not _G.FarmChest then return end
    
    local chestCount = 0
    local successCount = 0
    local alreadyOpenedCount = 0
    
    for _, chest in pairs(workspace.Items:GetChildren()) do 
        if not _G.FarmChest then break end
        
        if string.find(chest.Name, "Chest") and not string.find(chest.Name, "Snow") and not string.find(chest.Name, "Alien") then 
            chestCount = chestCount + 1
            
            if chest:FindFirstChild("Main") and not chest:FindFirstChild("IceBlock") then
                if chest.Main:FindFirstChild("ProximityAttachment") then
                    local proximityInteraction = chest.Main.ProximityAttachment:FindFirstChild("ProximityInteraction")
                    if proximityInteraction then
                        local success, err = pcall(function()
                            if _G.UseTeleport then
                                teleportToChest(chest)
                                task.wait(0.2)
                            end
                            
                            fireproximityprompt(proximityInteraction)
                            successCount = successCount + 1
                            
                            if _G.ShowLogs then
                                print("🎁 เปิดกล่อง: " .. chest.Name)
                            end
                            
                            if not _G.FastMode then
                                task.wait(0.5)
                                collectNearbyItems()
                            end
                        end)
                        
                        if not success and _G.ShowLogs then
                            warn("❌ ไม่สามารถเปิดกล่อง " .. chest.Name .. ": " .. tostring(err))
                        end
                    end
                else
                    alreadyOpenedCount = alreadyOpenedCount + 1
                    if _G.ShowLogs then
                        print("📦 กล่องเปิดไปแล้ว: " .. chest.Name)
                    end
                end
            end
            
            task.wait(0.1)
        end
    end
    
    if _G.ShowLogs then
        print("📊 พบกล่อง: " .. chestCount .. " | เปิดได้: " .. successCount .. " | เปิดแล้ว: " .. alreadyOpenedCount)
      
    end
    
    if _G.FastMode and successCount > 0 then
        if _G.ShowLogs then
            print("⏳ รอของ spawn...")
        end
        task.wait(1)
        collectNearbyItems()
    end
    
    return successCount
end

-- ฟังก์ชันวนลูปฟาร์มไม่จำกัดรอบ
local function farmLoop()
    local cycleCount = 0
    
    while _G.FarmChest do
        cycleCount = cycleCount + 1
        local startTime = tick()
        
        if _G.ShowLogs then
            print("🚀 เริ่มรอบที่ " .. cycleCount)
        end
       
        local chestsOpened = openAllChestsAndCollect()
        if chestsOpened == 0 then
            if _G.ShowLogs then print("❌ ไม่พบกล่องให้เปิดอีกต่อไป") 
                game:GetService("StarterGui"):SetCore("SendNotification", {
            Icon = "rbxassetid://16129235054",
            Title = "Notify!",
            Text = "❌ No Chest\n❌ ไม่พบกล่อง",
            Duration = 5
        })
             end 
            break
        end
        
        local endTime = tick()
        local cycleTime = math.floor((endTime - startTime) * 100) / 100
        
        if _G.ShowLogs then
            print("⏱️ รอบที่ " .. cycleCount .. " เสร็จใน " .. cycleTime .. " วินาที")
            print("💤 รอ 1 วินาที ก่อนรอบใหม่...")
        end
        
        task.wait(1)
    end
    
    if _G.ShowLogs then
        print("🛑 หยุดฟาร์มแล้ว (รวม " .. cycleCount .. " รอบ)")
    end
end

-- เริ่มฟาร์มแบบวนลูปในเธรด
spawn(function()
    while true do
        if _G.FarmChest then
            farmLoop()
        end
        task.wait(0.1)
    end
end)


local itemsFolder = Workspace:FindFirstChild("Items")
local SelectedItems = {}
local itemList = {}
local itemDataMap = {}
page1:Seperator("Items|ไอเท็ม")
local itemDropdown = page1:MultiDropdown("SelectItems", {}, function(selectedList)
    SelectedItems = selectedList
    _G.SelectItems = selectedList
end)

local Methods = {"Campfire", "Around the campfire", "TableCrafting", "Players"}
page1:Dropdown("SelectMethodItems\nเลือกตำแหน่ง", Methods, function(v)
    _G.Method = v
end)

local function refreshItems()
    if not itemsFolder then
        warn("Items folder not found!")
        return
    end
    
    itemList = {}
    itemDataMap = {}
    itemDropdown:Clear()
    
    for _, item in pairs(itemsFolder:GetChildren()) do
        if item:IsA("Model") or item:IsA("BasePart") then
            local itemName = item.Name
            
            -- เช็คว่าเป็น Chest หรือไม่
            local isChest = string.find(itemName, "Chest")
            local canAdd = true

            if isChest then
                -- หา Main ของ Chest
                local main = item:FindFirstChild("Main")
                -- เช็ค ProximityPrompt
                if main and not main:FindFirstChildWhichIsA("ProximityPrompt", true) then
                    -- ถ้าไม่มี ProximityPrompt = Chest เปิดแล้ว → ข้าม
                    canAdd = false
                end
            end

            if canAdd then
                if itemDataMap[itemName] then
                    itemDataMap[itemName].Count = itemDataMap[itemName].Count + 1
                    table.insert(itemDataMap[itemName].Models, item)
                else
                    itemDataMap[itemName] = {
                        Name = itemName,
                        Count = 1,
                        Models = {item}
                    }
                end
            end
        end
    end
    
    for itemName, data in pairs(itemDataMap) do
        local displayName = data.Count > 1 and itemName .. " (x" .. data.Count .. ")" or itemName
        table.insert(itemList, displayName)
    end
    
    table.sort(itemList)
    
    for _, displayName in pairs(itemList) do
        itemDropdown:Add(displayName)
    end

end


page1:Button("Refresh Items\nรีเฟรชไอเท็ม", refreshItems)

local function getTargetCFrame()
    local targets = {
        ["Campfire"] = function()
            return Workspace.Map.Campground.MainFire.Center.CFrame * CFrame.new(0,15,0)
        end,
        ["Around the campfire"] = function()
            return Workspace.Map.Campground.CraftingBench.WoodSign.CFrame * CFrame.new(0, 0, 5)
        end,
        ["TableCrafting"] = function()
            return Workspace.Map.Campground.Scrapper.DashedLine.CFrame * CFrame.new(0,5,0)
        end,
        ["Players"] = function()
            return LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character.HumanoidRootPart.CFrame
        end
    }
    
    local method = targets[_G.Method]
    return method and method() or nil
end

page1:Toggle("BringItemsSelect\nดึงไอเท็มที่เลือก", false, function(v)
    _G.Bring = v
end)


local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local player = Players.LocalPlayer

local function bringItem(item, targetCFrame)
    if not item or not item.Parent or not targetCFrame then return false end
    local character = player.Character or player.CharacterAdded:Wait()
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return false end

    -- 🔹 1. Save current position
    local originalPosition = hrp.CFrame

    -- 🔹 2. Warp to item
    local itemRoot = item.PrimaryPart or item:FindFirstChild("HumanoidRootPart") or (item:IsA("BasePart") and item)
    if not itemRoot then return false end
    hrp.CFrame = itemRoot.CFrame + Vector3.new(0, -5, 0) -- วาร์ปไปเหนือ item 5 studs

    task.wait(0.1) -- รอให้เซิร์ฟเวอร์ sync ตำแหน่ง

    -- 🔹 3. Move item to targetCFrame + FireServer events
    local success = pcall(function()
        -- กำหนดตำแหน่ง item
        local finalPosition
        
        -- ตรวจสอบว่าเป็น Players method หรือไม่
        if _G.Method == "Players" then
            finalPosition = originalPosition
        else
            finalPosition = targetCFrame
        end
        
        if item.PrimaryPart then
            item:SetPrimaryPartCFrame(finalPosition)
        elseif item:FindFirstChild("HumanoidRootPart") then
            item.HumanoidRootPart.CFrame = finalPosition
        elseif item:IsA("BasePart") then
            item.CFrame = finalPosition
        end

        -- ยิง RemoteEvents จำลองการหยิบแล้ววาง
        local remoteEvents = ReplicatedStorage:WaitForChild("RemoteEvents")
        remoteEvents:WaitForChild("RequestStartDraggingItem"):FireServer(item)
        task.wait()
        remoteEvents:WaitForChild("StopDraggingItem"):FireServer(item)
    end)

    -- 🔹 4. Warp back to original position
    hrp.CFrame = originalPosition

    return success
end


local function getItemPosition(item)
    if item.PrimaryPart then
        return item.PrimaryPart.Position
    elseif item:FindFirstChild("HumanoidRootPart") then
        return item.HumanoidRootPart.Position
    elseif item:IsA("BasePart") then
        return item.Position
    end
    return nil
end

local lastBringCheck = 0
spawn(function()
    while task.wait(0.1) do
        if _G.Bring and _G.SelectItems and #_G.SelectItems > 0 and tick() - lastBringCheck > 0.3 then
            lastBringCheck = tick()
            
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                local targetCFrame = getTargetCFrame()
                if targetCFrame and itemsFolder then
                    local itemsBrought = 0
                    local maxItemsPerCycle = 50  -- จำกัดรอบละ 50 อัน
                    local maxDistance = 15  -- ระยะห่างสูงสุดที่จะไม่ดึง
                    
                    local selectedSet = {}
                    for _, itemName in pairs(_G.SelectItems) do
                        local cleanName = itemName:match("^(.+) %(x%d+%)$") or itemName
                        selectedSet[cleanName] = true
                    end
                    
                    for _, item in pairs(itemsFolder:GetChildren()) do
                        if not _G.Bring then break end
                        if itemsBrought >= maxItemsPerCycle then break end  -- หยุดเมื่อถึง 50 อัน
                        
                        if selectedSet[item.Name] and (item:IsA("Model") or item:IsA("BasePart")) then
                            local itemPosition = getItemPosition(item)
                            if itemPosition then
                                local distance = (itemPosition - targetCFrame.Position).Magnitude
                                -- ดึงเฉพาะไอเท็มที่อยู่ห่างมากกว่า 15 magnitude
                                if distance > maxDistance then
                                    if bringItem(item, targetCFrame) then
                                        itemsBrought = itemsBrought + 1
                                    end
                                end
                            end
                        end
                    end
                    
                    if itemsBrought > 0 then
                        print("Brought " .. itemsBrought .. " items this cycle (only items >15 distance)")
                    end
                end
            end
        end
    end
end)

page1:Toggle("Teleport To ItemsSelect\nเทเลพอร์ตไปหาไอเท็มที่เลือก", false, function(v)
    _G.BringP = v
end)

local currentItemIndex = 1
local lastTeleportCheck = 0

spawn(function()
    while true do
        if _G.BringP and _G.SelectItems and #_G.SelectItems > 0 and tick() - lastTeleportCheck > 0.8 then
            lastTeleportCheck = tick()
            
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and itemsFolder then
                local HumanoidRootPart = LocalPlayer.Character.HumanoidRootPart
                local targetItemName = _G.SelectItems[currentItemIndex]
                
                -- ลบ (x number) ออกจากชื่อถ้ามี
                local cleanName = targetItemName:match("^(.+) %(x%d+%)$") or targetItemName
                
                -- หาไอเท็มที่ใกล้ที่สุด
                local closestItem = nil
                local closestDistance = math.huge
                
                for _, item in pairs(itemsFolder:GetChildren()) do
                    if item.Name == cleanName and (item:IsA("Model") or item:IsA("BasePart")) then
                        local itemPos = item:IsA("Model") and item:GetPivot().Position or item.Position
                        local distance = (itemPos - HumanoidRootPart.Position).Magnitude
                        
                        if distance < closestDistance and distance > 8 then
                            closestDistance = distance
                            closestItem = item
                        end
                    end
                end
                
                if closestItem then
                    local itemPos = closestItem:IsA("Model") and closestItem:GetPivot().Position or closestItem.Position
                    HumanoidRootPart.CFrame = CFrame.new(itemPos + Vector3.new(0, 5, 0))
                end
                
                currentItemIndex = currentItemIndex + 1
                if currentItemIndex > #_G.SelectItems then
                    currentItemIndex = 1
                end
            end
        else
            currentItemIndex = 1
        end
        wait(0.3)
    end
end)



page1:Button("Instant E\nกดEครั้งเดียว", function()
    for _, descendant in pairs(Workspace:GetDescendants()) do 
        if descendant:IsA("ProximityPrompt") then
            descendant.HoldDuration = 0
        end
    end
    
    Workspace.DescendantAdded:Connect(function(descendant)
        if descendant:IsA("ProximityPrompt") then
            descendant.HoldDuration = 0
        end
    end)
end)

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer

-- RemoteEvents
local RemoteEvents = ReplicatedStorage:WaitForChild("RemoteEvents")
local StartDragRemote = RemoteEvents:WaitForChild("RequestStartDraggingItem")
local StopDragRemote = RemoteEvents:WaitForChild("StopDraggingItem")

-- Items Folder
local itemsFolder = Workspace:FindFirstChild("Items")

-- รายการไอเท็มเป้าหมาย
local FuelItems = {
    ["Log"] = true,
    ["Chair"] = true,
    ["Biofuel"] = true,
    ["Coal"] = true,
    ["Fuel Canister"] = true,
    ["Oil Barrel"] = true
}

-- จุดหมาย (Campfire)
local function getCampfireCFrame()
    local success, result = pcall(function()
        local campfire = workspace.Map.Campground.MainFire.Center
        return campfire.CFrame * CFrame.new(0, 15, 0)
    end)
    return success and result or nil
end

-- ฟังก์ชันเช็คระดับไฟ (แก้ไขแล้ว - แบบง่าย)
local function checkCampfireLevel()
    local fireLevel = workspace.Map.Campground.MainFire.Center.BillboardGui.Frame.Background.Fill.Size.X.Scale
    local isFireOn = workspace.Map.Campground.MainFire.Center.BillboardGui.Enabled
    
    print("Current Fire Level:", fireLevel, "Fire On:", isFireOn) -- Debug
    return fireLevel, isFireOn
end

-- UI
page1:Seperator("Auto Fuel&Scrap|ออโต้ เชื้อเพลิง&เหล็ก")
page1:Slider("Campfire Fuel (%)\nเชื้อเพลิงแคมป์ไฟ (%)", 1, 100, 30, function(v)
    _G.FireThreshold = v / 100
    print("Fire threshold set to:", _G.FireThreshold) -- Debug
end)

page1:Toggle("Auto Bring Fuel\nออโต้ดึงเชื้อเพลิง", false, function(v)
    _G.AutoBringFuel = v
    print("Auto Bring Fuel:", v) -- Debug
end)

-- Utility
local function getRootPart(item)
    if item:IsA("Model") then
        return item.PrimaryPart or item:FindFirstChild("HumanoidRootPart")
    elseif item:IsA("BasePart") then
        return item
    end
    return nil
end

-- เพิ่มฟังก์ชัน bringItem (แก้ไขแล้ว - รับตำแหน่งเดิมเป็น parameter)
local function bringItem(item, targetCFrame, playerOriginalPosition)
    if not item or not item.Parent or not targetCFrame or not playerOriginalPosition then return false end
    local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return false end

    -- 1. Warp to item
    local itemRoot = getRootPart(item)
    if not itemRoot then return false end
    hrp.CFrame = itemRoot.CFrame + Vector3.new(0, 5, 0)

    task.wait(0.1)

    -- 2. Move item to targetCFrame + FireServer events
    local success = pcall(function()
        if item.PrimaryPart then
            item:SetPrimaryPartCFrame(targetCFrame)
        elseif item:FindFirstChild("HumanoidRootPart") then
            item.HumanoidRootPart.CFrame = targetCFrame
        elseif item:IsA("BasePart") then
            item.CFrame = targetCFrame
        end

        -- Fire RemoteEvents
        StartDragRemote:FireServer(item)
        task.wait(0.05)
        StopDragRemote:FireServer(item)
    end)

    -- 3. Warp back to original position (ใช้ตำแหน่งที่ส่งมาแทน)
    hrp.CFrame = playerOriginalPosition

    return success
end

-- แก้ไข Loop หลัก
local lastCheck = 0
spawn(function()
    while task.wait(0.5) do
        if _G.AutoBringFuel and tick() - lastCheck >= 1 then
            lastCheck = tick()

            -- เช็คระดับไฟ
            local fireLevel, isFireOn = checkCampfireLevel()
            
            if not _G.FireThreshold then
                _G.FireThreshold = 0.3 -- ค่าเริ่มต้น
            end
            
            print("Fire Level:", fireLevel, "Threshold:", _G.FireThreshold, "Fire On:", isFireOn) -- Debug
            
            -- เงื่อนไขใหม่: ทำงานถ้า fireLevel < threshold หรือ ไฟดับ (Enabled = false)
            local shouldBringFuel = (fireLevel < _G.FireThreshold) or (isFireOn == false)
            
                            if shouldBringFuel then
                    -- หาจุดหมาย
                    local targetCFrame = getCampfireCFrame()
                    if targetCFrame and itemsFolder then
                        -- เก็บตำแหน่งเดิมของ player ไว้ก่อนเริ่มลูป
                        local character = LocalPlayer.Character
                        local hrp = character and character:FindFirstChild("HumanoidRootPart")
                        if not hrp then return end
                        
                        local playerOriginalPosition = hrp.CFrame -- เก็บตำแหน่งเดิมไว้
                        
                        local itemsBrought = 0
                        local maxItemsPerCycle = 10 -- ลดจำนวนเพื่อป้องกันแลค
                        local maxDistance = 15

                        print("Starting to bring fuel items...") -- Debug

                        for _, item in pairs(itemsFolder:GetChildren()) do
                            if not _G.AutoBringFuel or itemsBrought >= maxItemsPerCycle then 
                                break 
                            end

                            if FuelItems[item.Name] then
                                local rootPart = getRootPart(item)
                                if rootPart then
                                    local distance = (rootPart.Position - targetCFrame.Position).Magnitude
                                    if distance > maxDistance then
                                        print("Bringing item:", item.Name, "Distance:", distance) -- Debug
                                        if bringItem(item, targetCFrame, playerOriginalPosition) then
                                            itemsBrought = itemsBrought + 1
                                            task.wait(0.1) -- หน่วงเวลาระหว่างการดึงแต่ละชิ้น
                                        end
                                    end
                                end
                            end
                        end
                        
                    if itemsBrought > 0 then
                        print("Brought", itemsBrought, "fuel items")
                    else
                        print("No fuel items found to bring")
                    end
                else
                    warn("Cannot get campfire location or items folder not found")
                end
            else
                if fireLevel >= _G.FireThreshold and isFireOn == true then
                    print("Fire level is sufficient and fire is on, skipping...")
                end
            end
        end
    end
end)

-- รายชื่อไอเท็มเป้าหมาย Scrap
local ScrapItems = {
    ["Bolt"] = true,
    ["Sheet Metal"] = true,
    ["UFO Junk"] = true,
    ["UFO Component"] = true,
    ["Broken Fan"] = true,
    ["Broken Radio"] = true,
    ["Broken Microwave"] = true,
    ["Metal Chair"] = true,
    ["Old Car Engine"] = true,
    ["Washing Machine"] = true,
    ["Cultist Prototype"] = true,
    ["Cultist Experiment"] = true,
    ["UFO Scrap"] = true
}

-- จุดหมาย Table Crafting
local function getScrapTargetCFrame()
    local success, result = pcall(function()
        local path = workspace.Map.Campground.Scrapper.DashedLine
        return path.CFrame * CFrame.new(0, 5, 0)
    end)
    return success and result or nil
end

-- UI Toggle
page1:Toggle("Auto Bring Scrap\nออโต้ดึงเหล็ก", false, function(v)
    _G.AutoScrap = v
    print("Auto Bring Scrap:", v) -- Debug
end)

-- ฟังก์ชัน Utility
local function getRootPart(item)
    if item:IsA("Model") then
        return item.PrimaryPart or item:FindFirstChild("HumanoidRootPart")
    elseif item:IsA("BasePart") then
        return item
    end
    return nil
end

-- Loop ทำงาน (แก้ไขแล้ว)
local lastScrapCheck = 0
task.spawn(function()
    while task.wait(0.5) do -- เพิ่มระยะเวลารอ
        if _G.AutoScrap and tick() - lastScrapCheck >= 1 then -- เพิ่มเวลาเช็ค
            lastScrapCheck = tick()

            local itemsFolder = workspace:FindFirstChild("Items")
            local targetCFrame = getScrapTargetCFrame()
            
            if itemsFolder and targetCFrame then
                local maxItemsPerCycle = 10 -- ลดจำนวนเพื่อป้องกันแลค
                local maxDistance = 15
                local itemsBrought = 0

                print("Starting to bring scrap items...") -- Debug
                
                -- เก็บตำแหน่งเดิมของ player ไว้ก่อนเริ่มลูป
                local Players = game:GetService("Players")
                local LocalPlayer = Players.LocalPlayer
                local character = LocalPlayer.Character
                local hrp = character and character:FindFirstChild("HumanoidRootPart")
                if not hrp then 
                    warn("Cannot find player's HumanoidRootPart")
                    return 
                end
                
                local playerOriginalPosition = hrp.CFrame -- เก็บตำแหน่งเดิมไว้

                for _, item in pairs(itemsFolder:GetChildren()) do
                    if not _G.AutoScrap or itemsBrought >= maxItemsPerCycle then 
                        break 
                    end

                    if ScrapItems[item.Name] then
                        local rootPart = getRootPart(item)
                        if rootPart then
                            local distance = (rootPart.Position - targetCFrame.Position).Magnitude
                            if distance > maxDistance then
                                print("Bringing scrap item:", item.Name, "Distance:", distance) -- Debug
                                if bringItem(item, targetCFrame, playerOriginalPosition) then
                                    itemsBrought = itemsBrought + 1
                                    task.wait(0.1) -- หน่วงเวลาระหว่างการดึงแต่ละชิ้น
                                end
                            end
                        end
                    end
                end
                
                if itemsBrought > 0 then
                    print("Brought", itemsBrought, "scrap items")
                else
                    print("No scrap items found to bring")
                end
            else
                if not itemsFolder then
                    warn("Items folder not found")
                end
                if not targetCFrame then
                    warn("Cannot get scrapper location")
                end
            end
        end
    end
end)


page1:Seperator("Eat&Heal|กิน&ฮีล")
--// Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

--// Variables
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local remoteEvents = ReplicatedStorage:WaitForChild("RemoteEvents", 5)
local consumeItemRemote = remoteEvents and remoteEvents:WaitForChild("RequestConsumeItem", 5)
if not consumeItemRemote then
    warn("Failed to find RequestConsumeItem!")
    return
end

--// Workspace & Inventory
local itemsFolder = workspace:WaitForChild("Items", 5)
local inventory = player:WaitForChild("Inventory", 5)

--// Global UI control vars
_G.SelectFood = {}
_G.HungerThreshold = 0.8
_G.EatFood = false

--// Settings
local EAT_INTERVAL = 0.3
local TELEPORT_ENABLED = true
local targetFoods = {"berry", "steak", "morsel", "cake", "sandwich", "carrot", "stew"}

--// Food data
local Foodlist = {}
local itemDataMapFood = {}

------------------------------------------------------------
-- Utility functions
------------------------------------------------------------
local function extractBaseName(displayName)
    return displayName:match("^(.-)%s*%(.+%)$") or displayName
end

-- Teleport to food item and eat it
local function teleportAndEatFood(foodItem, playerOriginalPosition)
    if not foodItem or not foodItem.Parent then return false end
    
    character = player.Character or player.CharacterAdded:Wait()
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then
        warn("❌ Cannot teleport - HRP missing")
        return false
    end

    -- 1. Find target part to teleport to
    local targetPart = foodItem
    if foodItem:IsA("Model") then
        targetPart = foodItem.PrimaryPart or foodItem:FindFirstChild("Handle") or foodItem:FindFirstChildWhichIsA("BasePart")
    end
    if not targetPart then
        warn("❌ Food has no part to teleport to")
        return false
    end

    -- 2. Teleport to food
    hrp.CFrame = targetPart.CFrame + Vector3.new(0, 5, 0)
    task.wait(0.2) -- Wait for server to sync

    -- 3. Eat the food
    local success, result = pcall(function()
        if consumeItemRemote.ClassName == "RemoteFunction" then
            return consumeItemRemote:InvokeServer(foodItem)
        else
            return consumeItemRemote:FireServer(foodItem)
        end
    end)

    -- 4. Return to original position
    hrp.CFrame = playerOriginalPosition

    if success then
        print("✅ EatFood success:", foodItem.Name)
        return true
    else
        warn("❌ EatFood error:", result)
        return false
    end
end

------------------------------------------------------------
-- Hunger check via GUI first, fallback to Humanoid Value
------------------------------------------------------------
local hungerBar
spawn(function()
    local gui = player:WaitForChild("PlayerGui", 5)
    if gui then
        local interface = gui:FindFirstChild("Interface")
        if interface then
            local statBars = interface:FindFirstChild("StatBars")
            if statBars then
                local hBar = statBars:FindFirstChild("HungerBar")
                hungerBar = hBar and hBar:FindFirstChild("Bar")
            end
        end
    end
end)

local function checkHunger()
    -- GUI method
    if hungerBar then
        local currentHunger = hungerBar.Size.X.Scale
        print("Current Hunger (GUI):", currentHunger, "Threshold:", _G.HungerThreshold)
        return currentHunger < _G.HungerThreshold
    end

    -- Fallback Humanoid Value
    character = player.Character
    local humanoid = character and character:FindFirstChild("Humanoid")
    if humanoid then
        local hungerValue = humanoid:FindFirstChild("Hunger")
        if hungerValue then
            print("Current Hunger (Humanoid):", hungerValue.Value, "Threshold:", _G.HungerThreshold)
            return hungerValue.Value <= _G.HungerThreshold
        end
    end

    warn("Cannot check hunger - no GUI or Humanoid value found")
    return false
end

------------------------------------------------------------
-- UI Dropdown
------------------------------------------------------------
local FoodDropdown = page1:MultiDropdown("SelectFood\nเลือกอาหาร", {}, function(v)
    _G.SelectFood = v
    print("Selected foods:", table.concat(v, ", "))
end)

-- Refresh food list
local function refreshFood()
    Foodlist = {}
    itemDataMapFood = {}
    FoodDropdown:Clear()

    for _, item in pairs(itemsFolder:GetChildren()) do
        if (item:IsA("Model") or item:IsA("BasePart")) and item.Name then
            for _, target in pairs(targetFoods) do
                if string.find(string.lower(item.Name), string.lower(target)) then
                    local itemName = item.Name
                    if itemDataMapFood[itemName] then
                        itemDataMapFood[itemName].Count = itemDataMapFood[itemName].Count  + 1
                        table.insert(itemDataMapFood[itemName].Models, item)
                    else
                        itemDataMapFood[itemName] = {Name=itemName, Count=1, Models={item}}
                    end
                    break
                end
            end
        end
    end

    for itemName, data in pairs(itemDataMapFood) do
        local displayName = data.Count > 1 and itemName.." (x"..data.Count..")" or itemName
        table.insert(Foodlist, displayName)
    end

    table.sort(Foodlist)
    for _, displayName in pairs(Foodlist) do
        FoodDropdown:Add(displayName)
    end
    
    print("Found", #Foodlist, "types of food")
end

------------------------------------------------------------
-- Main loop (แก้ไขใหม่)
------------------------------------------------------------
local lastEatCheck = 0
spawn(function()
    refreshFood()
    
    while task.wait(0.5) do
        if _G.EatFood and tick() - lastEatCheck >= 1 then
            lastEatCheck = tick()
            
            -- เช็คความหิว
            if not checkHunger() then
                print("😋 Not hungry, hunger is above threshold")
                -- ไม่หยุดลูป แค่ข้าม
            else
                print("🍽️ Hungry! Starting to eat...")
                
                -- เก็บตำแหน่งเดิมของ player
                character = player.Character
                local hrp = character and character:FindFirstChild("HumanoidRootPart")
                if not hrp then
                    warn("Cannot find player's HumanoidRootPart")
                else
                    local playerOriginalPosition = hrp.CFrame
                    local eatenCount = 0
                    local maxEatPerCycle = 5 -- จำกัดการกินต่อรอบ
                    
                    -- เช็คว่ามีอาหารที่เลือกหรือไม่
                    if #_G.SelectFood == 0 then
                        print("⚠️ No food selected")
                    else
                        for _, displayName in pairs(_G.SelectFood) do
                            if not _G.EatFood or eatenCount >= maxEatPerCycle then
                                break
                            end
                            
                            local baseName = extractBaseName(displayName)
                            local foodData = itemDataMapFood[baseName]
                            
                            if foodData then
                                for _, foodItem in pairs(foodData.Models) do
                                    if not _G.EatFood or eatenCount >= maxEatPerCycle then
                                        break
                                    end
                                    
                                    if foodItem.Parent then -- เช็คว่าไอเท็มยังอยู่ใน workspace
                                        print("Trying to eat:", foodItem.Name)
                                        if teleportAndEatFood(foodItem, playerOriginalPosition) then
                                            eatenCount = eatenCount + 1
                                            task.wait(0.2) -- หน่วงเวลาระหว่างการกิน
                                            
                                            -- เช็คความหิวอีกครั้งหลังกิน
                                            if not checkHunger() then
                                                print("😋 Full after eating", eatenCount, "foods")
                                                break
                                            end
                                        end
                                    end
                                end
                            else
                                print("⚠️ Food data not found for:", baseName)
                            end
                        end
                        
                        if eatenCount > 0 then
                            print("🎉 Successfully ate", eatenCount, "foods")
                            -- รีเฟรชรายการอาหารหลังกิน
                            refreshFood()
                        else
                            print("⚠️ No food was eaten")
                        end
                    end
                end
            end
        end
    end
end)

------------------------------------------------------------
-- UI buttons
------------------------------------------------------------
page1:Button("Refresh Food\nรีเฟรชอาหาร", refreshFood)
page1:Slider("Hunger(%)\nความหิว(%)", 1, 100, 80, function(v)
    _G.HungerThreshold = v / 100
    print("Hunger threshold set to:", _G.HungerThreshold)
end)
page1:Toggle("Eat Selected Food\nกินอาหารที่เลือก", false, function(v)
    _G.EatFood = v
    print("Auto Eat Food:", v)
end)

local Heallist = {}
local itemDataMapHeal = {}

local HealDropdown = page1:MultiDropdown("SelectItemsHeal\nเลือกไอเท็มฮีล", {}, function(v)
    _G.SelectHeal = v
end)

local inventory = LocalPlayer:WaitForChild("Inventory")
local function findItemInInventoryOrItems(itemName)
    local item = inventory:FindFirstChild(itemName)
    return item
end

local function refreshHeal()
    Heallist = {}
    itemDataMapHeal = {}
    HealDropdown:Clear()
    
    local targetHeals = {"bandage", "medkit"}
    local locations = {inventory, itemsFolder}

    for _, location in pairs(locations) do
        for _, item in pairs(location:GetChildren()) do
            if (item:IsA("Model") or item:IsA("BasePart")) and item.Name then
                for _, target in pairs(targetHeals) do
                    if string.find(string.lower(item.Name), string.lower(target)) then
                        local itemName = item.Name
                        if itemDataMapHeal[itemName] then
                            itemDataMapHeal[itemName].Count = itemDataMapHeal[itemName].Count + 1
                            table.insert(itemDataMapHeal[itemName].Models, item)
                        else
                            itemDataMapHeal[itemName] = {
                                Name = itemName,
                                Count = 1,
                                Models = {item}
                            }
                        end
                        break
                    end
                end
            end
        end
    end

    for itemName, data in pairs(itemDataMapHeal) do
        local displayName = data.Count > 1 and itemName .. " (x" .. data.Count .. ")" or itemName
        table.insert(Heallist, displayName)
    end
    
    table.sort(Heallist)

    for _, displayName in pairs(Heallist) do
        HealDropdown:Add(displayName)
    end
end

page1:Button("Refresh Items Heal\nรีเฟรชไอเท็มอีล", refreshHeal)

page1:Slider("Health(%)\nเลือด(%)", 1, 100, 50, function(v)
    _G.HealthSelect = v
end)

page1:Toggle("Use Item Selected Heal\nใช้ไอเท็มที่เลือกฮีล", false, function(v)
    _G.EatHeal = v
end)

spawn(function()
    local hungerBar = player:WaitForChild("PlayerGui", 5)
        :WaitForChild("Interface", 5)
        :WaitForChild("StatBars", 5)
        :WaitForChild("HungerBar", 5)
        :WaitForChild("Bar", 5)

    while task.wait(0.1) do
        if _G.EatFood and _G.SelectFood and #_G.SelectFood > 0 and hungerBar then
            local hungerScale = hungerBar.Size.X.Scale
            local threshold = _G.HungerThreshold or 0.8

            if hungerScale < threshold then
                for _, itemName in pairs(_G.SelectFood) do
                    local baseName = extractBaseName(itemName)
                    local item = itemsFolder:FindFirstChild(baseName)
                    if item then
                        local args = { [1] = item }
                        local success, result = pcall(function()
                            return consumeItemRemote:InvokeServer(unpack(args))
                        end)
                    end
                end
                task.wait(0.1) 
            end
        end
    end
end)

spawn(function()
    while task.wait(0.1) do
        local character = player.Character
        local humanoid = character and character:FindFirstChild("Humanoid")

        if humanoid and _G.EatHeal and _G.SelectHeal and #_G.SelectHeal > 0 then
            local healthPercent = (humanoid.Health / humanoid.MaxHealth) * 100

            if healthPercent < _G.HealthSelect then
                for _, itemName in pairs(_G.SelectHeal) do
                    local baseName = extractBaseName(itemName)
                    local item = findItemInInventoryOrItems(baseName)
                    if item then
                        local args = { [1] = item }
                        local success, result = pcall(function()
                            return consumeItemRemote:InvokeServer(unpack(args))
                        end)
                    end
                end
                task.wait(0.5)
            end
        end
    end
end)

refreshFood()
refreshHeal()

page1:Seperator("Store|เก็บของ")

page1:Seperator("Store|เก็บของ")

page1:Slider("Range Store\nระยะการเก็บของ", 1, 100, 5, function(v)
    _G.range = v
end)

page1:Toggle("Auto Store Items\nออโต้การเก็บของ", false, function(v)
    _G.Store = v
end)

local lastStoreCheck = 0
spawn(function()
    while true do
        if _G.Store and tick() - lastStoreCheck > 1 then
            lastStoreCheck = tick()
            local inventory = LocalPlayer:WaitForChild("Inventory")
            local sack = inventory:FindFirstChild("Old Sack")
            
            if sack and itemsFolder and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                local HumanoidRootPart = LocalPlayer.Character.HumanoidRootPart
                
                for _, item in pairs(itemsFolder:GetChildren()) do
                    if not _G.Store then break end
                    
                    if item:IsA("Model") or item:IsA("BasePart") then
                        local distance = (HumanoidRootPart.Position - item:GetPivot().Position).Magnitude
                        
                        if distance <= _G.range then
                            pcall(function()
                                ReplicatedStorage:WaitForChild("RemoteEvents"):WaitForChild("RequestBagStoreItem"):InvokeServer(sack, item)
                            end)
                            wait(0.1)
                        end
                    end
                end
            end
        end
        wait(0.5)
    end
end)

--// Service
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer

--// ESP Data
local ESPObjects = {}
local Number = math.random(1, 1000000)

--// Function
local function round(n)
    return math.floor(tonumber(n) + 0.5)
end

local function CreateESP(target, adornee, name, color, distanceFunc)
    if ESPObjects[target] then return end

    -- Billboard สำหรับชื่อและระยะ
    local bill = Instance.new("BillboardGui")
    bill.Name = "NameEsp" .. Number
    bill.ExtentsOffset = Vector3.new(0, 2, 0)
    bill.Size = UDim2.new(0, 200, 0, 50)
    bill.Adornee = adornee
    bill.AlwaysOnTop = true
    bill.Enabled = false

    local nameLabel = Instance.new("TextLabel", bill)
    nameLabel.Font = Enum.Font.Code
    nameLabel.TextSize = 14
    nameLabel.TextWrapped = true
    nameLabel.Size = UDim2.new(1, 0, 1, 0)
    nameLabel.TextYAlignment = Enum.TextYAlignment.Top
    nameLabel.BackgroundTransparency = 1
    nameLabel.TextStrokeTransparency = 0.5
    nameLabel.TextColor3 = color

    -- Highlight รอบโมเดล
    local highlight = Instance.new("Highlight")
    highlight.Name = "ESP_Highlight_" .. target.Name
    highlight.FillColor = color
    highlight.FillTransparency = 0.5
    highlight.OutlineColor = color
    highlight.OutlineTransparency = 0
    highlight.Enabled = false
    highlight.Adornee = target
    highlight.Parent = game.CoreGui

    ESPObjects[target] = {
        Billboard = bill,
        Label = nameLabel,
        Highlight = highlight,
        DistanceFunc = distanceFunc,
        Target = target
    }

    bill.Parent = game.CoreGui
end

local function RemoveESP(target)
    if ESPObjects[target] then
        if ESPObjects[target].Billboard then
            ESPObjects[target].Billboard:Destroy()
        end
        if ESPObjects[target].Highlight then
            ESPObjects[target].Highlight:Destroy()
        end
        ESPObjects[target] = nil
    end
end

local function UpdateAllESP()
    for target, esp in pairs(ESPObjects) do
        if not target or not target.Parent then
            RemoveESP(target)
        else
            local enabled = false
            local labelText = ""
            local highlightColor = Color3.fromRGB(255,255,255)

            -- ESP Players
            if target:IsA("Player") and _G.ESPPlayer then
                enabled = true
                local distance, healthPercent = "N/A", "N/A"
                pcall(function()
                    distance = esp.DistanceFunc()
                    if target.Character and target.Character:FindFirstChild("Humanoid") then
                        local humanoid = target.Character.Humanoid
                        
                        healthPercent = round(humanoid.Health * 100 / humanoid.MaxHealth)
                    end
                end)
                labelText = target.Name .. " | " .. distance .. " M\nHealth: " .. healthPercent .. "%"
                esp.Label.TextColor3 = Color3.fromRGB(0, 0, 255)
                highlightColor = Color3.fromRGB(0, 0, 255)

            -- ESP Enemies
            elseif target:FindFirstAncestor("Characters") and _G.ESPEnemies then
                enabled = true
                local distance = "N/A"
                pcall(function()
                    distance = esp.DistanceFunc()
                end)
                labelText = target.Name .. "\n" .. distance .. " M"
                esp.Label.TextColor3 = Color3.fromRGB(255, 0, 0)
                highlightColor = Color3.fromRGB(255, 0, 0)

            -- ESP Items
            elseif target:FindFirstAncestor("Items") and _G.Itemsesp then
                enabled = true
                local distance = "N/A"
                pcall(function()
                    distance = esp.DistanceFunc()
                end)
                labelText = target.Name .. "\n" .. distance .. " M"
                esp.Label.TextColor3 = Color3.fromRGB(0, 255, 0)
                highlightColor = Color3.fromRGB(0, 255, 0)
            end

            esp.Billboard.Enabled = enabled
            esp.Highlight.Enabled = enabled
            if enabled then
                esp.Label.Text = labelText
                esp.Highlight.FillColor = highlightColor
                esp.Highlight.OutlineColor = highlightColor
            end
        end
    end
end

local function ScanTargets()
    -- Players
    for _, v in pairs(Players:GetPlayers()) do
        if v ~= LocalPlayer and v.Character and v.Character:FindFirstChild("Head") then
            if not ESPObjects[v] then
                CreateESP(v, v.Character.Head, v.Name, Color3.fromRGB(0, 0, 255), function()
                    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Head") and v.Character and v.Character:FindFirstChild("Head") then
                        return round((LocalPlayer.Character.Head.Position - v.Character.Head.Position).Magnitude / 3.57)
                    else
                        return "N/A"
                    end
                end)
            end
        else
            RemoveESP(v)
        end
    end

    -- Enemies
    local charFolder = Workspace:FindFirstChild("Characters")
    if charFolder then
        for _, enemy in pairs(charFolder:GetChildren()) do
            local enemyPart = enemy.PrimaryPart or enemy:FindFirstChild("HumanoidRootPart") or enemy:FindFirstChildWhichIsA("BasePart")
            if enemyPart and not ESPObjects[enemy] then
                CreateESP(enemy, enemyPart, enemy.Name, Color3.fromRGB(255, 0, 0), function()
                    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Head") then
                        return round((LocalPlayer.Character.Head.Position - enemyPart.Position).Magnitude / 3.57)
                    else
                        return "N/A"
                    end
                end)
            end
        end
    end

    -- Items
    local itemsFolder = Workspace:FindFirstChild("Items")
    if itemsFolder then
        for _, item in pairs(itemsFolder:GetChildren()) do
            local itemPart = item.PrimaryPart or item:FindFirstChild("Base") or item:FindFirstChild("Handle") or item:FindFirstChildWhichIsA("BasePart")
            if itemPart and not ESPObjects[item] then
                CreateESP(item, itemPart, item.Name, Color3.fromRGB(0, 255, 0), function()
                    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Head") then
                        return round((LocalPlayer.Character.Head.Position - itemPart.Position).Magnitude / 3.57)
                    else
                        return "N/A"
                    end
                end)
            end
        end
    end
end

-- Auto update targets
LocalPlayer.CharacterAdded:Connect(function()
    task.wait(1)
    ScanTargets()
end)

task.spawn(function()
    while true do
        if _G.ESPPlayer or _G.ESPEnemies or _G.Itemsesp then
            ScanTargets()
        end
        task.wait(0.5)
    end
end)

local lastUpdate = 0
RunService.RenderStepped:Connect(function(deltaTime)
    lastUpdate = lastUpdate + deltaTime
    if lastUpdate >= 0.1 then
        UpdateAllESP()
        lastUpdate = 0
    end
end)

page1:Seperator("ESP|มองทะลุ")
page1:Toggle("ESP Players\nมองทะลุหาเพลย์เยอร์", false, function(value)
    _G.ESPPlayer = value
end)
page1:Toggle("ESP Enemies\nมองทะลุหาศัตรู", false, function(value)
    _G.ESPEnemies = value
end)
page1:Toggle("ESP Items\nมองทะลุหาไอเท็ม", false, function(value)
    _G.Itemsesp = value
end)

page1:Seperator("PlantTree|ปลูกต้นไม้")
page1:Toggle("PlantTree\nปลูกต้นไม้",false,function(value)
    _G.Plant = value 
end)

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
spawn(function()
    while task.wait(0) do 
        if _G.Plant then 
            local args = {
            [1] = game.Workspace.Items:WaitForChild("Sapling"),
            [2] = humanoidRootPart.Position + Vector3.new(0,-3,0)
            }
            game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvents"):WaitForChild("RequestPlantItem"):InvokeServer(unpack(args))
        end
    end
end)

local positionsafe = {"PlayersPosition","Campfire"}

page4:Dropdown("SelectSafeModeMethod\nเลือกเซฟโหมดที่อยู่", positionsafe, function(v)
    _G.SafeP = v
end)

page4:Toggle("AutoSafeMode\nออโต้เซฟโหมด", false, function(value)
    _G.SafeMode = value
end)

spawn(function()
    while true do
        if _G.SafeMode then
            if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
                local HealthPercent = game.Players.LocalPlayer.Character.Humanoid.Health / game.Players.LocalPlayer.Character.Humanoid.MaxHealth * 100
                
                if HealthPercent < 35 then
                    if _G.SafeP == "PlayersPosition" then
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 100, 0)
                    elseif _G.SafeP == "Campfire" then 
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Workspace.Map.Campground.CraftingBench.WoodSign.CFrame * CFrame.new(0, 50, 5)
                    end
                end
            end
        end
        task.wait(0)
    end
end)

local Playerslist = {}
local SelectPlayer = nil

local playerDropdown = page4:Dropdown("Select Players\nเลือกเพลย์เยอร์", Playerslist, function(v)
    SelectPlayer = v
end)

page4:Button("Refresh Players\nรีเฟรชเพลย์เยอร์", function()
    Playerslist = {}
    playerDropdown:Clear() 

    for _, plr in pairs(game.Players:GetPlayers()) do
        table.insert(Playerslist, plr.Name)
        playerDropdown:Add(plr.Name) 
    end

end)

page4:Toggle("Teleport to Players Selected\nเทเลพอร์ตไปหาเพลย์เยอร์ที่เลือก", false, function(v)
    _G.TptoP = v
end)

spawn(function()
    while task.wait(0.3) do 
        if _G.TptoP and SelectPlayer then
            local localPlayer = game.Players.LocalPlayer
            local character = localPlayer.Character
            local targetPlayer = game.Players:FindFirstChild(SelectPlayer)

            if character and character:FindFirstChild("HumanoidRootPart") and
               targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                
                local hrp = character.HumanoidRootPart
                local targetHRP = targetPlayer.Character.HumanoidRootPart

                    hrp.CFrame = targetHRP.CFrame
            end
        end
    end
end)


page4:Toggle("Auto Teleport to Child\nออโต้เทเลพอร์ตไปหาเด็ก", false, function(v)
    _G.Tpchild = v
end)

local player = game.Players.LocalPlayer

spawn(function()
    while task.wait(0.2) do
        if _G.Tpchild and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local hrp = player.Character.HumanoidRootPart

            for _, v in pairs(workspace.Characters:GetChildren()) do
                if v.Name == "Lost Child" or v.Name == "Lost Child2" or v.Name == "Lost Child3" or v.Name == "Lost Child4" then
                    local targetHRP = v:FindFirstChild("HumanoidRootPart")
                    if targetHRP then
                        local distanceChildToCamp = (targetHRP.Position - Workspace.Map.Campground.CraftingBench.WoodSign.Position).Magnitude

                        if distanceChildToCamp > 100  then
                            hrp.CFrame = targetHRP.CFrame * CFrame.new(0,5,0)
                        end
                    end
                end
            end
        end
    end
end)


local Lighting = game:GetService("Lighting")

local function isNight()
    local currentTime = Lighting.ClockTime
    return currentTime >= 18 or currentTime < 6
end

page4:Toggle("Auto Teleport to the campfire at night\nออโต้เทเลพอร์ตไปแคมป์ไฟถ้ามืด", false, function(v)
    _G.AutoTpcamp = v
end)

page4:Button("Tp to Campfire\nเทเลพอร์ตไปแคมป์ไฟ", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Workspace.Map.Campground.CraftingBench.WoodSign.CFrame * CFrame.new(0, 0, 5)
end)

local player = game.Players.LocalPlayer
local campSign = Workspace.Map.Campground.CraftingBench.WoodSign

spawn(function()
    while task.wait(0.2) do 
        if _G.AutoTpcamp and isNight() and (workspace.Map:WaitForChild("Campground").MainFire.Center.Position - player.Character.HumanoidRootPart.Position).Magnitude > 100 and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local hrp = player.Character.HumanoidRootPart
            hrp.CFrame = campSign.CFrame * CFrame.new(0, 0, 5)
        end
    end
end)

page4:Seperator("After finding|หลังจากเจอแล้ว")
page4:Button("Tp to Furniture Trader\nเลพอร์ตไปหาคนเทรดเฟอร์นิเจอร์", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Characters:WaitForChild("Furniture Trader").HumanoidRootPart.CFrame * CFrame.new(0,10,0)
end)

page4:Button("Tp to Snow Clothing Shop\nเทเลพอร์ตไปที่ขายชุดกันหนาว", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Map.Landmarks:WaitForChild("Snow Clothing Shop").Main.CFrame * CFrame.new(0,5,0)
end)

page4:Button("Tp to Alien Mothership\nเทเลพอร์ตไปหายานแม่เอเลี่ยน", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Map.Landmarks:WaitForChild("AlienMothership").Functional.AlienMothership.TeleportIn.CFrame 
end)

page4:Button("Tp to Anvil\nเทเลพอร์ตไปที่คราฟไอเท็ม", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Map.Landmarks:WaitForChild("ToolWorkshop").Main * CFrame.new(0,10,0)
end)

page4:Button("Tp to Dungeon\nเทเลพอร์ตไปที่ดันเจี้ยน", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Map.Landmarks:WaitForChild("Stronghold").Building.Sign.Main.CFrame * CFrame.new(0,15,0)
end)

page4:Button("Tp to Dungeon Snow\nเทเลพอร์ตไปที่ดันเจี้ยนหิมะ", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Map.Landmarks:WaitForChild("Ice Temple").Main.CFrame * CFrame.new(0,10,0)
end)

page4:Button("Tp to Angel\nเทเลพอร์ตไปหานางฟ้า", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Map.Landmarks:WaitForChild("Fairy House").Main.CFrame * CFrame.new(0,15,0)
end)


local Connections = {}

local function updateCharacterReferences(newCharacter)
    Character = newCharacter
    HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
end

Connections.characterAdded = LocalPlayer.CharacterAdded:Connect(updateCharacterReferences)

page2:Seperator("Character|ตัวละคร")

page2:Slider("WalkSpeed\nวิ่งเร็ว", 1, 999, 16, function(speed)
    if Character and Character:FindFirstChild("Humanoid") then
        Character.Humanoid.WalkSpeed = speed
    end
end)

page2:Slider("JumpPower\nกระโดดสูง", 1, 999, 50, function(power)
    if Character and Character:FindFirstChild("Humanoid") then
        Character.Humanoid.JumpHeight = power
    end
end)

local infJumpDebounce = false
page2:Toggle("InfiniteJump\nกระโดดไม่จำกัด", false, function(enabled)
    _G.infjump = enabled
    
    if Connections.infiniteJump then
        Connections.infiniteJump:Disconnect()
    end
    
    if enabled then
        Connections.infiniteJump = UserInputService.JumpRequest:Connect(function()
            if _G.infjump and not infJumpDebounce and Character and Character:FindFirstChild("Humanoid") then
                infJumpDebounce = true
                Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                wait(0.1)
                infJumpDebounce = false
            end
        end)
    end
end)

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- ตรวจสอบว่าเป็นอุปกรณ์มือถือหรือไม่
local IsOnMobile = table.find({Enum.Platform.IOS, Enum.Platform.Android}, UserInputService:GetPlatform())

-- ตัวแปร global
_G.FlyEnabled = false
_G.VFlyEnabled = false
_G.QEFlyEnabled = true
_G.FlySpeed = 1
_G.VFlySpeed = 1

-- ตัวแปรสถานะ
local FLYING = false
local flyKeyDown, flyKeyUp, mobileFlyConnection, characterAddedConnection

-- ฟังก์ชันช่วยเหลือ
local function getRoot(character)
    return character and character:FindFirstChild("HumanoidRootPart")
end

-- ฟังก์ชันหยุดการบิน
local function StopFly()
    FLYING = false
    if flyKeyDown then flyKeyDown:Disconnect() end
    if flyKeyUp then flyKeyUp:Disconnect() end
    if mobileFlyConnection then mobileFlyConnection:Disconnect() end
    if characterAddedConnection then characterAddedConnection:Disconnect() end

    local root = getRoot(LocalPlayer.Character)
    if root then
        local bv = root:FindFirstChild("BodyVelocity")
        local bg = root:FindFirstChild("BodyGyro")
        if bv then bv:Destroy() end
        if bg then bg:Destroy() end
    end

    local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.PlatformStand = false
    end
    Camera.CameraType = Enum.CameraType.Custom
end

-- ฟังก์ชันบินสำหรับ PC
local function StartFly(vfly)
    StopFly()
    
    local character = LocalPlayer.Character
    if not character then
        LocalPlayer.CharacterAdded:Wait()
        character = LocalPlayer.Character
    end

    local root = getRoot(character)
    if not root then return end

    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if not humanoid then return end

    FLYING = true
    local CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
    local lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
    local SPEED = 0

    local bg = Instance.new("BodyGyro")
    bg.Name = "BodyGyro"
    bg.P = 9e4
    bg.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
    bg.CFrame = root.CFrame
    bg.Parent = root

    local bv = Instance.new("BodyVelocity")
    bv.Name = "BodyVelocity"
    bv.MaxForce = Vector3.new(9e9, 9e9, 9e9)
    bv.Velocity = Vector3.new(0, 0, 0)
    bv.Parent = root

    local flyLoop
    flyLoop = RunService.RenderStepped:Connect(function()
        if not FLYING then
            flyLoop:Disconnect()
            return
        end

        if not vfly then
            humanoid.PlatformStand = true
        end

        if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0 then
            SPEED = 50
        elseif SPEED ~= 0 then
            SPEED = 0
        end

        if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 or (CONTROL.Q + CONTROL.E) ~= 0 then
            bv.Velocity = ((Camera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + 
                           ((Camera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - Camera.CoordinateFrame.p)) * SPEED
            lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R, Q = CONTROL.Q, E = CONTROL.E}
        elseif SPEED ~= 0 then
            bv.Velocity = ((Camera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + 
                           ((Camera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B + lCONTROL.Q + lCONTROL.E) * 0.2, 0).p) - Camera.CoordinateFrame.p)) * SPEED
        else
            bv.Velocity = Vector3.new(0, 0, 0)
        end

        bg.CFrame = Camera.CoordinateFrame
    end)

    flyKeyDown = UserInputService.InputBegan:Connect(function(input)
        if not FLYING then return end
        local key = input.KeyCode
        local speed = vfly and _G.VFlySpeed or _G.FlySpeed
        if key == Enum.KeyCode.W then
            CONTROL.F = speed
        elseif key == Enum.KeyCode.S then
            CONTROL.B = -speed
        elseif key == Enum.KeyCode.A then
            CONTROL.L = -speed
        elseif key == Enum.KeyCode.D then
            CONTROL.R = speed
        elseif _G.QEFlyEnabled and key == Enum.KeyCode.E then
            CONTROL.Q = speed * 2
        elseif _G.QEFlyEnabled and key == Enum.KeyCode.Q then
            CONTROL.E = -speed * 2
        end
        Camera.CameraType = Enum.CameraType.Track
    end)

    flyKeyUp = UserInputService.InputEnded:Connect(function(input)
        if not FLYING then return end
        local key = input.KeyCode
        if key == Enum.KeyCode.W then
            CONTROL.F = 0
        elseif key == Enum.KeyCode.S then
            CONTROL.B = 0
        elseif key == Enum.KeyCode.A then
            CONTROL.L = 0
        elseif key == Enum.KeyCode.D then
            CONTROL.R = 0
        elseif key == Enum.KeyCode.E then
            CONTROL.Q = 0
        elseif key == Enum.KeyCode.Q then
            CONTROL.E = 0
        end
    end)
end

-- ฟังก์ชันบินสำหรับมือถือ
local function StartMobileFly(vfly)
    StopFly()

    local character = LocalPlayer.Character
    if not character then
        LocalPlayer.CharacterAdded:Wait()
        character = LocalPlayer.Character
    end

    local root = getRoot(character)
    if not root then return end

    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if not humanoid then return end

    FLYING = true
    local v3inf = Vector3.new(9e9, 9e9, 9e9)
    local v3zero = Vector3.new(0, 0, 0)

    local bv = Instance.new("BodyVelocity")
    bv.Name = "BodyVelocity"
    bv.MaxForce = v3zero
    bv.Velocity = v3zero
    bv.Parent = root

    local bg = Instance.new("BodyGyro")
    bg.Name = "BodyGyro"
    bg.MaxTorque = v3inf
    bg.P = 1000
    bg.D = 50
    bg.Parent = root

    local controlModule = require(LocalPlayer.PlayerScripts:WaitForChild("PlayerModule"):WaitForChild("ControlModule"))
    mobileFlyConnection = RunService.RenderStepped:Connect(function()
        if not FLYING then return end
        root = getRoot(LocalPlayer.Character)
        if not root or not root:FindFirstChild("BodyVelocity") or not root:FindFirstChild("BodyGyro") then return end

        local humanoid = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if not humanoid then return end

        local velocityHandler = root:FindFirstChild("BodyVelocity")
        local gyroHandler = root:FindFirstChild("BodyGyro")

        velocityHandler.MaxForce = v3inf
        gyroHandler.MaxTorque = v3inf
        if not vfly then humanoid.PlatformStand = true end
        gyroHandler.CFrame = Camera.CoordinateFrame
        velocityHandler.Velocity = v3zero

        local speed = vfly and _G.VFlySpeed or _G.FlySpeed
        local direction = controlModule:GetMoveVector()
        if direction.X > 0 then
            velocityHandler.Velocity = velocityHandler.Velocity + Camera.CFrame.RightVector * (direction.X * (speed * 50))
        end
        if direction.X < 0 then
            velocityHandler.Velocity = velocityHandler.Velocity + Camera.CFrame.RightVector * (direction.X * (speed * 50))
        end
        if direction.Z > 0 then
            velocityHandler.Velocity = velocityHandler.Velocity - Camera.CFrame.LookVector * (direction.Z * (speed * 50))
        end
        if direction.Z < 0 then
            velocityHandler.Velocity = velocityHandler.Velocity - Camera.CFrame.LookVector * (direction.Z * (speed * 50))
        end
    end)

    characterAddedConnection = LocalPlayer.CharacterAdded:Connect(function(newCharacter)
        root = getRoot(newCharacter)
        if not root then return end

        local bv = Instance.new("BodyVelocity")
        bv.Name = "BodyVelocity"
        bv.MaxForce = v3zero
        bv.Velocity = v3zero
        bv.Parent = root

        local bg = Instance.new("BodyGyro")
        bg.Name = "BodyGyro"
        bg.MaxTorque = v3inf
        bg.P = 1000
        bg.D = 50
        bg.Parent = root
    end)
end

-- ฟังก์ชันควบคุมการบิน
local function ToggleFly(vfly)
    if (vfly and _G.VFlyEnabled) or (not vfly and _G.FlyEnabled) then
        if IsOnMobile then
            StartMobileFly(vfly)
        else
            StartFly(vfly)
        end
    else
        StopFly()
    end
end


page2:Toggle("Fly\nบิน", _G.FlyEnabled, function(v)
    _G.FlyEnabled = v
    ToggleFly(false)
end)

page2:Toggle("QE Fly\nบินขึ้น/ลงด้วย Q/E", _G.QEFlyEnabled, function(v)
    _G.QEFlyEnabled = v
end)

page2:Slider("Fly Speed\nความเร็วการบิน", 0, 10, _G.FlySpeed, function(v)
    _G.FlySpeed = v
end)

if _G.FlyEnabled or _G.VFlyEnabled then
    ToggleFly(_G.VFlyEnabled)
end
local TeleportData = {isAltDown = false, enabled = false}

page2:Toggle("Click Teleport (Alt + Click)\nคลิกเทเลพอร์ต (Alt + Click)", false, function(enabled)
    TeleportData.enabled = enabled
    
    if Connections.teleportInput then Connections.teleportInput:Disconnect() end
    if Connections.teleportClick then Connections.teleportClick:Disconnect() end
    
    if enabled then
        Connections.teleportInput = UserInputService.InputBegan:Connect(function(input, processed)
            if input.KeyCode == Enum.KeyCode.LeftAlt then
                TeleportData.isAltDown = true
            elseif input.UserInputType == Enum.UserInputType.MouseButton1 and TeleportData.isAltDown and not processed then
                if Character and HumanoidRootPart then
                    local mouse = LocalPlayer:GetMouse()
                    local camera = workspace.CurrentCamera
                    local ray = camera:ScreenPointToRay(mouse.X, mouse.Y)
                    
                    local raycastParams = RaycastParams.new()
                    raycastParams.FilterDescendantsInstances = {Character}
                    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
                    
                    local result = workspace:Raycast(ray.Origin, ray.Direction * 1000, raycastParams)
                    
                    if result then
                        HumanoidRootPart.CFrame = CFrame.new(result.Position + Vector3.new(0, 3, 0))
                    end
                end
            end
        end)
        
        Connections.teleportEnd = UserInputService.InputEnded:Connect(function(input)
            if input.KeyCode == Enum.KeyCode.LeftAlt then
                TeleportData.isAltDown = false
            end
        end)
    end
end)

page2:Toggle("Noclip\nเดินทะลุ", false, function(v)
    _G.Noclip = v
end)

spawn(function()
    while task.wait() do
        if _G.Noclip then
            for _, part in pairs(character:GetChildren()) do
                if part:IsA("BasePart") and  part.CanCollide == true then
                    part.CanCollide = false
                end
            end
        end
    end
end)

page2:Seperator("Brightless|ความสว่าง")

local lightColor = Color3.fromRGB(255, 255, 255)

local function createLight()
    if not Character then return end
    local head = Character:FindFirstChild("Head")
    if not head then return end

    for _, child in pairs(head:GetChildren()) do
        if child:IsA("PointLight") and child.Name == "PlayerLight" then
            child:Destroy()
        end
    end

    local light = Instance.new("PointLight")
    light.Name = "PlayerLight"
    light.Brightness = _G.lightBrightness
    light.Range = _G.lightRange
    light.Color = lightColor
    light.Enabled = _G.light
    light.Parent = head
    
    return light
end

local function updateLight()
    if not Character then return end
    local head = Character:FindFirstChild("Head")
    if not head then return end
    
    local light = head:FindFirstChild("PlayerLight")
    if light then
        light.Enabled = _G.light
        light.Brightness = _G.lightBrightness
        light.Range = _G.lightRange
    else
        createLight()
    end
end

LocalPlayer.CharacterAdded:Connect(function(newCharacter)
    Character = newCharacter
    wait(0.5)
    createLight()
end)

local lastLightUpdate = 0
spawn(function()
    while true do
        if tick() - lastLightUpdate > 1 then
            lastLightUpdate = tick()
            if _G.light and Character and Character:FindFirstChild("Head") and not Character.Head:FindFirstChild("PlayerLight") then
                updateLight()
            end
        end
        wait(0.5)
    end
end)

if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Head") then
    createLight()
end

page2:Toggle("Enabled the Brightless\nเปิดความสว่าง", _G.light, function(v)
    _G.light = v
    updateLight()
end)

page2:Slider("Brightness level\nเลเวลความสว่าง", 0, 10, _G.lightBrightness or 1, function(v)
    _G.lightBrightness = v
    updateLight()
end)

page2:Slider("Brightness range\nระยะความสว่าง", 10, 500, _G.lightRange or 200, function(v)
    _G.lightRange = v
    updateLight()
end)
end)
return Update
