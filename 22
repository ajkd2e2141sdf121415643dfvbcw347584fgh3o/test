local d='bG9jYWwgUGxheWVycyA9IGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpCmxvY2FsIFdvcmtzcGFjZSA9IGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikKbG9jYWwgUmVwbGljYXRlZFN0b3JhZ2UgPSBnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikKbG9jYWwgVHdlZW5TZXJ2aWNlID0gZ2FtZTpHZXRTZXJ2aWNlKCJUd2VlblNlcnZpY2UiKQpsb2NhbCBWaXJ0dWFsSW5wdXRNYW5hZ2VyID0gZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsSW5wdXRNYW5hZ2VyIikKbG9jYWwgR3VpU2VydmljZSA9IGdhbWU6R2V0U2VydmljZSgiR3VpU2VydmljZSIpCmxvY2FsIFZpcnR1YWxVc2VyID0gZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsVXNlciIpCmxvY2FsIExvY2FsUGxheWVyID0gUGxheWVycy5Mb2NhbFBsYXllcgpsb2NhbCBQbGF5ZXJHdWkgPSBMb2NhbFBsYXllci5QbGF5ZXJHdWkKbG9jYWwgdHdlZW4gPSBnYW1lOnNlcnZpY2UiVHdlZW5TZXJ2aWNlIgpsb2NhbCBSdW5TZXJ2aWNlID0gZ2FtZTpHZXRTZXJ2aWNlKCJSdW5TZXJ2aWNlIikKbG9jYWwgTW91c2UgPSBMb2NhbFBsYXllcjpHZXRNb3VzZSgpCmxvY2FsIF9HID0gX0cgb3IgZ2V0Z2VudigpCnJlcGVhdCB3YWl0KDApIHVudGlsIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllcgpsb2NhbCBpZCA9IGdhbWUuUGxhY2VJZCBpZiBpZCA9PSA3NDQ5NDIzNjM1IHRoZW4gV29ybGQzID0gdHJ1ZTsgZWxzZSBnYW1lOlNodXRkb3duKCkgZW5kOwpyZXBlYXQgd2FpdCgpIHVudGlsIGdhbWU6SXNMb2FkZWQoKQpfRy5TZXR0aW5ncyA9IHsKQXV0b0Zhcm0gPSBmYWxzZSwKTmVhcmVhc3RGYXJtID0gZmFsc2UsCkF1dG9OZXdXb3JsZCA9IGZhbHNlLApBdXRvU2FiZXIgPSBmYWxzZSwKQXV0b1BvbGUgPSBmYWxzZSwKVGVsZXBvcnRJc2xhbmQgPSBmYWxzZSwKQXV0b1RoaXJkU2VhID0gZmFsc2UsCkF1dG9CYXJ0aWxvUXVlc3QgPSBmYWxzZSwKQXV0b19Fdm9fUmFjZV9WMiA9IGZhbHNlLApBdXRvRGFya0NvYXQgPSBmYWxzZSwKQXV0b1N3YW5HbGFzc2VzID0gZmFsc2UsCkF1dG9UcnVlVHJpcGxLYXRhbmEgPSBmYWxzZSwKQXV0b1Jlbmdva3UgPSBmYWxzZSwKQXV0b0VjdG9wbGFzbSA9IGZhbHNlLApBdXRvRmFjdG9yeSA9IGZhbHNlLApNaXJhZ2UgPSBmYWxzZSAsCk1pcmFnZUhvcCA9IGZhbHNlLApBdXRvX0dlYXIgPSBmYWxzZSwKVGVsZXBvcnRHZWFyID0gZmFsc2UsCkF1dG9SYWluYm93SGFraSA9IGZhbHNlLApBdXRvQnV5RW5jaGFubWVudEhha2lIb3AgPSBmYWxzZSwKQXV0b0J1eUxlZ2VuZGFyeVN3b3JkSG9wID0gZmFsc2UsCkF1dG9FbGl0ZUh1bnRlciA9IGZhbHNlLApBdXRvTXVza2V0ZWVySGF0ID0gZmFsc2UsCkF1dG9CdWRkeVN3b3JkID0gZmFsc2UsCkF1dG9GYXJtQm9uZSA9IGZhbHNlLApBdXRvS2VuSGFraVYyID0gZmFsc2UsCkF1dG9PYnNlcnZhdGlvbiA9IGZhbHNlLApBdXRvT2JzZXJ2YXRpb25fSG9wID0gZmFsc2UsCkF1dG9Hb2RIdW1hbiA9IGZhbHNlLApBdXRvQ2F2YW5kZXIgPSBmYWxzZSwKQXV0b0N1cnNlZER1YWxLYXRhbmEgPSBmYWxzZSwKQXV0b1lhbWFTd29yZCA9IGZhbHNlLApBdXRvVHVzaGl0YVN3b3JkID0gZmFsc2UsCkF1dG9TZXJwZW50Qm93ID0gZmFsc2UsCkF1dG9EYXJrRGFnZ2VyID0gZmFsc2UsCkF1dG9DYWtlUHJpbmNlID0gZmFsc2UsCkF1dG9Eb3VnaFYyID0gZmFsc2UsCkF1dG9Ib2x5VG9yY2ggPSBmYWxzZSwKQXV0b0J1ZGR5U3dvcmRzID0gZmFsc2UsCkF1dG9GYXJtQm9zc0hhbGxvdyA9IGZhbHNlLApBdXRvRXZlbnQgPSBmYWxzZSwKVFBUT0JPQVQgPSBmYWxzZSwKQXV0b0Zhcm1NYXRlcmlhbCA9IGZhbHNlLApUZWxlcG9ydHRvcCA9IGZhbHNlLApBdXRvRmFybUNoZXN0ID0gZmFsc2UsCkF1dG9BbGxCb3NzID0gZmFsc2UsCkF1dG9Cb3NzU2VsZWN0ID0gZmFsc2UsCkF1dG9GYXJtQm9zcyA9IGZhbHNlLApBdXRvRmFybUZydWl0TWFzdGVyeSA9IGZhbHNlLApBdXRvRmFybUd1bk1hc3RlcnkgPSBmYWxzZSwKRmFybU1hc3RlcnlTd29yZExpc3QgPSBmYWxzZSwKQXV0b1JhaWRzID0gZmFsc2UsCkF1dG9OZXh0UGxhY2UgPSBmYWxzZQp9CmZ1bmN0aW9uIFZlYyh0ZXh0KQpsb2NhbCBOb3RpZmljYXRpb24gPSByZXF1aXJlKGdhbWUuUmVwbGljYXRlZFN0b3JhZ2UuTm90aWZpY2F0aW9uKQpsb2NhbCBub3RpZmljYXRpb24gPSBOb3RpZmljYXRpb24ubmV3KHRleHQpCm5vdGlmaWNhdGlvbi5EdXJhdGlvbiA9IDEwCm5vdGlmaWNhdGlvbjpEaXNwbGF5KCkKZW5kClZlYygiPENvbG9yPUN5YW4+VmVjdG9yIEh1YihCRVRBKSBMb2FkaW5nLi48Q29sb3I9Lz4iKQpmdW5jdGlvbiBMb2FkU2V0dGluZ3MoKQppZiByZWFkZmlsZSBhbmQgd3JpdGVmaWxlIGFuZCBpc2ZpbGUgYW5kIGlzZm9sZGVyIHRoZW4KaWYgbm90IGlzZm9sZGVyKCJWZWN0b3JIdWIiKSB0aGVuCm1ha2Vmb2xkZXIoIlZlY3Rvckh1YiIpCmVuZAppZiBub3QgaXNmb2xkZXIoIlZlY3Rvckh1Yi9CbG94IEZydWl0cy8iKSB0aGVuCm1ha2Vmb2xkZXIoIlZlY3Rvckh1Yi9CbG94IEZydWl0cy8iKQplbmQKaWYgbm90IGlzZmlsZSgiVmVjdG9ySHViL0Jsb3ggRnJ1aXRzLyIgLi4gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLk5hbWUgLi4gIi5qc29uIikgdGhlbgp3cml0ZWZpbGUoIlZlY3Rvckh1Yi9CbG94IEZydWl0cy8iIC4uIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5OYW1lIC4uICIuanNvbiIsCmdhbWU6R2V0U2VydmljZSgiSHR0cFNlcnZpY2UiKTpKU09ORW5jb2RlKF9HLlNldHRpbmdzKSkKZWxzZQpsb2NhbCBEZWNvZGUgPSBnYW1lOkdldFNlcnZpY2UoIkh0dHBTZXJ2aWNlIik6SlNPTkRlY29kZShyZWFkZmlsZSgiVmVjdG9ySHViL0Jsb3ggRnJ1aXRzLyIgLi4KZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLk5hbWUgLi4gIi5qc29uIikpCmZvciBpLCB2IGluIHBhaXJzKERlY29kZSkgZG8KX0cuU2V0dGluZ3NbaV0gPSB2CmVuZAplbmQKZWxzZQpyZXR1cm4KZW5kCmVuZApmdW5jdGlvbiBTYXZlU2V0dGluZ3MoKQppZiByZWFkZmlsZSBhbmQgd3JpdGVmaWxlIGFuZCBpc2ZpbGUgYW5kIGlzZm9sZGVyIHRoZW4KaWYgbm90IGlzZmlsZSgiVmVjdG9ySHViL0Jsb3ggRnJ1aXRzLyIgLi4gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLk5hbWUgLi4gIi5qc29uIikgdGhlbgpMb2FkU2V0dGluZ3MoKQplbHNlCmxvY2FsIERlY29kZSA9IGdhbWU6R2V0U2VydmljZSgiSHR0cFNlcnZpY2UiKTpKU09ORGVjb2RlKHJlYWRmaWxlKCJWZWN0b3JIdWIvQmxveCBGcnVpdHMvIiAuLgpnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuTmFtZSAuLiAiLmpzb24iKSkKbG9jYWwgQXJyYXkgPSB7fQpmb3IgaSwgdiBpbiBwYWlycyhfRy5TZXR0aW5ncykgZG8KQXJyYXlbaV0gPSB2CmVuZAp3cml0ZWZpbGUoIlZlY3Rvckh1Yi9CbG94IEZydWl0cy8iIC4uIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5OYW1lIC4uICIuanNvbiIsCmdhbWU6R2V0U2VydmljZSgiSHR0cFNlcnZpY2UiKTpKU09ORW5jb2RlKEFycmF5KSkKZW5kCmVsc2UKcmV0dXJuCmVuZAplbmQKTG9hZFNldHRpbmdzKCkKcmVwZWF0IHdhaXQoMCkgdW50aWwgZ2FtZTpJc0xvYWRlZCgpCnBjYWxsKGZ1bmN0aW9uKCkKaWYgbm90IGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5UZWFtIH49IG5pbCAgYW5kIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLlBsYXllckd1aVsiTWFpbiAobWluaW1hbCkiXTpGaW5kRmlyc3RDaGlsZCgiQ2hvb3NlVGVhbSIpICB0aGVuCnJlcGVhdCB3YWl0KCkKaWYgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuUGxheWVyR3VpOldhaXRGb3JDaGlsZCgiTWFpbiAobWluaW1hbCkiKS5DaG9vc2VUZWFtLlZpc2libGUgPT0gdHJ1ZSB0aGVuCmlmIF9HLlRlYW0gPT0gIlBpcmF0ZSIgdGhlbgpmb3IgaSwgdiBpbiBwYWlycyhnZXRjb25uZWN0aW9ucyhnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5QbGF5ZXJHdWlbIk1haW4gKG1pbmltYWwpIl0uQ2hvb3NlVGVhbS5Db250YWluZXIuUGlyYXRlcy5GcmFtZS5UZXh0QnV0dG9uLkFjdGl2YXRlZCkpIGRvCnYuRnVuY3Rpb24oKQplbmQKZWxzZWlmIF9HLlRlYW0gPT0gIk1hcmluZSIgdGhlbgpmb3IgaSwgdiBpbiBwYWlycyhnZXRjb25uZWN0aW9ucyhnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5QbGF5ZXJHdWlbIk1haW4gKG1pbmltYWwpIl0uQ2hvb3NlVGVhbS5Db250YWluZXIuTWFyaW5lcy5GcmFtZS5UZXh0QnV0dG9uLkFjdGl2YXRlZCkpIGRvCnYuRnVuY3Rpb24oKQplbmQKZWxzZQpmb3IgaSwgdiBpbiBwYWlycyhnZXRjb25uZWN0aW9ucyhnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5QbGF5ZXJHdWlbIk1haW4gKG1pbmltYWwpIl0uQ2hvb3NlVGVhbS5Db250YWluZXIuUGlyYXRlcy5GcmFtZS5UZXh0QnV0dG9uLkFjdGl2YXRlZCkpIGRvCnYuRnVuY3Rpb24oKQplbmQKZW5kCmVuZAp1bnRpbCBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuVGVhbSB+PSBuaWwKZW5kCmVuZCkKZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuSWRsZWQ6Y29ubmVjdChmdW5jdGlvbigpCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbFVzZXIiKTpCdXR0b24yRG93bihWZWN0b3IyLm5ldygwLCAwKSwgd29ya3NwYWNlLkN1cnJlbnRDYW1lcmEuQ0ZyYW1lKQp3YWl0KDEpCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbFVzZXIiKTpCdXR0b24yVXAoVmVjdG9yMi5uZXcoMCwgMCksIHdvcmtzcGFjZS5DdXJyZW50Q2FtZXJhLkNGcmFtZSkKZW5kKQpmdW5jdGlvbiBVbkVxdWlwV2VhcG9uKFdlYXBvbikKaWYgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZChXZWFwb24pIHRoZW4KX0cuTm90QXV0b0VxdWlwID0gdHJ1ZQp3YWl0KC41KQpnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKFdlYXBvbikuUGFyZW50ID0gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkJhY2twYWNrCndhaXQoLjEpCl9HLk5vdEF1dG9FcXVpcCA9IGZhbHNlCmVuZAplbmQKZnVuY3Rpb24gRXF1aXBXZWFwb24oVG9vbCkKcGNhbGwoZnVuY3Rpb24oKQppZiBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoVG9vbCkgdGhlbgpsb2NhbCBUb29sSHVtYW5vaWQgPSBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoVG9vbCkKZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZDpFcXVpcFRvb2woVG9vbEh1bWFub2lkKQplbmQKZW5kKQplbmQKc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB3YWl0KCkgZG8KcGNhbGwoZnVuY3Rpb24oKQppZiBfRy5Vc2Vza2lsbCB0aGVuCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbElucHV0TWFuYWdlciIpOlNlbmRLZXlFdmVudCh0cnVlLCJaIixmYWxzZSxnYW1lKQp3YWl0KDAuMSkKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsSW5wdXRNYW5hZ2VyIik6U2VuZEtleUV2ZW50KGZhbHNlLCJaIixmYWxzZSxnYW1lKQp3YWl0KDAuMSkKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsSW5wdXRNYW5hZ2VyIik6U2VuZEtleUV2ZW50KHRydWUsIlgiLGZhbHNlLGdhbWUpCndhaXQoMC4xKQpnYW1lOkdldFNlcnZpY2UoIlZpcnR1YWxJbnB1dE1hbmFnZXIiKTpTZW5kS2V5RXZlbnQoZmFsc2UsIlgiLGZhbHNlLGdhbWUpCndhaXQoMC4xKQpnYW1lOkdldFNlcnZpY2UoIlZpcnR1YWxJbnB1dE1hbmFnZXIiKTpTZW5kS2V5RXZlbnQodHJ1ZSwiQyIsZmFsc2UsZ2FtZSkKd2FpdCgwLjEpCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbElucHV0TWFuYWdlciIpOlNlbmRLZXlFdmVudChmYWxzZSwiQyIsZmFsc2UsZ2FtZSkKd2FpdCgwLjEpCmVuZAplbmQpCmVuZAplbmQpCmZ1bmN0aW9uIEVxdWlwQWxsV2VhcG9uKCkKcGNhbGwoZnVuY3Rpb24oKQpmb3IgXywgdiBpbiBwYWlycyhMb2NhbFBsYXllci5CYWNrcGFjazpHZXRDaGlsZHJlbigpKSBkbwppZiB2OklzQSgiVG9vbCIpIHRoZW4KTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkOkVxdWlwVG9vbCh2KQpfRy5Vc2VTa2lsbCA9IHRydWUKdGFzay53YWl0KDEpCmVuZAplbmQKZW5kKQplbmQKZnVuY3Rpb24gRXF1aXBCbG94RnJ1aXQoKQpmb3IgaSAsdiBpbiBwYWlycyhnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQmFja3BhY2s6R2V0Q2hpbGRyZW4oKSkgZG8KaWYgdi5Ub29sVGlwID09ICJCbG94IEZydWl0IiB0aGVuCmlmIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCh0b3N0cmluZyh2Lk5hbWUpKSB0aGVuCkVxdWlwV2VhcG9uKHYuTmFtZSkKZW5kCmVuZAplbmQKZW5kClRhYmVsID0ge30KZnVuY3Rpb24gR2V0Q2FrZV9DRnJhbWVfTW9uKCkKbG9jYWwgdGFyZ2V0TW9uc3RlcnMgPSB7IkJha2luZyBTdGFmZiIsICJIZWFkIEJha2VyIiwgIkNha2UgR3VhcmQiLCAiQ29va2llIENyYWZ0ZXIifQpsb2NhbCBlbmVteVNwYXducyA9IHdvcmtzcGFjZS5FbmVteVNwYXduczpHZXRDaGlsZHJlbigpCmxvY2FsIHJhbmRvbVNwYXduSW5kZXggPSBtYXRoLnJhbmRvbSgxLCAjZW5lbXlTcGF3bnMpCmxvY2FsIHNlbGVjdGVkU3Bhd24gPSBlbmVteVNwYXduc1tyYW5kb21TcGF3bkluZGV4XQpmb3IgXyxfdjEgaW4gcGFpcnModGFyZ2V0TW9uc3RlcnMpIGRvCmxvY2FsIHJlc3VsdCA9IHN0cmluZy5nc3ViKF92MSwgIkx2LiAiLCAiIikKbG9jYWwgcmVzdWx0MiA9IHN0cmluZy5nc3ViKHJlc3VsdCwgIlslWyVdXSIsICIiKQpsb2NhbCByZXN1bHQzID0gc3RyaW5nLmdzdWIocmVzdWx0MiwgIiVkKyIsICIiKQpsb2NhbCByZXN1bHQ0ID0gc3RyaW5nLmdzdWIocmVzdWx0MywgIiVzKyIsICIiKQpsb2NhbCBtb25RTmFtZSA9IHJlc3VsdDQKaWYgc2VsZWN0ZWRTcGF3bi5OYW1lID09IHJlc3VsdDQgdGhlbgpyZXR1cm4gc2VsZWN0ZWRTcGF3bi5DRnJhbWUKZW5kCmVuZAplbmQKbG9jYWwgRW5lbXlTcGF3bnMgPSBJbnN0YW5jZS5uZXcoIkZvbGRlciIsd29ya3NwYWNlKQpFbmVteVNwYXducy5OYW1lID0gIkVuZW15U3Bhd25zIgpmb3IgaSwgdiBpbiBwYWlycyh3b3Jrc3BhY2UuX1dvcmxkT3JpZ2luLkVuZW15U3Bhd25zOkdldENoaWxkcmVuKCkpIGRvCmlmIHY6SXNBKCJQYXJ0IikgdGhlbgpsb2NhbCBFbmVteVNwYXduc1gyID0gdjpDbG9uZSgpCmxvY2FsIHJlc3VsdCA9IHN0cmluZy5nc3ViKHYuTmFtZSwgIkx2LiAiLCAiIikKbG9jYWwgcmVzdWx0MiA9IHN0cmluZy5nc3ViKHJlc3VsdCwgIlslWyVdXSIsICIiKQpsb2NhbCByZXN1bHQzID0gc3RyaW5nLmdzdWIocmVzdWx0MiwgIiVkKyIsICIiKQpsb2NhbCByZXN1bHQ0ID0gc3RyaW5nLmdzdWIocmVzdWx0MywgIiVzKyIsICIiKQpFbmVteVNwYXduc1gyLk5hbWUgPSByZXN1bHQ0CkVuZW15U3Bhd25zWDIuUGFyZW50ID0gd29ya3NwYWNlLkVuZW15U3Bhd25zCkVuZW15U3Bhd25zWDIuQW5jaG9yZWQgPSB0cnVlCmVuZAplbmQKZm9yIGksIHYgaW4gcGFpcnMoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkdldENoaWxkcmVuKCkpIGRvCmlmIHY6SXNBKCJNb2RlbCIpIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikgdGhlbgpsb2NhbCBFbmVteVNwYXduc1gyID0gdi5IdW1hbm9pZFJvb3RQYXJ0OkNsb25lKCkKbG9jYWwgcmVzdWx0ID0gc3RyaW5nLmdzdWIodi5OYW1lLCAiTHYuICIsICIiKQpsb2NhbCByZXN1bHQyID0gc3RyaW5nLmdzdWIocmVzdWx0LCAiWyVbJV1dIiwgIiIpCmxvY2FsIHJlc3VsdDMgPSBzdHJpbmcuZ3N1YihyZXN1bHQyLCAiJWQrIiwgIiIpCmxvY2FsIHJlc3VsdDQgPSBzdHJpbmcuZ3N1YihyZXN1bHQzLCAiJXMrIiwgIiIpCkVuZW15U3Bhd25zWDIuTmFtZSA9IHJlc3VsdDQKRW5lbXlTcGF3bnNYMi5QYXJlbnQgPSB3b3Jrc3BhY2UuRW5lbXlTcGF3bnMKRW5lbXlTcGF3bnNYMi5BbmNob3JlZCA9IHRydWUKZW5kCmVuZApmb3IgaSwgdiBpbiBwYWlycyhnYW1lLlJlcGxpY2F0ZWRTdG9yYWdlOkdldENoaWxkcmVuKCkpIGRvCmlmIHY6SXNBKCJNb2RlbCIpIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikgdGhlbgpsb2NhbCBFbmVteVNwYXduc1gyID0gdi5IdW1hbm9pZFJvb3RQYXJ0OkNsb25lKCkKbG9jYWwgcmVzdWx0ID0gc3RyaW5nLmdzdWIodi5OYW1lLCAiTHYuICIsICIiKQpsb2NhbCByZXN1bHQyID0gc3RyaW5nLmdzdWIocmVzdWx0LCAiWyVbJV1dIiwgIiIpCmxvY2FsIHJlc3VsdDMgPSBzdHJpbmcuZ3N1YihyZXN1bHQyLCAiJWQrIiwgIiIpCmxvY2FsIHJlc3VsdDQgPSBzdHJpbmcuZ3N1YihyZXN1bHQzLCAiJXMrIiwgIiIpCkVuZW15U3Bhd25zWDIuTmFtZSA9IHJlc3VsdDQKRW5lbXlTcGF3bnNYMi5QYXJlbnQgPSB3b3Jrc3BhY2UuRW5lbXlTcGF3bnMKRW5lbXlTcGF3bnNYMi5BbmNob3JlZCA9IHRydWUKZW5kCmVuZApsb2NhbCBBdHRhY2tSYW5kb21UeXBlX01vbkNGcmFtZSA9IDEKbG9jYWwgbGFzdFJhbmRvbVVwZGF0ZSA9IDAKbG9jYWwgUkFORE9NX1VQREFURV9JTlRFUlZBTCA9IDEKbG9jYWwgUGxheWVycyA9IGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpCmxvY2FsIFdvcmtzcGFjZSA9IGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikKbG9jYWwgUmVwbGljYXRlZFN0b3JhZ2UgPSBnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikKbG9jYWwgTG9jYWxQbGF5ZXIgPSBQbGF5ZXJzLkxvY2FsUGxheWVyCmxvY2FsIGNhY2hlZFF1ZXN0RGF0YSA9IG5pbApsb2NhbCBsYXN0UXVlc3RDaGVjayA9IDAKbG9jYWwgUVVFU1RfQ0FDSEVfRFVSQVRJT04gPSAyCmxvY2FsIGZ1bmN0aW9uIFF1ZXN0Q2hlY2soKQpsb2NhbCBjdXJyZW50VGltZSA9IHRpY2soKQppZiBjYWNoZWRRdWVzdERhdGEgYW5kIChjdXJyZW50VGltZSAtIGxhc3RRdWVzdENoZWNrKSA8IFFVRVNUX0NBQ0hFX0RVUkFUSU9OIHRoZW4KcmV0dXJuIGNhY2hlZFF1ZXN0RGF0YQplbmQKbG9jYWwgTHZsID0gTG9jYWxQbGF5ZXIuRGF0YS5MZXZlbC5WYWx1ZQpsb2NhbCBNb2JOYW1lLCBRdWVzdE5hbWUsIFF1ZXN0TGV2ZWwsIE1vbiwgTlBDUG9zaXRpb24sIExldmVsUmVxdWlyZSwgTW9iQ0ZyYW1lCmlmIEx2bCA+PSAxIGFuZCBMdmwgPD0gOSB0aGVuCmlmIHRvc3RyaW5nKExvY2FsUGxheWVyLlRlYW0pID09ICJNYXJpbmVzIiB0aGVuCk1vYk5hbWUgPSAiVHJhaW5lZSIKUXVlc3ROYW1lID0gIk1hcmluZVF1ZXN0IgpRdWVzdExldmVsID0gMQpNb24gPSAiVHJhaW5lZSIKTlBDUG9zaXRpb24gPSBDRnJhbWUubmV3KC0yNzA5LjY3OTQ0LCAyNC41MjA2NTg1LCAyMTA0LjI0NTg1LCAtMC43NDQ3MjQ5MjksIC0zLjk3OTY3NDU1ZS0wOCwgLTAuNjY3MzcxNTcxLCA0LjMyNDAzNTg4ZS0wOCwgMSwgLTEuMDc4ODQzMDRlLTA3LCAwLjY2NzM3MTU3MSwgLTEuMDkyMDE1MTVlLTA3LCAtMC43NDQ3MjQ5MjkpCmVsc2VpZiB0b3N0cmluZyhMb2NhbFBsYXllci5UZWFtKSA9PSAiUGlyYXRlcyIgdGhlbgpNb2JOYW1lID0gIkJhbmRpdCIKTW9uID0gIkJhbmRpdCIKUXVlc3ROYW1lID0gIkJhbmRpdFF1ZXN0MSIKUXVlc3RMZXZlbCA9IDEKTlBDUG9zaXRpb24gPSBDRnJhbWUubmV3KDEwNTkuOTk3MzEsIDE2LjkyMjIwNjksIDE1NDkuMjgxNjIsIC0wLjk1NDY2Mjc0LCA3LjI5NzIxNzk0ZS0wOSwgMC4yOTc2ODk1ODcsIDEuMDUxOTAxMDZlLTA4LCAxLCA5LjIyMDY0MTE0ZS0wOSwgLTAuMjk3Njg5NTg3LCAxLjE5MzQwMDIyZS0wOCwgLTAuOTU0NjYyNzQpCmVuZApjYWNoZWRRdWVzdERhdGEgPSB7ClsxXSA9IFF1ZXN0TGV2ZWwsClsyXSA9IE5QQ1Bvc2l0aW9uLApbM10gPSBNb2JOYW1lLApbNF0gPSBRdWVzdE5hbWUsCls1XSA9IExldmVsUmVxdWlyZSwKWzZdID0gTW9uLApbN10gPSBNb2JDRnJhbWUKfQpsYXN0UXVlc3RDaGVjayA9IGN1cnJlbnRUaW1lCnJldHVybiBjYWNoZWRRdWVzdERhdGEKZW5kCmlmIEx2bCA+PSAxOTAgYW5kIEx2bCA8PSAyMDkgdGhlbgpNb2JOYW1lID0gIlByaXNvbmVyIgpRdWVzdE5hbWUgPSAiUHJpc29uZXJRdWVzdCIKUXVlc3RMZXZlbCA9IDEKTW9uID0gIlByaXNvbmVyIgpOUENQb3NpdGlvbiA9IENGcmFtZS5uZXcoNTMwOC45MzExNSwgMS42NTUxNzUyMSwgNDc1LjEyMDUxNCwgLTAuMDg5NDI3NDcxMiwgLTUuMDAyOTI5MThlLTA5LCAtMC45OTU5OTMzMTYsIDEuNjA4MTc4NTllLTA5LCAxLCAtNS4xNjc0NDg2OWUtMDksIDAuOTk1OTkzMzE2LCAtMi4wNjM4NDcwOWUtMDksIC0wLjA4OTQyNzQ3MTIpCk1vYkNGcmFtZSA9IGdldE1vYkNGcmFtZSgiUHJpc29uZXIiKQpjYWNoZWRRdWVzdERhdGEgPSB7ClsxXSA9IFF1ZXN0TGV2ZWwsClsyXSA9IE5QQ1Bvc2l0aW9uLApbM10gPSBNb2JOYW1lLApbNF0gPSBRdWVzdE5hbWUsCls1XSA9IExldmVsUmVxdWlyZSwKWzZdID0gTW9uLApbN10gPSBNb2JDRnJhbWUKfQpsYXN0UXVlc3RDaGVjayA9IGN1cnJlbnRUaW1lCnJldHVybiBjYWNoZWRRdWVzdERhdGEKZW5kCmlmIEx2bCA+PSAyMTAgYW5kIEx2bCA8PSAyNDkgdGhlbgpNb2JOYW1lID0gIkRhbmdlcm91cyBQcmlzb25lciIKUXVlc3ROYW1lID0gIlByaXNvbmVyUXVlc3QiClF1ZXN0TGV2ZWwgPSAyCk1vbiA9ICJEYW5nZXJvdXMgUHJpc29uZXIiCk5QQ1Bvc2l0aW9uID0gQ0ZyYW1lLm5ldyg1MzA4LjkzMTE1LCAxLjY1NTE3NTIxLCA0NzUuMTIwNTE0LCAtMC4wODk0Mjc0NzEyLCAtNS4wMDI5MjkxOGUtMDksIC0wLjk5NTk5MzMxNiwgMS42MDgxNzg1OWUtMDksIDEsIC01LjE2NzQ0ODY5ZS0wOSwgMC45OTU5OTMzMTYsIC0yLjA2Mzg0NzA5ZS0wOSwgLTAuMDg5NDI3NDcxMikKTW9iQ0ZyYW1lID0gZ2V0TW9iQ0ZyYW1lKCJEYW5nZXJvdXNQcmlzb25lciIpCmNhY2hlZFF1ZXN0RGF0YSA9IHsKWzFdID0gUXVlc3RMZXZlbCwKWzJdID0gTlBDUG9zaXRpb24sClszXSA9IE1vYk5hbWUsCls0XSA9IFF1ZXN0TmFtZSwKWzVdID0gTGV2ZWxSZXF1aXJlLApbNl0gPSBNb24sCls3XSA9IE1vYkNGcmFtZQp9Cmxhc3RRdWVzdENoZWNrID0gY3VycmVudFRpbWUKcmV0dXJuIGNhY2hlZFF1ZXN0RGF0YQplbmQKbG9jYWwgR3VpZGVNb2R1bGUgPSByZXF1aXJlKFJlcGxpY2F0ZWRTdG9yYWdlLkd1aWRlTW9kdWxlKQpsb2NhbCBRdWVzdHMgPSByZXF1aXJlKFJlcGxpY2F0ZWRTdG9yYWdlLlF1ZXN0cykKZm9yIGksdiBpbiBwYWlycyhHdWlkZU1vZHVsZVsiRGF0YSJdWyJOUENMaXN0Il0pIGRvCmZvciBpMSx2MSBpbiBwYWlycyh2WyJMZXZlbHMiXSkgZG8KaWYgTHZsID49IHYxIHRoZW4KaWYgbm90IExldmVsUmVxdWlyZSB0aGVuCkxldmVsUmVxdWlyZSA9IDAKZW5kCmlmIHYxID4gTGV2ZWxSZXF1aXJlIHRoZW4KTlBDUG9zaXRpb24gPSBpWyJDRnJhbWUiXQpRdWVzdExldmVsID0gaTEKTGV2ZWxSZXF1aXJlID0gdjEKZW5kCmlmICN2WyJMZXZlbHMiXSA9PSAzIGFuZCBRdWVzdExldmVsID09IDMgdGhlbgpOUENQb3NpdGlvbiA9IGlbIkNGcmFtZSJdClF1ZXN0TGV2ZWwgPSAyCkxldmVsUmVxdWlyZSA9IHZbIkxldmVscyJdWzJdCmVuZAplbmQKZW5kCmVuZAppZiBMdmwgPj0gMzc1IGFuZCBMdmwgPD0gNDQ5IHRoZW4KaWYgX0cuQXV0b0Zhcm0gYW5kIE5QQ1Bvc2l0aW9uIGFuZCAoTlBDUG9zaXRpb24uUG9zaXRpb24gLSBMb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikuTWFnbml0dWRlID4gMzAwMCB0aGVuClJlcGxpY2F0ZWRTdG9yYWdlLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigicmVxdWVzdEVudHJhbmNlIixWZWN0b3IzLm5ldyg2MTE2My44NTE1NjI1LCAxMS42Nzk2ODc1LCAxODE5Ljc4NDE3OTY4NzUpKQplbmQKZW5kCmZvciBpLHYgaW4gcGFpcnMoUXVlc3RzKSBkbwpmb3IgaTEsdjEgaW4gcGFpcnModikgZG8KaWYgdjFbIkxldmVsUmVxIl0gPT0gTGV2ZWxSZXF1aXJlIGFuZCBpIH49ICJDaXRpemVuUXVlc3QiIHRoZW4KUXVlc3ROYW1lID0gaQpmb3IgaTIsdjIgaW4gcGFpcnModjFbIlRhc2siXSkgZG8KTW9iTmFtZSA9IGkyCk1vbiA9IHN0cmluZy5zcGxpdChpMiwiIFtMdi4gIi4uIHYxWyJMZXZlbFJlcSJdIC4uICJdIilbMV0KZW5kCmVuZAplbmQKZW5kCmlmIFF1ZXN0TmFtZSA9PSAiTWFyaW5lUXVlc3QyIiB0aGVuClF1ZXN0TmFtZSA9ICJNYXJpbmVRdWVzdDIiClF1ZXN0TGV2ZWwgPSAxCk1vYk5hbWUgPSAiQ2hpZWYgUGV0dHkgT2ZmaWNlciIKTW9uID0gIkNoaWVmIFBldHR5IE9mZmljZXIiCkxldmVsUmVxdWlyZSA9IDEyMAplbHNlaWYgUXVlc3ROYW1lID09ICJJbXBlbFF1ZXN0IiB0aGVuClF1ZXN0TmFtZSA9ICJQcmlzb25lclF1ZXN0IgpRdWVzdExldmVsID0gMgpNb2JOYW1lID0gIkRhbmdlcm91cyBQcmlzb25lciIKTW9uID0gIkRhbmdlcm91cyBQcmlzb25lciIKTGV2ZWxSZXF1aXJlID0gMjEwCk5QQ1Bvc2l0aW9uID0gQ0ZyYW1lLm5ldyg1MzEwLjYwNTQ3LCAwLjM1MDAxNDkyNSwgNDc0Ljk0NjU5NCwgMC4wMTc1MDE3MTE4LCAwLCAwLjk5OTg0NjkzNSwgMCwgMSwgMCwgLTAuOTk5ODQ2OTM1LCAwLCAwLjAxNzUwMTcxMTgpCmVsc2VpZiBRdWVzdE5hbWUgPT0gIlNreUV4cDFRdWVzdCIgdGhlbgppZiBRdWVzdExldmVsID09IDEgdGhlbgpOUENQb3NpdGlvbiA9IENGcmFtZS5uZXcoLTQ3MjEuODg4NjcsIDg0My44NzQ2OTUsIC0xOTQ5Ljk2NjQzLCAwLjk5NjE5MTg1OSwgLTAsIC0wLjA4NzE4ODQzMDEsIDAsIDEsIC0wLCAwLjA4NzE4ODQzMDEsIDAsIDAuOTk2MTkxODU5KQplbHNlaWYgUXVlc3RMZXZlbCA9PSAyIHRoZW4KTlBDUG9zaXRpb24gPSBDRnJhbWUubmV3KC03ODU5LjA5ODE0LCA1NTQ0LjE5MDQzLCAtMzgxLjQ3NjE5NiwgLTAuNDIyNTkyOTk4LCAwLCAwLjkwNjMxOTYxOCwgMCwgMSwgMCwgLTAuOTA2MzE5NjE4LCAwLCAtMC40MjI1OTI5OTgpCmVuZAplbHNlaWYgUXVlc3ROYW1lID09ICJBcmVhMlF1ZXN0IiBhbmQgUXVlc3RMZXZlbCA9PSAyIHRoZW4KUXVlc3ROYW1lID0gIkFyZWEyUXVlc3QiClF1ZXN0TGV2ZWwgPSAxCk1vYk5hbWUgPSAiU3dhbiBQaXJhdGUiCk1vbiA9ICJTd2FuIFBpcmF0ZSIKTGV2ZWxSZXF1aXJlID0gNzc1CmVsc2VpZiBRdWVzdE5hbWUgPT0gIlRpa2lRdWVzdDEiIGFuZCBRdWVzdExldmVsID09IDEgdGhlbgpRdWVzdExldmVsID0gMQpNb2JOYW1lID0gIklzbGUgT3V0bGF3IgpNb24gPSAiSXNsZSBPdXRsYXciCkxldmVsUmVxdWlyZSA9IDI0NTAKZWxzZWlmIFF1ZXN0TmFtZSA9PSAiVGlraVF1ZXN0MSIgYW5kIFF1ZXN0TGV2ZWwgPT0gMiB0aGVuClF1ZXN0TGV2ZWwgPSAyCk1vYk5hbWUgPSAiSXNsYW5kIEJveSIKTW9uID0gIklzbGFuZCBCb3kiCkxldmVsUmVxdWlyZSA9IDI0NzUKZWxzZWlmIFF1ZXN0TmFtZSA9PSAiVGlraVF1ZXN0MiIgYW5kIFF1ZXN0TGV2ZWwgPT0gMSB0aGVuClF1ZXN0TGV2ZWwgPSAxCk1vYk5hbWUgPSAiU3VuLWtpc3NlZCBXYXJyaW9yIgpNb24gPSAiU3VuLWtpc3NlZCBXYXJyaW9yIgpMZXZlbFJlcXVpcmUgPSAyNTAwCmVsc2VpZiBRdWVzdE5hbWUgPT0gIlRpa2lRdWVzdDIiIGFuZCBRdWVzdExldmVsID09IDIgdGhlbgpRdWVzdExldmVsID0gMgpNb2JOYW1lID0gIklzbGUgQ2hhbXBpb24iCk1vbiA9ICJJc2xlIENoYW1waW9uciIKTGV2ZWxSZXF1aXJlID0gMjUyNQplbHNlaWYgUXVlc3ROYW1lID09ICJUaWtpUXVlc3QzIiBhbmQgUXVlc3RMZXZlbCA9PSAxIHRoZW4KUXVlc3RMZXZlbCA9IDEKTW9iTmFtZSA9ICJTZXJwZW50IEh1bnRlciIKTW9uID0gIlNlcnBlbnQgSHVudGVyIgpMZXZlbFJlcXVpcmUgPSAyNTUwCmVsc2VpZiBRdWVzdE5hbWUgPT0gIlRpa2lRdWVzdDMiIGFuZCBRdWVzdExldmVsID09IDIgdGhlbgpRdWVzdExldmVsID0gMgpNb2JOYW1lID0gIlNrdWxsIFNsYXllciIKTW9uID0gIlNrdWxsIFNsYXllciIKTGV2ZWxSZXF1aXJlID0gMjU3NQplbHNlaWYgUXVlc3ROYW1lID09ICJTdWJtZXJnZWRRdWVzdDEiIGFuZCBRdWVzdExldmVsID09IDEgdGhlbgpRdWVzdExldmVsID0gMQpNb2JOYW1lID0gIlJlZWYgQmFuZGl0IgpNb24gPSAiUmVlZiBCYW5kaXQiCkxldmVsUmVxdWlyZSA9IDI2MDAKZWxzZWlmIFF1ZXN0TmFtZSA9PSAiU3VibWVyZ2VkUXVlc3QxIiBhbmQgUXVlc3RMZXZlbCA9PSAyIHRoZW4KUXVlc3RMZXZlbCA9IDIKTW9iTmFtZSA9ICJDb3JhbCBQaXJhdGUiCk1vbiA9ICJDb3JhbCBQaXJhdGUiCkxldmVsUmVxdWlyZSA9IDI2MjUKZWxzZWlmIFF1ZXN0TmFtZSA9PSAiU3VibWVyZ2VkUXVlc3QyIiBhbmQgUXVlc3RMZXZlbCA9PSAxIHRoZW4KUXVlc3RMZXZlbCA9IDEKTW9iTmFtZSA9ICJTZWEgQ2hhbnRlciIKTW9uID0gIlNlYSBDaGFudGVyIgpMZXZlbFJlcXVpcmUgPSAyNjUwCmVsc2VpZiBRdWVzdE5hbWUgPT0gIlN1Ym1lcmdlZFF1ZXN0MiIgYW5kIFF1ZXN0TGV2ZWwgPT0gMiB0aGVuClF1ZXN0TGV2ZWwgPSAyCk1vYk5hbWUgPSAiT2NlYW4gUHJvcGhldCIKTW9uID0gIk9jZWFuIFByb3BoZXQiCkxldmVsUmVxdWlyZSA9IDI2NzUKZW5kCmlmIE1vYk5hbWUgdGhlbgpNb2JOYW1lID0gTW9iTmFtZTpzdWIoMSwjTW9iTmFtZSkKaWYgbm90IE1vYk5hbWU6ZmluZCgiTHYiKSB0aGVuCmZvciBpLHYgaW4gcGFpcnMoV29ya3NwYWNlLkVuZW1pZXM6R2V0Q2hpbGRyZW4oKSkgZG8KbG9jYWwgTW9uTFYgPSBzdHJpbmcubWF0Y2godi5OYW1lLCAiJWQrIikKaWYgdi5OYW1lOmZpbmQoTW9iTmFtZSkgYW5kICN2Lk5hbWUgPiAjTW9iTmFtZSBhbmQgTW9uTFYgYW5kIHRvbnVtYmVyKE1vbkxWKSA8PSBMdmwgKyA1MCB0aGVuCk1vYk5hbWUgPSB2Lk5hbWUKYnJlYWsKZW5kCmVuZAplbmQKaWYgbm90IE1vYk5hbWU6ZmluZCgiTHYiKSB0aGVuCmZvciBpLHYgaW4gcGFpcnMoUmVwbGljYXRlZFN0b3JhZ2U6R2V0Q2hpbGRyZW4oKSkgZG8KbG9jYWwgTW9uTFYgPSBzdHJpbmcubWF0Y2godi5OYW1lLCAiJWQrIikKaWYgdi5OYW1lOmZpbmQoTW9iTmFtZSkgYW5kICN2Lk5hbWUgPiAjTW9iTmFtZSBhbmQgTW9uTFYgYW5kIHRvbnVtYmVyKE1vbkxWKSA8PSBMdmwgKyA1MCB0aGVuCk1vYk5hbWUgPSB2Lk5hbWUKTW9uID0gdi5OYW1lCmJyZWFrCmVuZAplbmQKZW5kCmVuZApNb2JDRnJhbWUgPSBnZXRNb2JDRnJhbWUoTW9iTmFtZSkKY2FjaGVkUXVlc3REYXRhID0gewpbMV0gPSBRdWVzdExldmVsLApbMl0gPSBOUENQb3NpdGlvbiwKWzNdID0gTW9iTmFtZSwKWzRdID0gUXVlc3ROYW1lLApbNV0gPSBMZXZlbFJlcXVpcmUsCls2XSA9IE1vbiwKWzddID0gTW9iQ0ZyYW1lCn0KbGFzdFF1ZXN0Q2hlY2sgPSBjdXJyZW50VGltZQpyZXR1cm4gY2FjaGVkUXVlc3REYXRhCmVuZApmdW5jdGlvbiBnZXRNb2JDRnJhbWUobW9iTmFtZSkKaWYgbm90IG1vYk5hbWUgdGhlbiByZXR1cm4ge30gZW5kCmxvY2FsIG1hdGNoaW5nQ0ZyYW1lcyA9IHt9CmxvY2FsIHJlc3VsdCA9IHN0cmluZy5nc3ViKG1vYk5hbWUsICJMdi4gIiwgIiIpCmxvY2FsIHJlc3VsdDIgPSBzdHJpbmcuZ3N1YihyZXN1bHQsICJbJVslXV0iLCAiIikKbG9jYWwgcmVzdWx0MyA9IHN0cmluZy5nc3ViKHJlc3VsdDIsICIlZCsiLCAiIikKbG9jYWwgcmVzdWx0NCA9IHN0cmluZy5nc3ViKHJlc3VsdDMsICIlcysiLCAiIikKZm9yIGksdiBpbiBwYWlycyhXb3Jrc3BhY2UuRW5lbXlTcGF3bnM6R2V0Q2hpbGRyZW4oKSkgZG8KaWYgdi5OYW1lID09IHJlc3VsdDQgdGhlbgp0YWJsZS5pbnNlcnQobWF0Y2hpbmdDRnJhbWVzLCB2LkNGcmFtZSkKZW5kCmVuZApyZXR1cm4gbWF0Y2hpbmdDRnJhbWVzCmVuZApzcGF3bihmdW5jdGlvbigpCnBjYWxsKGZ1bmN0aW9uKCkKbG9jYWwgUGxheWVycyA9IGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpCmxvY2FsIFJ1blNlcnZpY2UgPSBnYW1lOkdldFNlcnZpY2UoIlJ1blNlcnZpY2UiKQpsb2NhbCBMb2NhbFBsYXllciA9IFBsYXllcnMuTG9jYWxQbGF5ZXIKbG9jYWwgZnVuY3Rpb24gc2V0dXBDaGFyYWN0ZXIoQ2hhcmFjdGVyKQppZiBub3QgQ2hhcmFjdGVyIHRoZW4gcmV0dXJuIGVuZApsb2NhbCBIUlAgPSBDaGFyYWN0ZXI6V2FpdEZvckNoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IiwgNSkKbG9jYWwgSHVtYW5vaWQgPSBDaGFyYWN0ZXI6V2FpdEZvckNoaWxkKCJIdW1hbm9pZCIsIDUpCmlmIG5vdCBIUlAgb3Igbm90IEh1bWFub2lkIHRoZW4Kd2FybigiSHVtYW5vaWRSb290UGFydCBvciBIdW1hbm9pZCBub3QgZm91bmQhIikKcmV0dXJuCmVuZApsb2NhbCBmdW5jdGlvbiBlbmFibGVBbnRpRmFsbCgpCkh1bWFub2lkOlNldFN0YXRlRW5hYmxlZChFbnVtLkh1bWFub2lkU3RhdGVUeXBlLkZhbGxpbmdEb3duLCBmYWxzZSkKSHVtYW5vaWQ6U2V0U3RhdGVFbmFibGVkKEVudW0uSHVtYW5vaWRTdGF0ZVR5cGUuRnJlZWZhbGwsIGZhbHNlKQplbmQKbG9jYWwgZnVuY3Rpb24gZGlzYWJsZUFudGlGYWxsKCkKSHVtYW5vaWQ6U2V0U3RhdGVFbmFibGVkKEVudW0uSHVtYW5vaWRTdGF0ZVR5cGUuRmFsbGluZ0Rvd24sIHRydWUpCkh1bWFub2lkOlNldFN0YXRlRW5hYmxlZChFbnVtLkh1bWFub2lkU3RhdGVUeXBlLkZyZWVmYWxsLCB0cnVlKQplbmQKbG9jYWwgZnVuY3Rpb24gY2FuY2VsRmFsbFN0YXRlKCkKaWYgSHVtYW5vaWQ6R2V0U3RhdGUoKSA9PSBFbnVtLkh1bWFub2lkU3RhdGVUeXBlLkZhbGxpbmdEb3duIG9yCkh1bWFub2lkOkdldFN0YXRlKCkgPT0gRW51bS5IdW1hbm9pZFN0YXRlVHlwZS5GcmVlZmFsbCB0aGVuCkh1bWFub2lkOkNoYW5nZVN0YXRlKEVudW0uSHVtYW5vaWRTdGF0ZVR5cGUuUnVubmluZykKZW5kCmVuZApsb2NhbCBzdGVwcGVkQ29ubmVjdGlvbgpzdGVwcGVkQ29ubmVjdGlvbiA9IFJ1blNlcnZpY2UuU3RlcHBlZDpDb25uZWN0KGZ1bmN0aW9uKCkKaWYgbm90IENoYXJhY3Rlci5QYXJlbnQgb3Igbm90IExvY2FsUGxheWVyLkNoYXJhY3RlciBvciBMb2NhbFBsYXllci5DaGFyYWN0ZXIgfj0gQ2hhcmFjdGVyIHRoZW4Kc3RlcHBlZENvbm5lY3Rpb246RGlzY29ubmVjdCgpCnJldHVybgplbmQKaWYgX0cuQXV0b0Zhcm0gb3IgX0cuTmVhcmVhc3RGYXJtIG9yIF9HLlRlbGVwb3J0SXNsYW5kIG9yCl9HLkF1dG9BbGxCb3NzIG9yIF9HLkF1dG9Cb3NzU2VsZWN0IG9yIF9HLkF1dG9GYXJtQm9zcyBvcgpfRy5BdXRvUmFpbmJvd0hha2kgb3IgX0cuQXV0b0VsaXRlSHVudGVyIG9yIF9HLkF1dG9DYXN0bGVSYWlkIG9yCl9HLkF1dG9NdXNrZXRlZXJIYXQgb3IgX0cuQXV0b0J1ZGR5U3dvcmQgb3IKX0cuQXV0b0Zhcm1Cb25lIG9yIF9HLkF1dG9LZW5IYWtpVjIgb3IgX0cuQXV0b09ic2VydmF0aW9uIG9yCl9HLkF1dG9Hb2RIdW1hbiBvciBfRy5BdXRvQ2F2YW5kZXIgb3IKX0cuQXV0b0N1cnNlZER1YWxLYXRhbmEgb3IgX0cuQXV0b1lhbWFTd29yZCBvciBfRy5BdXRvVHVzaGl0YVN3b3JkIG9yCl9HLkF1dG9TZXJwZW50Qm93b3Igb3IgX0cuQXV0b0RhcmtEYWdnZXIgb3IgX0cuQXV0b0Nha2VQcmluY2Ugb3IKX0cuQXV0b0RvdWdoVjIgb3IgX0cuQXV0b0hvbHlUb3JjaCBvciBfRy5BdXRvQnVkZHlTd29yZHMgb3IKX0cuQXV0b0Zhcm1Cb3NzSGFsbG93IG9yIF9HLlRQVE9CT0FUIG9yIF9HLlR1c2hpdGFfUXVlc3QyIG9yIF9HLlR1c2hpdGFfUXVlc3QxIG9yCl9HLkF1dG9GYXJtTWF0ZXJpYWwgb3IgX0cudGVsZXBvcnR0b3Agb3IgX0cuQXV0b0Zhcm1DaGVzdCBvciBfRy5Ub0RyYWdvbkh1bnRlciBvcgpfRy5UcHRvS2lzdW5lSXNsYW5kIG9yIF9HLkF1dG9RdWVzdERvam8gb3IgX0cuVG9Eb2pvIG9yIF9HLkF1dG9RdWVzdERvam8gb3IKX0cuQXV0b1F1ZXN0RHJhZ29uSHVudGVyIG9yIF9HLm5jcCBvciBfRy5UUEIgb3IgX0cuZmFybXNlYWV2ZW50IG9yCl9HLmRyYWdvbmh1bnRlcnF1ZXN0IG9yIF9HLkJ1eUJvYXQgb3IgX0cuQXV0b0ZpbmRJc2xhbmQgb3IgX0cuQXV0b1NlYWJlc3RGYXJtIG9yCl9HLnZvbGNhbm9Sb2NrcyBvciBfRy5BdXRvU2VhQmVzdCBvciBfRy5UbnBjIG9yIF9HLkNvbGxlY3RCb25lIG9yCl9HLkF1dG9GYXJtRnJ1aXRNYXN0ZXJ5IG9yIF9HLkF1dG9GYXJtR3VuTWFzdGVyeSBvcgpfRy5BdXRvUmFpZHMgb3IgX0cuQXV0b05leHRQbGFjZSBvciBfRy5BdXRvX0tpbGxfTGF3IG9yIF9HLkF1dG9fS2lsbF9QbGF5ZXJzX05lYXJieSB0aGVuCl9HLkJyaW5nTW9iID0gdHJ1ZQppZiBub3QgQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQ6RmluZEZpcnN0Q2hpbGQoIkJvZHlDbGlwIikgdGhlbgpsb2NhbCBOb2NsaXAgPSBJbnN0YW5jZS5uZXcoIkJvZHlWZWxvY2l0eSIpCk5vY2xpcC5OYW1lID0gIkJvZHlDbGlwIgpOb2NsaXAuUGFyZW50ID0gQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQKTm9jbGlwLk1heEZvcmNlID0gVmVjdG9yMy5uZXcoMTAwMDAwLCAxMDAwMDAsIDEwMDAwMCkKTm9jbGlwLlZlbG9jaXR5ID0gVmVjdG9yMy5uZXcoMCwgMCwgMCkKZW5kCmZvciBfLCB2IGluIHBhaXJzKENoYXJhY3RlcjpHZXREZXNjZW5kYW50cygpKSBkbwppZiB2OklzQSgiQmFzZVBhcnQiKSB0aGVuCnYuQ2FuQ29sbGlkZSA9IGZhbHNlCmVuZAplbmQKaWYgbm90IENoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiSGlnaGxpZ2h0IikgdGhlbgpsb2NhbCBIaWdobGlnaHQgPSBJbnN0YW5jZS5uZXcoIkhpZ2hsaWdodCIpCkhpZ2hsaWdodC5GaWxsQ29sb3IgPSBDb2xvcjMubmV3KDAsIDAsIDApCkhpZ2hsaWdodC5PdXRsaW5lQ29sb3IgPSBDb2xvcjMubmV3KDAsIDAsIDEpCkhpZ2hsaWdodC5GaWxsVHJhbnNwYXJlbmN5ID0gMApIaWdobGlnaHQuT3V0bGluZVRyYW5zcGFyZW5jeSA9IDAKSGlnaGxpZ2h0LlBhcmVudCA9IENoYXJhY3RlcgplbmQKZW5hYmxlQW50aUZhbGwoKQpjYW5jZWxGYWxsU3RhdGUoKQplbHNlCl9HLkJyaW5nTW9iID0gZmFsc2UKaWYgQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQ6RmluZEZpcnN0Q2hpbGQoIkJvZHlDbGlwIikgdGhlbgpDaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydDpGaW5kRmlyc3RDaGlsZCgiQm9keUNsaXAiKTpEZXN0cm95KCkKZW5kCmlmIENoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiSGlnaGxpZ2h0IikgdGhlbgpDaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkhpZ2hsaWdodCIpOkRlc3Ryb3koKQplbmQKZGlzYWJsZUFudGlGYWxsKCkKZW5kCmVuZCkKZW5kCmlmIExvY2FsUGxheWVyLkNoYXJhY3RlciB0aGVuCnNldHVwQ2hhcmFjdGVyKExvY2FsUGxheWVyLkNoYXJhY3RlcikKZW5kCkxvY2FsUGxheWVyLkNoYXJhY3RlckFkZGVkOkNvbm5lY3QoZnVuY3Rpb24obmV3Q2hhcmFjdGVyKQpzZXR1cENoYXJhY3RlcihuZXdDaGFyYWN0ZXIpCmVuZCkKTG9jYWxQbGF5ZXIuQW5jZXN0cnlDaGFuZ2VkOkNvbm5lY3QoZnVuY3Rpb24oKQppZiBub3QgTG9jYWxQbGF5ZXI6SXNEZXNjZW5kYW50T2YoZ2FtZSkgdGhlbgppZiBzdGVwcGVkQ29ubmVjdGlvbiB0aGVuCnN0ZXBwZWRDb25uZWN0aW9uOkRpc2Nvbm5lY3QoKQplbmQKZW5kCmVuZCkKZW5kKQplbmQpCnRhc2suc3Bhd24oZnVuY3Rpb24oKQppZiBzZXRzY3JpcHRhYmxlIHRoZW4gc2V0c2NyaXB0YWJsZShnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIsICJTaW11bGF0aW9uUmFkaXVzIiwgdHJ1ZSkgZW5kCmlmIHNldGhpZGRlbnByb3BlcnR5IHRoZW4gc2V0aGlkZGVucHJvcGVydHkoZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLCAiU2ltdWxhdGlvblJhZGl1cyIsIG1hdGguaHVnZSkgZW5kCmVuZCkKZnVuY3Rpb24gSW5NeU5ldFdvcmsob2JqZWN0KQppZiBpc25ldHdvcmtvd25lciB0aGVuIHJldHVybiBpc25ldHdvcmtvd25lcihvYmplY3QpIGVuZApyZXR1cm4gKG9iamVjdC5Qb3NpdGlvbiAtIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikuTWFnbml0dWRlIDw9IDUwMAplbmQKbG9jYWwgTG9jYWxQbGF5ZXIgPSBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIKdGFzay5zcGF3bihmdW5jdGlvbigpCndoaWxlIHRhc2sud2FpdCgpIGRvCnBjYWxsKGZ1bmN0aW9uKCkKaWYgX0cuQnJpbmdNb2IgdGhlbgpmb3IgaSx2IGluIHBhaXJzKGdhbWUuV29ya3NwYWNlLkVuZW1pZXM6R2V0Q2hpbGRyZW4oKSkgZG8KaWYgdi5IdW1hbm9pZC5IZWFsdGggPiAwIGFuZCAodi5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uIC0gUG9zTW9uLlBvc2l0aW9uKS5tYWduaXR1ZGUgPD0gMzAwIGFuZCBub3Qgc3RyaW5nLmZpbmQodi5OYW1lLCJCb3NzIikgIHRoZW4KaWYgSW5NeU5ldFdvcmsodi5IdW1hbm9pZFJvb3RQYXJ0KSB0aGVuCnYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgPSBQb3NNb24Kdi5IdW1hbm9pZC5KdW1wUG93ZXIgPSAwCnYuSHVtYW5vaWQuV2Fsa1NwZWVkID0gMAp2Lkh1bWFub2lkUm9vdFBhcnQuU2l6ZSA9IFZlY3RvcjMubmV3KDUwLDUwLDUwKQp2Lkh1bWFub2lkUm9vdFBhcnQuVHJhbnNwYXJlbmN5ID0gMQp2Lkh1bWFub2lkUm9vdFBhcnQuQ2FuQ29sbGlkZSA9IGZhbHNlCnYuSGVhZC5DYW5Db2xsaWRlID0gZmFsc2UKaWYgdi5IdW1hbm9pZDpGaW5kRmlyc3RDaGlsZCgiQW5pbWF0b3IiKSB0aGVuCnYuSHVtYW5vaWQuQW5pbWF0b3I6RGVzdHJveSgpCmVuZAp2Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDExKQp2Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDE0KQpzZXRoaWRkZW5wcm9wZXJ0eShnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIsICJTaW11bGF0aW9uUmFkaXVzIiwgIG1hdGguaHVnZSkKZW5kCmVuZAplbmQKZW5kCmVuZCkKZW5kCmVuZCkKaWYgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiU3R1biIpIHRoZW4KZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5TdHVuLkNoYW5nZWQ6Y29ubmVjdChmdW5jdGlvbigpCnBjYWxsKGZ1bmN0aW9uKCkKaWYgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiU3R1biIpIHRoZW4KZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5TdHVuLlZhbHVlID0gMAplbmQKZW5kKQplbmQpCmVuZApmdW5jdGlvbiBEaXNhYmxlZERhbWFnZSgpCnRhc2suc3Bhd24oZnVuY3Rpb24oKQpnYW1lOkdldFNlcnZpY2UoJ1J1blNlcnZpY2UnKS5TdGVwcGVkOkNvbm5lY3QoZnVuY3Rpb24oKQpwY2FsbChmdW5jdGlvbigpCmlmIF9HLkRpc2RhbWFnZSB0aGVuCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5Bc3NldHMuR1VJLkRhbWFnZUNvdW50ZXIuRW5hYmxlZCA9IGZhbHNlCmVsc2UKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLkFzc2V0cy5HVUkuRGFtYWdlQ291bnRlci5FbmFibGVkID0gdHJ1ZQplbmQKZW5kKQplbmQpCmVuZCkKc3Bhd24oZnVuY3Rpb24oKQpnYW1lOkdldFNlcnZpY2UoJ1J1blNlcnZpY2UnKS5TdGVwcGVkOkNvbm5lY3QoZnVuY3Rpb24oKQpmb3IgaSwgdiBpbiBwYWlycyhnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpWyJfV29ybGRPcmlnaW4iXTpHZXRDaGlsZHJlbigpKSBkbwpwY2FsbChmdW5jdGlvbigpCmlmIHYuTmFtZSA9PSAiQ3VydmVkUmluZyIgb3Igdi5OYW1lID09ICJTbGFzaEhpdCIgb3Igdi5OYW1lID09ICJTd29yZFNsYXNoIiB0aGVuCnY6RGVzdHJveSgpCmVuZAplbmQpCmVuZAplbmQpCmVuZCkKc3Bhd24oZnVuY3Rpb24oKQpnYW1lOkdldFNlcnZpY2UoJ1J1blNlcnZpY2UnKS5TdGVwcGVkOkNvbm5lY3QoZnVuY3Rpb24oKQpmb3IgaSwgdiBpbiBwYWlycyhnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuRWZmZWN0LkNvbnRhaW5lcjpHZXRDaGlsZHJlbigpKSBkbwpwY2FsbChmdW5jdGlvbigpCmlmIHYuTmFtZSA9PSAiRGVhdGgiIHRoZW4KdjpEZXN0cm95KCkKZW5kCmVuZCkKZW5kCmVuZCkKZW5kKQplbmQKZnVuY3Rpb24gQ29tKGNvbSwgLi4uKQpsb2NhbCBSZW1vdGUgPSBnYW1lOkdldFNlcnZpY2UoJ1JlcGxpY2F0ZWRTdG9yYWdlJykuUmVtb3RlczpGaW5kRmlyc3RDaGlsZCgiQ29tbSIgLi4gY29tKQppZiBSZW1vdGU6SXNBKCJSZW1vdGVFdmVudCIpIHRoZW4KUmVtb3RlOkZpcmVTZXJ2ZXIoLi4uKQplbHNlaWYgUmVtb3RlOklzQSgiUmVtb3RlRnVuY3Rpb24iKSB0aGVuClJlbW90ZTpJbnZva2VTZXJ2ZXIoLi4uKQplbmQKZW5kCmxvY2FsIGFjdGl2ZVR3ZWVucyA9IHt9CmxvYWRzdHJpbmcoZ2FtZTpIdHRwR2V0KCdodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vNzg3OHdxei9zYzEvcmVmcy9oZWFkcy9tYWluL2ZhdGJiZmYyJykpKCkKZnVuY3Rpb24gVFBCKENGZ28sIHZlaGljbGVTZWF0KQpsb2NhbCB0d2Vlbl9zID0gZ2FtZTpHZXRTZXJ2aWNlKCJUd2VlblNlcnZpY2UiKQppZiB2ZWhpY2xlU2VhdCB0aGVuCnByaW50KCJUUEIgY2FsbGVkIHRvIiwgQ0Znby5Qb3NpdGlvbikKbG9jYWwgaW5mbyA9IFR3ZWVuSW5mby5uZXcoKHZlaGljbGVTZWF0LkNGcmFtZS5Qb3NpdGlvbiAtIENGZ28uUG9zaXRpb24pLk1hZ25pdHVkZSAvIDM1MCwgRW51bS5FYXNpbmdTdHlsZS5MaW5lYXIpCmxvY2FsIHR3ZWVuID0gdHdlZW5fczpDcmVhdGUodmVoaWNsZVNlYXQsIGluZm8sIHtDRnJhbWUgPSBDRmdvfSkKdHdlZW46UGxheSgpCnRhYmxlLmluc2VydChhY3RpdmVUd2VlbnMsIHR3ZWVuKQpyZXR1cm4geyBTdG9wID0gZnVuY3Rpb24oKSB0d2VlbjpDYW5jZWwoKSBlbmQgfQplbmQKZW5kCmxvY2FsIHR3ZWVuCmxvY2FsIGZ1bmN0aW9uIEdldElzTGFuZCguLi4pCmxvY2FsIFJlYWx0YXJnZXRQb3MgPSB7IC4uLiB9CmxvY2FsIHRhcmdldFBvcyA9IFJlYWx0YXJnZXRQb3NbMV0KbG9jYWwgUmVhbFRhcmdldAppZiB0eXBlKHRhcmdldFBvcykgPT0gInZlY3RvciIgdGhlbgpSZWFsVGFyZ2V0ID0gdGFyZ2V0UG9zCmVsc2VpZiB0eXBlKHRhcmdldFBvcykgPT0gInVzZXJkYXRhIiB0aGVuClJlYWxUYXJnZXQgPSB0YXJnZXRQb3MuUG9zaXRpb24KZWxzZWlmIHR5cGUodGFyZ2V0UG9zKSA9PSAibnVtYmVyIiB0aGVuClJlYWxUYXJnZXQgPSBDRnJhbWUubmV3KHVucGFjayhSZWFsdGFyZ2V0UG9zKSkKUmVhbFRhcmdldCA9IFJlYWxUYXJnZXQuUG9zaXRpb24KZW5kCmxvY2FsIFJldHVyblZhbHVlCmxvY2FsIENoZWNrSW5PdXQgPSBtYXRoLmh1Z2UKaWYgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLlRlYW0gdGhlbgpsb2NhbCB0ZWFtU3Bhd25zID0gZ2FtZS5Xb3Jrc3BhY2UuX1dvcmxkT3JpZ2luLlBsYXllclNwYXduczpGaW5kRmlyc3RDaGlsZCh0b3N0cmluZyhnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuVGVhbSkpCmlmIHRlYW1TcGF3bnMgdGhlbgpmb3IgaSwgdiBpbiBwYWlycyh0ZWFtU3Bhd25zOkdldENoaWxkcmVuKCkpIGRvCmxvY2FsIFJlTWFnbml0dWRlID0gKFJlYWxUYXJnZXQgLSB2OkdldE1vZGVsQ0ZyYW1lKCkuUG9zaXRpb24pLk1hZ25pdHVkZQppZiBSZU1hZ25pdHVkZSA8IENoZWNrSW5PdXQgdGhlbgpDaGVja0luT3V0ID0gUmVNYWduaXR1ZGUKUmV0dXJuVmFsdWUgPSB2Lk5hbWUKZW5kCmVuZAplbmQKaWYgUmV0dXJuVmFsdWUgdGhlbgpyZXR1cm4gUmV0dXJuVmFsdWUKZW5kCmVuZAplbmQKbG9jYWwgR2xvYmFsRW52ID0gKGdldGdlbnYgb3IgZ2V0cmVudiBvciBnZXRmZW52KSgpCmxvY2FsIFBsYXllcnMgPSBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKQpsb2NhbCBUd2VlblNlcnZpY2UgPSBnYW1lOkdldFNlcnZpY2UoIlR3ZWVuU2VydmljZSIpCkdsb2JhbEVudi5oYXNSb3RhdGVkID0gR2xvYmFsRW52Lmhhc1JvdGF0ZWQgb3IgZmFsc2UKbG9jYWwgZnVuY3Rpb24gdG9UYXJnZXQoLi4uKQpsb2NhbCBSZWFsdGFyZ2V0UG9zID0geyAuLi4gfQpsb2NhbCB0YXJnZXRQb3MgPSBSZWFsdGFyZ2V0UG9zWzFdCmxvY2FsIFJlYWxUYXJnZXQKaWYgdHlwZSh0YXJnZXRQb3MpID09ICJ2ZWN0b3IiIHRoZW4KUmVhbFRhcmdldCA9IENGcmFtZS5uZXcodGFyZ2V0UG9zKQplbHNlaWYgdHlwZSh0YXJnZXRQb3MpID09ICJ1c2VyZGF0YSIgdGhlbgpSZWFsVGFyZ2V0ID0gdGFyZ2V0UG9zCmVsc2VpZiB0eXBlKHRhcmdldFBvcykgPT0gIm51bWJlciIgdGhlbgpSZWFsVGFyZ2V0ID0gQ0ZyYW1lLm5ldyh1bnBhY2soUmVhbHRhcmdldFBvcykpCmVuZAppZiBQbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpXYWl0Rm9yQ2hpbGQoIkh1bWFub2lkIikuSGVhbHRoID09IDAgdGhlbgppZiB0d2VlbiB0aGVuCnR3ZWVuOkNhbmNlbCgpCmVuZApyZXBlYXQKd2FpdCgpCnVudGlsIFBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOldhaXRGb3JDaGlsZCgiSHVtYW5vaWQiKS5IZWFsdGggPiAwCndhaXQoMC4yKQplbmQKbG9jYWwgdHdlZW5mdW5jID0ge30KbG9jYWwgcGxheWVyUG9zID0gUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6V2FpdEZvckNoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikuUG9zaXRpb24KbG9jYWwgdGFyZ2V0UG9zID0gUmVhbFRhcmdldC5Qb3NpdGlvbgpsb2NhbCBEaXN0YW5jZSA9IG1hdGguc3FydCgodGFyZ2V0UG9zLlggLSBwbGF5ZXJQb3MuWCleMiArICh0YXJnZXRQb3MuWiAtIHBsYXllclBvcy5aKV4yKQpsb2NhbCBTcGVlZAppZiBub3QgR2xvYmFsRW52Lmhhc1JvdGF0ZWQgYW5kIERpc3RhbmNlID49IDIwMCB0aGVuClBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lID0gUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgKiBDRnJhbWUubmV3KDAsIDE4MCwgMCkKR2xvYmFsRW52Lmhhc1JvdGF0ZWQgPSB0cnVlCmVuZAppZiBEaXN0YW5jZSA8IDUgdGhlbgpyZXR1cm4gewpTdG9wID0gZnVuY3Rpb24oKSBlbmQsCldhaXQgPSBmdW5jdGlvbigpIGVuZAp9CmVuZAppZiBEaXN0YW5jZSA8IDUwIHRoZW4KU3BlZWQgPSAxMDAwClJlYWxUYXJnZXQgPSBSZWFsVGFyZ2V0ICogQ0ZyYW1lLm5ldygwLCAwLCAwKQplbHNlaWYgRGlzdGFuY2UgPCAxNTAgdGhlbgpTcGVlZCA9IDEwMDAKUmVhbFRhcmdldCA9IFJlYWxUYXJnZXQgKiBDRnJhbWUubmV3KDAsIDE4MCwgMCkKZWxzZWlmIERpc3RhbmNlIDwgMjUwIHRoZW4KU3BlZWQgPSA2MDAKUmVhbFRhcmdldCA9IFJlYWxUYXJnZXQgKiBDRnJhbWUubmV3KDAsIDE4MCwgMCkKZWxzZWlmIERpc3RhbmNlIDwgNTAwIHRoZW4KU3BlZWQgPSAzNTAKUmVhbFRhcmdldCA9IFJlYWxUYXJnZXQgKiBDRnJhbWUubmV3KDAsIDE4MCwgMCkKZWxzZWlmIERpc3RhbmNlIDwgNzUwIHRoZW4KU3BlZWQgPSAzMDAKUmVhbFRhcmdldCA9IFJlYWxUYXJnZXQgKiBDRnJhbWUubmV3KDAsIDE4MCwgMCkKZWxzZQpTcGVlZCA9IDI1MApsb2NhbCBjdXJyZW50UG9zID0gcGxheWVyUG9zCmxvY2FsIG5ld1kgPSBjdXJyZW50UG9zLlkgKyAxODAKUmVhbFRhcmdldCA9IENGcmFtZS5uZXcoUmVhbFRhcmdldC5Qb3NpdGlvbi5YLCBuZXdZLCBSZWFsVGFyZ2V0LlBvc2l0aW9uLlopCmVuZApsb2NhbCBpbmZvID0gVHdlZW5JbmZvLm5ldygKRGlzdGFuY2UgLyBTcGVlZCwKRW51bS5FYXNpbmdTdHlsZS5MaW5lYXIKKQpsb2NhbCB0d2VlbncsIGVyciA9IHBjYWxsKGZ1bmN0aW9uKCkKdHdlZW4gPSBUd2VlblNlcnZpY2U6Q3JlYXRlKFBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyWyJIdW1hbm9pZFJvb3RQYXJ0Il0sIGluZm8sIHsgQ0ZyYW1lID0gUmVhbFRhcmdldCB9KQp0d2VlbjpQbGF5KCkKc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB0d2VlbiBhbmQgdHdlZW4uUGxheWJhY2tTdGF0ZSA9PSBFbnVtLlBsYXliYWNrU3RhdGUuUGxheWluZyBkbwp3YWl0KDAuMSkKbG9jYWwgY3VycmVudFBvcyA9IFBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOldhaXRGb3JDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpLlBvc2l0aW9uCmxvY2FsIGN1cnJlbnREaXN0YW5jZSA9IG1hdGguc3FydCgodGFyZ2V0UG9zLlggLSBjdXJyZW50UG9zLlgpXjIgKyAodGFyZ2V0UG9zLlogLSBjdXJyZW50UG9zLlopXjIpCmlmIGN1cnJlbnREaXN0YW5jZSA8IDUgdGhlbgp0d2VlbjpDYW5jZWwoKQpicmVhawplbmQKZW5kCkdsb2JhbEVudi5oYXNSb3RhdGVkID0gZmFsc2UKZW5kKQplbmQpCmlmIG5vdCB0d2VlbncgdGhlbgp3YXJuKCJUd2VlbiBjcmVhdGlvbiBmYWlsZWQ6ICIgLi4gdG9zdHJpbmcoZXJyKSkKZW5kCmZ1bmN0aW9uIHR3ZWVuZnVuYzpTdG9wKCkKaWYgdHdlZW4gdGhlbgp0d2VlbjpDYW5jZWwoKQplbmQKZW5kCmZ1bmN0aW9uIHR3ZWVuZnVuYzpXYWl0KCkKaWYgdHdlZW4gdGhlbgp0d2Vlbi5Db21wbGV0ZWQ6V2FpdCgpCmVuZAplbmQKcmV0dXJuIHR3ZWVuZnVuYwplbmQKZnVuY3Rpb24gR2V0RGlzdGFuY2UodGFyZ2V0KQpyZXR1cm4gbWF0aC5mbG9vcigodGFyZ2V0LlBvc2l0aW9uIC0gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKS5NYWduaXR1ZGUpCmVuZApsb2NhbCBhY3RpdmVUd2VlbnMgPSB7fQpsb2NhbCBmdW5jdGlvbiB0d2Vlbk1vZGVsKG1vZGVsLCBnb1RvQ0ZyYW1lKQphY3RpdmVUd2VlbnMgPSB7fQpsb2NhbCBvd25lciA9IG1vZGVsOkZpbmRGaXJzdENoaWxkKCJPd25lciIpCmlmIG93bmVyIGFuZCBvd25lcjpJc0EoIk9iamVjdFZhbHVlIikgYW5kIG93bmVyLlZhbHVlIHRoZW4KbG9jYWwgb3duZXJOYW1lID0gb3duZXIuVmFsdWUuTmFtZQppZiBvd25lck5hbWUgPT0gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLk5hbWUgdGhlbgpsb2NhbCBUd2VlblNlcnZpY2UgPSBnYW1lOkdldFNlcnZpY2UoIlR3ZWVuU2VydmljZSIpCmZvciBfLCBwYXJ0IGluIHBhaXJzKG1vZGVsOkdldERlc2NlbmRhbnRzKCkpIGRvCmlmIHBhcnQ6SXNBKCJCYXNlUGFydCIpIHRoZW4KbG9jYWwgaW5mbyA9IFR3ZWVuSW5mby5uZXcoKHBhcnQuUG9zaXRpb24gLSBnb1RvQ0ZyYW1lLlBvc2l0aW9uKS5NYWduaXR1ZGUgLyAyMDAsIEVudW0uRWFzaW5nU3R5bGUuTGluZWFyKQpsb2NhbCB0d2VlbiA9IFR3ZWVuU2VydmljZTpDcmVhdGUocGFydCwgaW5mbywgeyBDRnJhbWUgPSBnb1RvQ0ZyYW1lIH0pCnR3ZWVuOlBsYXkoKQp0YWJsZS5pbnNlcnQoYWN0aXZlVHdlZW5zLCB0d2VlbikKZW5kCmVuZAplbmQKZW5kCmVuZApsb2NhbCBmdW5jdGlvbiBzdG9wQm9hdEYoKQpmb3IgXywgdHdlZW4gaW4gcGFpcnMoYWN0aXZlVHdlZW5zKSBkbwppZiB0d2VlbiB0aGVuCnR3ZWVuOkNhbmNlbCgpCmVuZAplbmQKYWN0aXZlVHdlZW5zID0ge30KZW5kCl9HLnN0b3BCb2F0RiA9IHN0b3BCb2F0RgpmdW5jdGlvbiBIb3AoKQpyZXBlYXQgd2FpdCgpIHVudGlsIGdhbWU6SXNMb2FkZWQoKSBhbmQgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyCmxvY2FsIEh0dHBTZXJ2aWNlLCBUUFNlcnZpY2UgPSBnYW1lOkdldFNlcnZpY2UgIkh0dHBTZXJ2aWNlIiwgZ2FtZTpHZXRTZXJ2aWNlICJUZWxlcG9ydFNlcnZpY2UiOwpsb2NhbCBPdGhlclNlcnZlcnMgPSBIdHRwU2VydmljZTpKU09ORGVjb2RlKGdhbWU6SHR0cEdldCgiaHR0cHM6Ly9nYW1lcy5yb2Jsb3guY29tL3IvZ2FtZXMvIiAuLgpnYW1lLlBsYWNlSWQgLi4gIi9zZXJ2ZXJzL1B1YmxpYz9zb3J0T3JkZXI9QXNjJmxpbWl0PTEwMCIpKQpmdW5jdGlvbiBqb2luTmV3KCkKaWYgbm90IGlzZmlsZSgnc2VydmVycy5zc3MnKSB0aGVuCndyaXRlZmlsZSgnc2VydmVycy5zc3MnLCBIdHRwU2VydmljZTpKU09ORW5jb2RlKHt9KSkKZW5kCmxvY2FsIGRvbnRKb2luID0gcmVhZGZpbGUoJ3NlcnZlcnMuc3NzJykKZG9udEpvaW4gPSBIdHRwU2VydmljZTpKU09ORGVjb2RlKGRvbnRKb2luKQpmb3IgSW5kZXgsIFNlcnZlciBpbiBuZXh0LCBPdGhlclNlcnZlcnNbImRhdGEiXSBkbwppZiBTZXJ2ZXIgfj0gZ2FtZS5Kb2JJZCB0aGVuCmxvY2FsIGogPSB0cnVlCmZvciBhLCBjIGluIHBhaXJzKGRvbnRKb2luKSBkbwppZiBjID09IFNlcnZlci5pZCB0aGVuCmogPSBmYWxzZQplbmQKZW5kCmlmIGogdGhlbgp0YWJsZS5pbnNlcnQoZG9udEpvaW4sIFNlcnZlclsiaWQiXSkKd3JpdGVmaWxlKCJzZXJ2ZXJzLnNzcyIsIEh0dHBTZXJ2aWNlOkpTT05FbmNvZGUoZG9udEpvaW4pKQp3YWl0KCkKcmV0dXJuIFNlcnZlclsnaWQnXQplbmQKZW5kCmVuZAplbmQKbG9jYWwgc2VydmVyID0gam9pbk5ldygpCmlmIG5vdCBzZXJ2ZXIgdGhlbgp3cml0ZWZpbGUoInNlcnZlcnMuc3NzIiwgSHR0cFNlcnZpY2U6SlNPTkVuY29kZSh7fSkpCmxvY2FsIHNlcnZlciA9IGpvaW5OZXcoKQpUUFNlcnZpY2U6VGVsZXBvcnRUb1BsYWNlSW5zdGFuY2UoZ2FtZS5QbGFjZUlkLCBzZXJ2ZXIpCmVsc2UKVFBTZXJ2aWNlOlRlbGVwb3J0VG9QbGFjZUluc3RhbmNlKGdhbWUuUGxhY2VJZCwgc2VydmVyKQplbmQKZW5kCmZ1bmN0aW9uIEdldEZpZ2h0aW5nU3R5bGUoU3R5bGUpClJldHVyblRleHQgPSAiIgpmb3IgaSwgdiBpbiBwYWlycyhnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQmFja3BhY2s6R2V0Q2hpbGRyZW4oKSkgZG8KaWYgdjpJc0EoIlRvb2wiKSB0aGVuCmlmIHYuVG9vbFRpcCA9PSBTdHlsZSB0aGVuClJldHVyblRleHQgPSB2Lk5hbWUKZW5kCmVuZAplbmQKZm9yIGksIHYgaW4gcGFpcnMoZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpHZXRDaGlsZHJlbigpKSBkbwppZiB2OklzQSgiVG9vbCIpIHRoZW4KaWYgdi5Ub29sVGlwID09IFN0eWxlIHRoZW4KUmV0dXJuVGV4dCA9IHYuTmFtZQplbmQKZW5kCmVuZAppZiBSZXR1cm5UZXh0IH49ICIiIHRoZW4KcmV0dXJuIFJldHVyblRleHQKZWxzZQpyZXR1cm4gIk5vdCBIYXZlIgplbmQKZW5kCmZ1bmN0aW9uIENoZWNrTWFzdGVyeVdlYXBvbihOYW1lV2UsIE1hc051bSkKaWYgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKE5hbWVXZSkgdGhlbgppZiB0b251bWJlcihnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoTmFtZVdlKS5MZXZlbC5WYWx1ZSkgPCB0b251bWJlcihNYXNOdW0pIHRoZW4KcmV0dXJuICJ0cnVlIERvd25UbyIKZWxzZWlmIHRvbnVtYmVyKGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZChOYW1lV2UpLkxldmVsLlZhbHVlKSA+PSB0b251bWJlcihNYXNOdW0pIHRoZW4KcmV0dXJuICJ0cnVlIFVwVG8iCmVuZAplbmQKaWYgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZChOYW1lV2UpIHRoZW4KaWYgdG9udW1iZXIoZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZChOYW1lV2UpLkxldmVsLlZhbHVlKSA8IHRvbnVtYmVyKE1hc051bSkgdGhlbgpyZXR1cm4gInRydWUgRG93blRvIgplbHNlaWYgdG9udW1iZXIoZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZChOYW1lV2UpLkxldmVsLlZhbHVlKSA+PSB0b251bWJlcihNYXNOdW0pIHRoZW4KcmV0dXJuICJ0cnVlIFVwVG8iCmVuZAplbmQKcmV0dXJuICJlbHNlIgplbmQKbG9jYWwgQWxsTWF0ZXJpYWwKaWYgV29ybGQzIHRoZW4KQWxsTWF0ZXJpYWwgPSB7Ik1pbmkgVHVzayIsIkZpc2ggVGFpbCIsIlNjcmFwIE1ldGFsIiwiRHJhZ29uIFNjYWxlIiwiQ29uanVyZWQgQ29jb2EiLCJEZW1vbmljIFdpc3AiLCJHdW5wb3dkZXIiLH0KZW5kCnRhYmxlLnNvcnQoQWxsTWF0ZXJpYWwpCmxvY2FsIGZ1bmN0aW9uIEN1c3RvbUZpbmRGaXJzdENoaWxkKHRhYmxlbmFtZSkKZm9yIGksIHYgaW4gcGFpcnModGFibGVuYW1lKSBkbwppZiBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLkVuZW1pZXM6RmluZEZpcnN0Q2hpbGQodikgdGhlbgpyZXR1cm4gdHJ1ZQplbmQKZW5kCnJldHVybiBmYWxzZQplbmQKbG9jYWwgQWxsTWF0ZXJpYWwKaWYgV29ybGQzIHRoZW4KQWxsTWF0ZXJpYWwgPSB7Ik1pbmkgVHVzayIsIkZpc2ggVGFpbCIsIlNjcmFwIE1ldGFsIiwiRHJhZ29uIFNjYWxlIiwiQ29uanVyZWQgQ29jb2EiLCJEZW1vbmljIFdpc3AiLCJHdW5wb3dkZXIiLH0KZW5kCnRhYmxlLnNvcnQoQWxsTWF0ZXJpYWwpCmxvY2FsIGZ1bmN0aW9uIEN1c3RvbUZpbmRGaXJzdENoaWxkKHRhYmxlbmFtZSkKZm9yIGksIHYgaW4gcGFpcnModGFibGVuYW1lKSBkbwppZiBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLkVuZW1pZXM6RmluZEZpcnN0Q2hpbGQodikgdGhlbgpyZXR1cm4gdHJ1ZQplbmQKZW5kCnJldHVybiBmYWxzZQplbmQKbG9jYWwgZnVuY3Rpb24gQ2hlY2tNYXRlcmlhbCh2MSkKaWYgV29ybGQzIHRoZW4KaWYgKHYxID09ICJNaW5pIFR1c2siKSB0aGVuCk1hdGVyaWFsTW9iID0geyAiTXl0aG9sb2dpY2FsIFBpcmF0ZSIgfTsKQ0ZyYW1lTW9uID0gQ0ZyYW1lLm5ldygtMTM1NDUsIDQ3MCwgLTY5MTcpOwplbHNlaWYgKHYxID09ICJGaXNoIFRhaWwiKSB0aGVuCk1hdGVyaWFsTW9iID0geyAiRmlzaG1hbiBSYWlkZXIiLCAiRmlzaG1hbiBDYXB0YWluIiB9OwpDRnJhbWVNb24gPSBDRnJhbWUubmV3KC0xMDk5MywgMzMyLCAtODk0MCk7CmVsc2VpZiAodjEgPT0gIlNjcmFwIE1ldGFsIikgdGhlbgpNYXRlcmlhbE1vYiA9IHsgIkp1bmdsZSBQaXJhdGUiIH07CkNGcmFtZU1vbiA9IENGcmFtZS5uZXcoLTEyMTA3LCAzMzIsIC0xMDU0OSk7CmVsc2VpZiAodjEgPT0gIkRyYWdvbiBTY2FsZSIpIHRoZW4KTWF0ZXJpYWxNb2IgPSB7ICJEcmFnb24gQ3JldyBBcmNoZXIiLCAiRHJhZ29uIENyZXcgV2FycmlvciIgfTsKQ0ZyYW1lTW9uID0gQ0ZyYW1lLm5ldyg2NTk0LCAzODMsIDEzOSk7CmVsc2VpZiAodjEgPT0gIkNvbmp1cmVkIENvY29hIikgdGhlbgpNYXRlcmlhbE1vYiA9IHsgIkNvY29hIFdhcnJpb3IiLCAiQ2hvY29sYXRlIEJhciBCYXR0bGVyIiwgIlN3ZWV0IFRoaWVmIiwKIkNhbmR5IFJlYmVsIiB9OwpDRnJhbWVNb24gPSBDRnJhbWUubmV3KDYyMC42MzQ0NjA0NDkyMTg4LCA3OC45MzY0NDcxNDM1NTQ2OSwgLTEyNTgxLjM2OTE0MDYyNSk7CmVsc2VpZiAodjEgPT0gIkRlbW9uaWMgV2lzcCIpIHRoZW4KTWF0ZXJpYWxNb2IgPSB7ICJEZW1vbmljIFNvdWwiIH07CkNGcmFtZU1vbiA9IENGcmFtZS5uZXcoLTk1MDcsIDE3MiwgNjE1OCk7CmVsc2VpZiAodjEgPT0gIkd1bnBvd2RlciIpIHRoZW4KTWF0ZXJpYWxNb2IgPSB7ICJQaXN0b2wgQmlsbGlvbmFpcmUiIH07CkNGcmFtZU1vbiA9IENGcmFtZS5uZXcoLTQ2OSwgNzQsIDU5MDQpOwplbmQKZW5kCmVuZApsb2NhbCBVcGRhdGUgPSBsb2Fkc3RyaW5nKGdhbWU6SHR0cEdldCgiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2Fqa2QyZTIxNDFzZGYxMjE0MTU2NDNkZnZiY3czNDc1ODRmZ2gzby9obW0vcmVmcy9oZWFkcy9tYWluL3MyIikpKCkKbG9jYWwgTGlicmFyeSA9IFVwZGF0ZTpXaW5kb3coIlZlY3RvciBIdWIiLCIiLCIiLEVudW0uS2V5Q29kZS5GMSk7CmxvY2FsIHBhZ2UxNSA9IExpYnJhcnk6VGFiKCJTdGF0dXNcbuC4quC5gOC4leC4leC4seC4qiIsInJieGFzc2V0aWQ6Ly8xNjE0OTExMTczMSIpCmxvY2FsIHBhZ2UxID0gTGlicmFyeTpUYWIoIkdlbmVyYWxcbuC4q+C4meC5ieC4suC4q+C4peC4seC4gSIsInJieGFzc2V0aWQ6Ly82MDM0Nzk4NDYxIikKbG9jYWwgcGFnZTIgPSBMaWJyYXJ5OlRhYigiU2V0dGluZ3NcbuC4leC4seC5ieC4h+C4hOC5iOC4siIsInJieGFzc2V0aWQ6Ly8xMTQ0NjgzNTMzNiIpCmxvY2FsIHBhZ2UzID0gTGlicmFyeTpUYWIoIlN0YXRzXG7guKrguYHguJXguIQiLCJyYnhhc3NldGlkOi8vMTUwMTEyMTQyOTMiKQpsb2NhbCBwYWdlNCA9IExpYnJhcnk6VGFiKCJUZWxlcG9ydFxu4LmA4LiX4LmA4Lil4Lie4Lit4Lij4LmM4LiVIiwicmJ4YXNzZXRpZDovLzEyNjg5OTc4NTc1IikKbG9jYWwgcGFnZTEzID0gTGlicmFyeTpUYWIoIlB2UFxu4LiV4LmI4Lit4Liq4Li54LmJIiwicmJ4YXNzZXRpZDovLzc0ODUwNTE3MTUiKQpsb2NhbCBwYWdlNiA9IExpYnJhcnk6VGFiKCJNYXN0ZXJ5XG7guKHguLLguKrguYDguJXguK3guKPguLXguYgiLCJyYnhhc3NldGlkOi8vOTM0Mzg3NzcwNTQ1OTkiKQpsb2NhbCBwYWdlNyA9IExpYnJhcnk6VGFiKCJEZXZpbEZydWl0XG7guJzguKXguJvguLXguKjguLLguIgiLCJyYnhhc3NldGlkOi8vMTMwODgyNjQ2IikKbG9jYWwgcGFnZTggPSBMaWJyYXJ5OlRhYigiUmFpZFxu4LiU4Lix4LiZ4LmA4LiI4Li14LmJ4Lii4LiZIiwicmJ4YXNzZXRpZDovLzEzMTgwMTc5MDU1IikKbG9jYWwgcGFnZTkgPSBMaWJyYXJ5OlRhYigiTWlyYWdlSXNsYW5kXG7guYDguIHguLLguLDguKXguLHguJoiLCJyYnhhc3NldGlkOi8vMTI1OTg1OTQyNDMiKQpsb2NhbCBwYWdlMTAgPSBMaWJyYXJ5OlRhYigiUmFjZVxu4LmA4Lic4LmI4LiyIiwicmJ4YXNzZXRpZDovLzc1NTg3ODI1OTAiKQpsb2NhbCBwYWdlNSA9IExpYnJhcnk6VGFiKCJJdGVtc1xu4LmE4Lit4LmA4LiX4LmH4LihIiwicmJ4YXNzZXRpZDovLzEyNDk5ODQyOTIwIikKbG9jYWwgcGFnZTE0ID0gTGlicmFyeTpUYWIoIlNlYSBFdmVudFxu4Lit4Li14LmA4Lin4LmJ4LiZ4LiX4LmM4LiX4Liw4LmA4LilIiwicmJ4YXNzZXRpZDovLzEyMjQyOTMxNzM4IikKbG9jYWwgcGFnZTE2ID0gTGlicmFyeTpUYWIoIkRyYWdvbiBFdmVudFxu4Lit4Li14LmA4Lin4LmJ4LiZ4LiX4LmM4Lih4Lix4LiH4LiB4LijIiwicmJ4YXNzZXRpZDovLzEyNzA5MjI1NzU2IikKbG9jYWwgcGFnZTExID0gTGlicmFyeTpUYWIoIlNob3BcbuC4o+C5ieC4suC4meC4hOC5ieC4siIsInJieGFzc2V0aWQ6Ly82MDMxMjY1OTc2IikKbG9jYWwgcGFnZTEyID0gTGlicmFyeTpUYWIoIk90aGVyXG7guK3guLfguYjguJnguYYiLCJyYnhhc3NldGlkOi8vMTE0NDcwNjM3OTEiKQpUaW1lID0gcGFnZTE1OkxhYmVsKCIuLiIpCnBhZ2UxNTpMYWJlbCgiW1VzZXJuYW1lXSA6ICIuLmdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5EaXNwbGF5TmFtZSkKZnVuY3Rpb24gVXBkYXRlVGltZSgpCmxvY2FsIEdhbWVUaW1lID0gbWF0aC5mbG9vcih3b3Jrc3BhY2UuRGlzdHJpYnV0ZWRHYW1lVGltZSswLjUpCmxvY2FsIEhvdXIgPSBtYXRoLmZsb29yKEdhbWVUaW1lLyg2MF4yKSklMjQKbG9jYWwgTWludXRlID0gbWF0aC5mbG9vcihHYW1lVGltZS8oNjBeMSkpJTYwCmxvY2FsIFNlY29uZCA9IG1hdGguZmxvb3IoR2FtZVRpbWUvKDYwXjApKSU2MApUaW1lOlNldCgiW0dhbWVUaW1lXSA6IEhvdXIgOiAiLi5Ib3VyLi4iIE1pbnV0ZSA6ICIuLk1pbnV0ZS4uIiBTZWNvbmQgOiAiLi5TZWNvbmQpCmVuZApzcGF3bihmdW5jdGlvbigpCndoaWxlIHRhc2sud2FpdCgpIGRvCnBjYWxsKGZ1bmN0aW9uKCkKVXBkYXRlVGltZSgpCmVuZCkKZW5kCmVuZCkKQ2xpZW50ID0gcGFnZTE1OkxhYmVsMSgiQ2xpZW50IikKZnVuY3Rpb24gVXBkYXRlQ2xpZW50KCkKbG9jYWwgRnBzID0gd29ya3NwYWNlOkdldFJlYWxQaHlzaWNzRlBTKCkKQ2xpZW50OlJlZnJlc2goIltGcHNdIDogIi4uRnBzKQplbmQKc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB0cnVlIGRvIHdhaXQoLjEpClVwZGF0ZUNsaWVudCgpCmVuZAplbmQpCkNsaWVudDEgPSBwYWdlMTU6TGFiZWwxKCJDbGllbnQiKQpmdW5jdGlvbiBVcGRhdGVDbGllbnQxKCkKbG9jYWwgUGluZyA9IGdhbWU6R2V0U2VydmljZSgiU3RhdHMiKS5OZXR3b3JrLlNlcnZlclN0YXRzSXRlbVsiRGF0YSBQaW5nIl06R2V0VmFsdWVTdHJpbmcoKQpDbGllbnQxOlJlZnJlc2goIltQaW5nXSA6ICIuLlBpbmcpCmVuZApzcGF3bihmdW5jdGlvbigpCndoaWxlIHRydWUgZG8gd2FpdCguMSkKVXBkYXRlQ2xpZW50MSgpCmVuZAplbmQpCmxvY2FsIE1pcnJhZ2VjaGVjayA9IHBhZ2UxNTpMYWJlbCgnLi4uJykKc3Bhd24oZnVuY3Rpb24oKQpwY2FsbChmdW5jdGlvbigpCndoaWxlIHRhc2sud2FpdCgpIGRvCmlmIGdhbWUuV29ya3NwYWNlLl9Xb3JsZE9yaWdpbi5Mb2NhdGlvbnM6RmluZEZpcnN0Q2hpbGQoJ01pcmFnZSBJc2xhbmQnKSB0aGVuCk1pcnJhZ2VjaGVjazpTZXQoJ1N0YXR1cyBNaXJhZ2VJc2xhbmQgOiDwn5+iXG7guKrguJbguLLguJnguLDguYDguIHguLLguLDguKXguLHguJonKQplbHNlCk1pcnJhZ2VjaGVjazpTZXQoJ1N0YXR1cyBNaXJhdGVJc2xhbmQgOiDwn5S0XG7guKrguJbguLLguJnguLDguYDguIHguLLguLDguKXguLHguJonKQplbmQKZW5kCmVuZCkKZW5kKQpsb2NhbCBLaXRzdW5lY2hlY2sgPSBwYWdlMTU6TGFiZWwoJy4uLicpCnNwYXduKGZ1bmN0aW9uKCkKcGNhbGwoZnVuY3Rpb24oKQp3aGlsZSB0YXNrLndhaXQoKSBkbwppZiBnYW1lLldvcmtzcGFjZS5fV29ybGRPcmlnaW4uTG9jYXRpb25zOkZpbmRGaXJzdENoaWxkKCdLaXRzdW5lIElzbGFuZCcpIHRoZW4KS2l0c3VuZWNoZWNrOlNldCgnU3RhdHVzIEtpdHN1bmVJc2xhbmQgOiDwn5+iXG7guKrguJbguLLguJnguLDguYDguIHguLLguLDguIjguLTguYnguIfguIjguK3guIEnKQplbHNlCktpdHN1bmVjaGVjazpTZXQoJ1N0YXR1cyBLaXRzdW5lSXNsYW5kIDog8J+UtFxu4Liq4LiW4Liy4LiZ4Liw4LmA4LiB4Liy4Liw4LiI4Li04LmJ4LiH4LiI4Lit4LiBJykKZW5kCmVuZAplbmQpCmVuZCkKbG9jYWwgUHJlaGlzdG9yaWNJc2xhbmRjaGVjayA9IHBhZ2UxNTpMYWJlbCgnLi4uJykKc3Bhd24oZnVuY3Rpb24oKQpwY2FsbChmdW5jdGlvbigpCndoaWxlIHRhc2sud2FpdCgpIGRvCmlmIGdhbWUuV29ya3NwYWNlLl9Xb3JsZE9yaWdpbi5Mb2NhdGlvbnM6RmluZEZpcnN0Q2hpbGQoJ1ByZWhpc3RvcmljIElzbGFuZCcpIHRoZW4KUHJlaGlzdG9yaWNJc2xhbmRjaGVjazpTZXQoJ1N0YXR1cyBQcmVoaXN0b3JpY0lzbGFuZCA6IPCfn6JcbuC4quC4luC4suC4meC4sOC5gOC4geC4suC4sOC4oOC4ueC5gOC4guC4suC5hOC4nycpCmVsc2UKUHJlaGlzdG9yaWNJc2xhbmRjaGVjazpTZXQoJ1N0YXR1cyBQcmVoaXN0b3JpY0lzbGFuZCA6IPCflLRcbuC4quC4luC4suC4meC4sOC5gOC4geC4suC4sOC4oOC4ueC5gOC4guC4suC5hOC4nycpCmVuZAplbmQKZW5kKQplbmQpCmxvY2FsIEZNID0gcGFnZTE1OkxhYmVsKCcuLi4nKQp0YXNrLnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgdGFzay53YWl0KCkgZG8KcGNhbGwoZnVuY3Rpb24oKQppZiBnYW1lOkdldFNlcnZpY2UoIkxpZ2h0aW5nIikuU2t5Lk1vb25UZXh0dXJlSWQ9PSJodHRwOi8vd3d3LnJvYmxveC5jb20vYXNzZXQvP2lkPTk3MDkxNDk0MzEiIHRoZW4KRk06U2V0KCJTdGF0dXMgTW9vbiA6IDUvNSDwn4yVXG7guKrguJbguLLguJnguLDguJTguKfguIfguIjguLHguJnguJfguKPguYwiKQplbHNlaWYgZ2FtZTpHZXRTZXJ2aWNlKCJMaWdodGluZyIpLlNreS5Nb29uVGV4dHVyZUlkPT0iaHR0cDovL3d3dy5yb2Jsb3guY29tL2Fzc2V0Lz9pZD05NzA5MTQ5MDUyIiB0aGVuCkZNOlNldCgiU3RhdHVzIE1vb24gOiA0LzUg8J+Mllxu4Liq4LiW4Liy4LiZ4Liw4LiU4Lin4LiH4LiI4Lix4LiZ4LiX4Lij4LmMIikKZWxzZWlmIGdhbWU6R2V0U2VydmljZSgiTGlnaHRpbmciKS5Ta3kuTW9vblRleHR1cmVJZD09Imh0dHA6Ly93d3cucm9ibG94LmNvbS9hc3NldC8/aWQ9OTcwOTE0MzczMyIgdGhlbgpGTTpTZXQoIlN0YXR1cyBNb29uIDogMy81IPCfjJdcbuC4quC4luC4suC4meC4sOC4lOC4p+C4h+C4iOC4seC4meC4l+C4o+C5jCIpCmVsc2VpZiBnYW1lOkdldFNlcnZpY2UoIkxpZ2h0aW5nIikuU2t5Lk1vb25UZXh0dXJlSWQ9PSJodHRwOi8vd3d3LnJvYmxveC5jb20vYXNzZXQvP2lkPTk3MDkxNTA0MDEiIHRoZW4KRk06U2V0KCJTdGF0dXMgTW9vbiA6IDIvNSDwn4yYXG7guKrguJbguLLguJnguLDguJTguKfguIfguIjguLHguJnguJfguKPguYwiKQplbHNlaWYgZ2FtZTpHZXRTZXJ2aWNlKCJMaWdodGluZyIpLlNreS5Nb29uVGV4dHVyZUlkPT0iaHR0cDovL3d3dy5yb2Jsb3guY29tL2Fzc2V0Lz9pZD05NzA5MTQ5NjgwIiB0aGVuCkZNOlNldCgiU3RhdHVzIE1vb24gOiAxLzUg8J+MmFxu4Liq4LiW4Liy4LiZ4Liw4LiU4Lin4LiH4LiI4Lix4LiZ4LiX4Lij4LmMIikKZWxzZQpGTTpTZXQoIlN0YXR1cyBNb29uIDogMC81IPCfjJhcbuC4quC4luC4suC4meC4sOC4lOC4p+C4h+C4iOC4seC4meC4l+C4o+C5jCIpCmVuZAplbmQpCmVuZAplbmQpCnBhZ2UxNTpMYWJlbCgiSm9pbiBEaXNjb3JkIEZvciBOZXdzXG7guYDguILguYnguLLguJTguLTguKrguITguK3guKPguYzguJTguYDguJ7guLfguYjguK3guILguYjguLLguKfguKrguLLguKPguJXguYjguLLguIfguYYiKQpwYWdlMTU6QnV0dG9uKCJDb3B5IExpbmsgRGlzY29yZFxu4LiB4LmH4Lit4Lib4Lib4Li14LmJ4Lil4Li04LmJ4LiH4LiU4Li04Liq4LiE4Lit4Lij4LmM4LiUIixmdW5jdGlvbigpCnNldGNsaXBib2FyZCgiaHR0cHM6Ly9kaXNjb3JkLmdnLzk3N0pRWFg4MnciKQpnYW1lOkdldFNlcnZpY2UoIlN0YXJ0ZXJHdWkiKTpTZXRDb3JlKCJTZW5kTm90aWZpY2F0aW9uIix7VGl0bGUgPSAiVmVjdG9ySHViIixUZXh0ID0gIuC4hOC4seC4lOC4peC4reC4geC5gOC4o+C4teC4ouC4muC4o+C5ieC4reC4ouC5geC4peC5ieC4pyIsSWNvbiA9ICJyYnhhc3NldGlkOi8vMTYxMjkyMzUwNTQiLER1cmF0aW9uID0gM30pCmVuZCkKcGFnZTE6U2VwZXJhdG9yKCLwn4+gIikKcGFnZTE6VG9nZ2xlKCJBdXRvRmFybUxldmVsXG7guK3guK3guYLguJXguYnguJ/guLLguKPguYzguKHguYDguKXguYDguKfguKUiLCBfRy5TZXR0aW5ncy5BdXRvRmFybSwgZnVuY3Rpb24odmFsdWUpCl9HLkF1dG9GYXJtID0gdmFsdWUKX0cuU2V0dGluZ3MuQXV0b0Zhcm0gPSB2YWx1ZQpTYXZlU2V0dGluZ3MoKQppZiB2YWx1ZSA9PSBmYWxzZSB0aGVuCnRvVGFyZ2V0KGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSkKZW5kCmVuZCkKcGFnZTE6VG9nZ2xlKCJTYWZlTW9kZVxu4LmA4LiL4Lif4LmC4Lir4Lih4LiUIiwgX0cuU2V0dGluZ3MuU2FmZU1vZGUsIGZ1bmN0aW9uKHZhbHVlKQpfRy5TYWZlTW9kZSA9IHZhbHVlCl9HLlNldHRpbmdzLlNhZmVNb2RlID0gdmFsdWUKU2F2ZVNldHRpbmdzKCkKbG9jYWwgSGVhbHRoUGVyY2VudCA9IGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWQuSGVhbHRoIC8gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZC5NYXhIZWFsdGggKiAxMDAKaWYgSGVhbHRoUGVyY2VudCA8IDIwIHRoZW4KVmVjKCI8Q29sb3I9Q3lhbj5TYWZlTW9kZVJ1bm5pbmcuLlxu4LmA4LiL4Lif4LmC4Lir4Lih4LiU4LiX4Liz4LiH4Liy4LiZLi48Q29sb3I9Lz4iKQplbmQKc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSBfRy5TZXR0aW5ncy5TYWZlTW9kZSBkbyB0YXNrLndhaXQoKQppZiBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyIGFuZCBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZCIpIHRoZW4KaWYgSGVhbHRoUGVyY2VudCA8IDIwIHRoZW4KZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSA9IGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgKiBDRnJhbWUubmV3KDAsIDEwMCwgMCkKZW5kCmVuZAp0YXNrLndhaXQoKQplbmQKZW5kKQplbmQpCnBhZ2UxOlRvZ2dsZSgiTmVhcmVhc3RGYXJtXG7guJ/guLLguKPguYzguKHguKHguK3guJnguKPguK3guJrguYYiLCBfRy5TZXR0aW5ncy5OZWFyZWFzdEZhcm0sIGZ1bmN0aW9uKHZhbHVlKQpfRy5OZWFyZWFzdEZhcm0gPSB2YWx1ZQpfRy5TZXR0aW5ncy5OZWFyZWFzdEZhcm0gPSB2YWx1ZQpTYXZlU2V0dGluZ3MoKQppZiB2YWx1ZSA9PSBmYWxzZSB0aGVuCnRvVGFyZ2V0KGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSkKZW5kCmVuZCkKc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB3YWl0KC4xKSBkbwppZiBfRy5TZXR0aW5ncy5OZWFyZWFzdEZhcm0gdGhlbgpwY2FsbChmdW5jdGlvbigpCmZvciBpLCB2IGluIHBhaXJzKGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpHZXRDaGlsZHJlbigpKSBkbwppZiB2Lk5hbWUgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkIikgdGhlbgppZiB2Lkh1bWFub2lkLkhlYWx0aCA+IDAgYW5kICh2Lkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24gLSBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLm1hZ25pdHVkZSA8PSAxNTAwIHRoZW4KcmVwZWF0CmdhbWU6R2V0U2VydmljZSgiUnVuU2VydmljZSIpLkhlYXJ0YmVhdDp3YWl0KCkKRXF1aXBXZWFwb24oX0cuU2VsZWN0V2VhcG9uKQppZiBub3QgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiSGFzQnVzbyIpIHRoZW4KbG9jYWwgYXJncyA9IHsKWzFdID0gIkJ1c28iCn0KZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcih1bnBhY2soYXJncykpCmVuZApQb3NNb24gPSB2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lCnYuSHVtYW5vaWRSb290UGFydC5DYW5Db2xsaWRlID0gZmFsc2UKdi5IdW1hbm9pZC5XYWxrU3BlZWQgPSAwCnYuSGVhZC5DYW5Db2xsaWRlID0gZmFsc2UKdi5IdW1hbm9pZFJvb3RQYXJ0LlNpemUgPSBWZWN0b3IzLm5ldyg4MCwgODAsIDgwKQp2Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDExKQp2Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDE0KQp2Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDE2KQpCcmluZ01vYiA9IHRydWUKRmFzdEF0dGFjayA9IHRydWUKdG9UYXJnZXQodi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSAqIE1ldGhvZEZhcm0pCmlmIG5vdCBGYXN0QXR0YWNrIHRoZW4KZ2FtZTpHZXRTZXJ2aWNlICdWaXJ0dWFsVXNlcic6Q2FwdHVyZUNvbnRyb2xsZXIoKQpnYW1lOkdldFNlcnZpY2UgJ1ZpcnR1YWxVc2VyJzpCdXR0b24xRG93bihWZWN0b3IyLm5ldygxMjgwLCA2NzIpKQplbmQKUG9zTW9uID0gdi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZQp1bnRpbCBub3QgX0cuTmVhcmVhc3RGYXJtIG9yIG5vdCB2LlBhcmVudCBvciB2Lkh1bWFub2lkLkhlYWx0aCA9PSAwIG9yIG5vdCBnYW1lLldvcmtzcGFjZS5FbmVtaWVzOkZpbmRGaXJzdENoaWxkKHYuTmFtZSkKZW5kCmVuZAplbmQKZW5kKQplbmQKZW5kCmVuZCkKQXR0YWNrUmFuZG9tVHlwZV9Nb25DRnJhbWUgPSAxCnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgd2FpdCgpIGRvCkF0dGFja1JhbmRvbVR5cGVfTW9uQ0ZyYW1lID0gbWF0aC5yYW5kb20oMSw1KQp3YWl0KDAuMikKZW5kCmVuZCkKX0cuQXV0b19DRnJhbWUgPSB0cnVlCmxvY2FsIFNldENGYXJtZSA9IDEKc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB0YXNrLndhaXQoKSBkbwpsb2NhbCBNeUxldmVsID0gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkRhdGEuTGV2ZWwuVmFsdWUKbG9jYWwgUXVlc3RDID0gZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuUGxheWVyR3VpLk1haW4uUXVlc3QKcGNhbGwoZnVuY3Rpb24oKQppZiBfRy5BdXRvRmFybSB0aGVuCmlmIFF1ZXN0Qy5WaXNpYmxlID09IHRydWUgdGhlbgppZiBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLkVuZW1pZXM6RmluZEZpcnN0Q2hpbGQoUXVlc3RDaGVjaygpWzNdKSB0aGVuCmZvciBpLHYgaW4gcGFpcnMoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkdldENoaWxkcmVuKCkpIGRvCmlmIHYuTmFtZSA9PSBRdWVzdENoZWNrKClbM10gdGhlbgppZiB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZCIpIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikgYW5kIHYuSHVtYW5vaWQuSGVhbHRoID4gMCB0aGVuCnJlcGVhdCB0YXNrLndhaXQoKQppZiBfRy5BdXRvX0NGcmFtZSB0aGVuClNldENGYXJtZSA9IDEKZW5kCmlmIG5vdCBzdHJpbmcuZmluZChnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5QbGF5ZXJHdWkuTWFpbi5RdWVzdC5Db250YWluZXIuUXVlc3RUaXRsZS5UaXRsZS5UZXh0LCBRdWVzdENoZWNrKClbNl0pIHRoZW4KZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQWJhbmRvblF1ZXN0IikKZWxzZQpQb3NNb24gPSB2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lCnYuSHVtYW5vaWRSb290UGFydC5TaXplID0gVmVjdG9yMy5uZXcoNjAsNjAsNjApCnYuSHVtYW5vaWRSb290UGFydC5DYW5Db2xsaWRlID0gZmFsc2UKdi5IdW1hbm9pZC5XYWxrU3BlZWQgPSAwCnYuSGVhZC5DYW5Db2xsaWRlID0gZmFsc2UKX0cuQnJpbmdNb2IgPSB0cnVlCkVxdWlwV2VhcG9uKF9HLlNlbGVjdFdlYXBvbikKdi5IdW1hbm9pZFJvb3RQYXJ0LlRyYW5zcGFyZW5jeSA9IDEKdG9UYXJnZXQodi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSAqIE1ldGhvZEZhcm0pCmVuZAp1bnRpbCBub3QgX0cuQXV0b0Zhcm0gb3Igbm90IHYuUGFyZW50IG9yIHYuSHVtYW5vaWQuSGVhbHRoIDwgMSBvciBRdWVzdEMuVmlzaWJsZSA9PSBmYWxzZSBvciBub3QgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpCmVuZAplbmQKZW5kCmVsc2UKaWYgX0cuQXV0b19DRnJhbWUgYW5kIG5vdCBfRy5BdXRvRmFybUZhc3QgdGhlbgp0b1RhcmdldChRdWVzdENoZWNrKClbN11bU2V0Q0Zhcm1lXSAqIE1ldGhvZEZhcm0pCmlmIChRdWVzdENoZWNrKClbN11bU2V0Q0Zhcm1lXS5Qb3NpdGlvbiAtIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKS5NYWduaXR1ZGUgPD0gNTAgdGhlbgppZiBTZXRDRmFybWUgPT0gbmlsIG9yIFNldENGYXJtZSA9PSAnJyB0aGVuClNldENGYXJtZSA9IDEKZWxzZWlmIFNldENGYXJtZSA+PSAjUXVlc3RDaGVjaygpWzddIHRoZW4KU2V0Q0Zhcm1lID0gMQplbmQKU2V0Q0Zhcm1lID0gIFNldENGYXJtZSArIDEKd2FpdCgwLjUpCmVuZAplbHNlCmlmIG5vdCBfRy5BdXRvRmFybUZhc3QgdGhlbgppZiBBdHRhY2tSYW5kb21UeXBlX01vbkNGcmFtZSA9PSAxIHRoZW4KdG9UYXJnZXQoUXVlc3RDaGVjaygpWzddWzFdICogQ0ZyYW1lLm5ldygwLDMwLDIwKSkKZWxzZWlmIEF0dGFja1JhbmRvbVR5cGVfTW9uQ0ZyYW1lID09IDIgdGhlbgp0b1RhcmdldChRdWVzdENoZWNrKClbN11bMV0gKiBDRnJhbWUubmV3KDAsMzAsLTIwKSkKZWxzZWlmIEF0dGFja1JhbmRvbVR5cGVfTW9uQ0ZyYW1lID09IDMgdGhlbgp0b1RhcmdldChRdWVzdENoZWNrKClbN11bMV0gKiBDRnJhbWUubmV3KDIwLDMwLDApKQplbHNlaWYgQXR0YWNrUmFuZG9tVHlwZV9Nb25DRnJhbWUgPT0gNCB0aGVuCnRvVGFyZ2V0KFF1ZXN0Q2hlY2soKVs3XVsxXSAqIENGcmFtZS5uZXcoMCwzMCwtMjApKQplbHNlaWYgQXR0YWNrUmFuZG9tVHlwZV9Nb25DRnJhbWUgPT0gNSB0aGVuCnRvVGFyZ2V0KFF1ZXN0Q2hlY2soKVs3XVsxXSAqIENGcmFtZS5uZXcoLTIwLDMwLDApKQplbHNlCnRvVGFyZ2V0KFF1ZXN0Q2hlY2soKVs3XVsxXSAqIENGcmFtZS5uZXcoMCwzMCwyMCkpCmVuZAplbmQKZW5kCmVuZAplbHNlCnRvVGFyZ2V0KFF1ZXN0Q2hlY2soKVsyXSkKaWYgKFF1ZXN0Q2hlY2soKVsyXS5Qb3NpdGlvbiAtIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKS5NYWduaXR1ZGUgPD0gMSB0aGVuCl9HLkJyaW5nTW9iID0gZmFsc2UKd2FpdCgwLjIpCmdhbWU6R2V0U2VydmljZSgnUmVwbGljYXRlZFN0b3JhZ2UnKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIlN0YXJ0UXVlc3QiLCBRdWVzdENoZWNrKClbNF0sIFF1ZXN0Q2hlY2soKVsxXSkgd2FpdCgwLjUpCnRvVGFyZ2V0KFF1ZXN0Q2hlY2soKVs3XVsxXSAqIE1ldGhvZEZhcm0pCmlmIEF0dGFja1JhbmRvbVR5cGVfTW9uQ0ZyYW1lID09IDEgdGhlbgp0b1RhcmdldChRdWVzdENoZWNrKClbN11bMV0gKiBDRnJhbWUubmV3KDAsMzAsMjApKQplbHNlaWYgQXR0YWNrUmFuZG9tVHlwZV9Nb25DRnJhbWUgPT0gMiB0aGVuCnRvVGFyZ2V0KFF1ZXN0Q2hlY2soKVs3XVsxXSAqIENGcmFtZS5uZXcoMCwzMCAsLTIwKSkKZWxzZWlmIEF0dGFja1JhbmRvbVR5cGVfTW9uQ0ZyYW1lID09IDMgdGhlbgp0b1RhcmdldChRdWVzdENoZWNrKClbN11bMV0gKiBDRnJhbWUubmV3KDIwLDMwICwwKSkKZWxzZWlmIEF0dGFja1JhbmRvbVR5cGVfTW9uQ0ZyYW1lID09IDQgdGhlbgp0b1RhcmdldChRdWVzdENoZWNrKClbN11bMV0gKiBDRnJhbWUubmV3KDAsMzAgLC0yMCkpCmVsc2VpZiBBdHRhY2tSYW5kb21UeXBlX01vbkNGcmFtZSA9PSA1IHRoZW4KdG9UYXJnZXQoUXVlc3RDaGVjaygpWzddWzFdICogQ0ZyYW1lLm5ldygtMjAsMzAgLDApKQplbHNlCnRvVGFyZ2V0KFF1ZXN0Q2hlY2soKVs3XVsxXSAqIENGcmFtZS5uZXcoMCwzMCAsMjApKQplbmQKZW5kCmVuZAplbmQKZW5kKQplbmQKZW5kKQpwYWdlMTpTZXBlcmF0b3IoIkNoZXN0L+C4geC4peC5iOC4reC4hyIpCnBhZ2UxOlRvZ2dsZSgiQXV0byBGYXJtIENoZXN0IFtUd2Vlbl1cbuC4n+C4suC4o+C5jOC4oeC4geC4peC5iOC4reC4hyBb4Lia4Li04LiZ4LmA4LiB4LmH4LiaXSIsIF9HLlNldHRpbmdzLkF1dG9GYXJtQ2hlc3QsIGZ1bmN0aW9uKHZhbHVlKQpfRy5BdXRvRmFybUNoZXN0ID0gdmFsdWUKX0cuU2V0dGluZ3MuQXV0b0Zhcm1DaGVzdCA9IHZhbHVlClNhdmVTZXR0aW5ncygpCmlmIHZhbHVlID09IGZhbHNlIHRoZW4KdG9UYXJnZXQoZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lKQplbmQKZW5kKQpwYWdlMTpUb2dnbGUoIkF1dG8gRmFybSBDaGVzdCBbRmFzdDpSaXNrXVxu4Lif4Liy4Lij4LmM4Lih4LiB4Lil4LmI4Lit4LiHIFvguYDguKPguYfguKc64LmA4Liq4Li14LmI4Lii4LiHXSIsIF9HLkNoZXN0QnlwYXNzLCBmdW5jdGlvbih2YWx1ZSkKX0cuQ2hlc3RCeXBhc3MgPSB2YWx1ZQplbmQpCmxvY2FsIGlzbGFuZHMgPSB7fQppZiBXb3JsZDMgdGhlbgppc2xhbmRzID0gewoiQm9hdCBDYXN0bGUiLAoiQ2FrZUxvYWYiLAoiQ2FrZUxvYWYiLAoiRmlzaG1lbiIsCiJDaG9jb2xhdGVJc2xhbmQiLAoiR3JlYXQgVHJlZSIsCiJIYXVudGVkIENhc3RsZSIsCiJJY2UgQ3JlYW0gSXNsYW5kIiwKIk1pbmlTa3kiLAoiUGVhbnV0IElzbGFuZCIsCiJQb3J0IiwKIlRlbXBsZSBvZiBUaW1lIiwKIlRpa2lPdXRwb3N0IiwKIlR1cnRsZSIsCiJXYXRlcmZhbGwiCn0KZW5kCl9HLk1hZ25pdHVkZUFkZCA9IDAKbG9jYWwgZnVuY3Rpb24gZ2V0RGlzdGFuY2Uob2JqQ0ZyYW1lKQpsb2NhbCBocnAgPSBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikKaWYgaHJwIGFuZCBvYmpDRnJhbWUgdGhlbgpyZXR1cm4gKG9iakNGcmFtZS5Qb3NpdGlvbiAtIGhycC5Qb3NpdGlvbikuTWFnbml0dWRlCmVuZApyZXR1cm4gbWF0aC5odWdlCmVuZApzcGF3bihmdW5jdGlvbigpCndoaWxlIHRhc2sud2FpdCgpIGRvCmlmIF9HLkF1dG9GYXJtQ2hlc3Qgb3IgX0cuQ2hlc3RCeXBhc3MgdGhlbgpsb2NhbCB3b3Jrc3BhY2UgPSBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpCmxvY2FsIGhycCA9IGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKQppZiBub3QgaHJwIHRoZW4gd2FpdCgpIGVuZApsb2NhbCBhbGxDaGVzdHMgPSB7fQpmb3IgXywgaXNsYW5kTmFtZSBpbiBwYWlycyhpc2xhbmRzKSBkbwpsb2NhbCBpc2xhbmQgPSB3b3Jrc3BhY2UuTWFwOkZpbmRGaXJzdENoaWxkKGlzbGFuZE5hbWUpCmlmIGlzbGFuZCB0aGVuCmZvciBfLCB2IGluIHBhaXJzKGlzbGFuZDpHZXREZXNjZW5kYW50cygpKSBkbwppZiBzdHJpbmcuZmluZCh2Lk5hbWUsICJDaGVzdCIpIGFuZCB2OklzQSgiQmFzZVBhcnQiKSB0aGVuCnRhYmxlLmluc2VydChhbGxDaGVzdHMsIHYpCmVuZAplbmQKZW5kCmVuZApsb2NhbCBjaGVzdE1vZGVscyA9IHdvcmtzcGFjZTpGaW5kRmlyc3RDaGlsZCgiQ2hlc3RNb2RlbHMiKQppZiBjaGVzdE1vZGVscyB0aGVuCmZvciBfLCB2IGluIHBhaXJzKGNoZXN0TW9kZWxzOkdldERlc2NlbmRhbnRzKCkpIGRvCmlmIHN0cmluZy5maW5kKHYuTmFtZSwgIkNoZXN0IikgYW5kIHY6SXNBKCJCYXNlUGFydCIpIHRoZW4KdGFibGUuaW5zZXJ0KGFsbENoZXN0cywgdikKZW5kCmVuZAplbmQKdGFibGUuc29ydChhbGxDaGVzdHMsIGZ1bmN0aW9uKGEsIGIpCnJldHVybiBnZXREaXN0YW5jZShhLkNGcmFtZSkgPCBnZXREaXN0YW5jZShiLkNGcmFtZSkKZW5kKQpmb3IgXywgY2hlc3QgaW4gaXBhaXJzKGFsbENoZXN0cykgZG8KbG9jYWwgZGlzdGFuY2UgPSBnZXREaXN0YW5jZShjaGVzdC5DRnJhbWUpCmlmIGRpc3RhbmNlIDw9IChfRy5NYWduaXR1ZGVBZGQgKyAzMDAwKSB0aGVuCmlmIF9HLkF1dG9GYXJtQ2hlc3QgdGhlbgpsb2NhbCB0d2VlbkZ1bmMgPSB0b1RhcmdldChjaGVzdC5DRnJhbWUpCnR3ZWVuRnVuYzpXYWl0KCkKX0cuTWFnbml0dWRlQWRkID0gX0cuTWFnbml0dWRlQWRkICsgMTUwMAplbHNlaWYgX0cuQ2hlc3RCeXBhc3MgdGhlbgpocnAuQ0ZyYW1lID0gY2hlc3QuQ0ZyYW1lCl9HLk1hZ25pdHVkZUFkZCA9IF9HLk1hZ25pdHVkZUFkZCArIDE1MDAKZW5kCnRhc2sud2FpdCgwLjUpCmVuZAplbmQKZW5kCmVuZAplbmQpCmlmIFdvcmxkMyB0aGVuCnBhZ2UxOlNlcGVyYXRvcigiU3RhdHVzIDogV29ybGQgM1xu4Liq4LiW4Liy4LiZ4LiwIDog4LmC4Lil4LiBIDMiKQpwYWdlMTpUb2dnbGUoIkF1dG8gUmFpbmJvd0hha2lcbuC4l+C4s+C4ruC4suC4hOC4tOC4quC4teC4o+C4uOC5ieC4hyIsIF9HLkF1dG9SYWluYm93SGFraSxmdW5jdGlvbih2YWx1ZSkKX0cuQXV0b1JhaW5ib3dIYWtpID0gdmFsdWUKaWYgdmFsdWUgPT0gZmFsc2UgdGhlbgp0YXNrLndhaXQoKQp0b1RhcmdldChnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUpCnRhc2sud2FpdCgpCmVuZAplbmQpCnRhc2suc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB0YXNrLndhaXQoKSBkbwpwY2FsbChmdW5jdGlvbigpCmlmIF9HLkF1dG9SYWluYm93SGFraSB0aGVuCmlmIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLlBsYXllckd1aS5NYWluLlF1ZXN0LlZpc2libGUgPT0gZmFsc2UgdGhlbgp0b1RhcmdldChDRnJhbWUubmV3KC0xMTg5Mi4wNzAzMTI1LCA5MzAuNTc2NzIxMTkxNDEsIC04NzYwLjE1OTE3OTY4NzUpKQppZiAoVmVjdG9yMy5uZXcoLTExODkyLjA3MDMxMjUsIDkzMC41NzY3MjExOTE0MSwgLTg3NjAuMTU5MTc5Njg3NSkgLSBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikuTWFnbml0dWRlIDw9IDMwIHRoZW4Kd2FpdCgxLjUpCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkhvcm5lZE1hbiIsIkJldCIpCmVuZAplbHNlaWYgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuUGxheWVyR3VpLk1haW4uUXVlc3QuVmlzaWJsZSA9PSB0cnVlIGFuZCBzdHJpbmcuZmluZChnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5QbGF5ZXJHdWkuTWFpbi5RdWVzdC5Db250YWluZXIuUXVlc3RUaXRsZS5UaXRsZS5UZXh0LCAiU3RvbmUiKSB0aGVuCmlmIGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpGaW5kRmlyc3RDaGlsZCgiU3RvbmUiKSB0aGVuCmZvciBpLCB2IGluIHBhaXJzKGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpHZXRDaGlsZHJlbigpKSBkbwppZiB2Lk5hbWUgPT0gIlN0b25lIiB0aGVuCnJlcGVhdAp0YXNrLndhaXQoKQpCcmluZ01vYiA9IHRydWUKRmFzdEF0dGFjayA9IHRydWUKaWYgbm90IGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoX0cuU2VsZWN0V2VhcG9uKSB0aGVuCnRhc2sud2FpdCgpCkVxdWlwV2VhcG9uKF9HLlNlbGVjdFdlYXBvbikKZW5kClBvc01vbiA9IHYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUKaWYgbm90IF9HLkZhc3RBdHRhY2sgdGhlbgpnYW1lOkdldFNlcnZpY2UgJ1ZpcnR1YWxVc2VyJzpDYXB0dXJlQ29udHJvbGxlcigpCmdhbWU6R2V0U2VydmljZSAnVmlydHVhbFVzZXInOkJ1dHRvbjFEb3duKFZlY3RvcjIubmV3KDEyODAsIDY3MikpCmVuZAp2Lkh1bWFub2lkUm9vdFBhcnQuU2l6ZSA9IFZlY3RvcjMubmV3KDgwLCA4MCwgODApCnYuSHVtYW5vaWQuSnVtcFBvd2VyID0gMAp2Lkh1bWFub2lkLldhbGtTcGVlZCA9IDAKdi5IdW1hbm9pZFJvb3RQYXJ0LkNhbkNvbGxpZGUgPSBmYWxzZQp2Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDExKQp2Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDE0KQp2Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDE2KQp0b1RhcmdldCh2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lICogTWV0aG9kRmFybSkKdW50aWwgbm90IF9HLkF1dG9SYWluYm93SGFraSBvciB2Lkh1bWFub2lkLkhlYWx0aCA8PSAwIG9yIG5vdCB2LlBhcmVudCBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5QbGF5ZXJHdWkuTWFpbi5RdWVzdC5WaXNpYmxlID09IGZhbHNlCkJyaW5nTW9iID0gZmFsc2UKRmFzdEF0dGFjayA9IGZhbHNlCmVuZAplbmQKZWxzZQp0b1RhcmdldChDRnJhbWUubmV3KC0xMDg2LjExNjIxLCAzOC44NDI1OTAzLCA2NzY4LjcxNDM2LCAwLjAyMzE0NjI3MTcsLTAuNTkyNjc2Njk5LDAuODA1MTA3NzcyLCAyLjAzMjUxODM5ZS0wNSwgMC44MDUzMjM4MzksIDAuNTkyODM1MTI4LCAtMC45OTk3MzIwNzcsLTAuMDEzNzA1NTUxNiwgMC4wMTg2NTIzMTk5KSkKZW5kCmVsc2VpZiBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5QbGF5ZXJHdWkuTWFpbi5RdWVzdC5WaXNpYmxlID09IHRydWUgYW5kIHN0cmluZy5maW5kKGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLlBsYXllckd1aS5NYWluLlF1ZXN0LkNvbnRhaW5lci5RdWVzdFRpdGxlLlRpdGxlLlRleHQsICJJc2xhbmQgRW1wcmVzcyIpIHRoZW4KaWYgZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkZpbmRGaXJzdENoaWxkKCJJc2xhbmQgRW1wcmVzcyIpIHRoZW4KZm9yIGksIHYgaW4gcGFpcnMoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkdldENoaWxkcmVuKCkpIGRvCmlmIHYuTmFtZSA9PSAiSXNsYW5kIEVtcHJlc3MiIHRoZW4KcmVwZWF0CnRhc2sud2FpdCgpCkJyaW5nTW9iID0gdHJ1ZQpGYXN0QXR0YWNrID0gdHJ1ZQppZiBub3QgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZChfRy5TZWxlY3RXZWFwb24pIHRoZW4KdGFzay53YWl0KCkKRXF1aXBXZWFwb24oX0cuU2VsZWN0V2VhcG9uKQplbmQKUG9zTW9uID0gdi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZQppZiBub3QgX0cuRmFzdEF0dGFjayB0aGVuCmdhbWU6R2V0U2VydmljZSAnVmlydHVhbFVzZXInOkNhcHR1cmVDb250cm9sbGVyKCkKZ2FtZTpHZXRTZXJ2aWNlICdWaXJ0dWFsVXNlcic6QnV0dG9uMURvd24oVmVjdG9yMi5uZXcoMTI4MCwgNjcyKSkKZW5kCnYuSHVtYW5vaWRSb290UGFydC5TaXplID0gVmVjdG9yMy5uZXcoODAsIDgwLCA4MCkKdi5IdW1hbm9pZC5KdW1wUG93ZXIgPSAwCnYuSHVtYW5vaWQuV2Fsa1NwZWVkID0gMAp2Lkh1bWFub2lkUm9vdFBhcnQuQ2FuQ29sbGlkZSA9IGZhbHNlCnYuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTEpCnYuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTQpCnYuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTYpCnRvVGFyZ2V0KHYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgKiBNZXRob2RGYXJtKQp1bnRpbCBub3QgX0cuQXV0b1JhaW5ib3dIYWtpIG9yIHYuSHVtYW5vaWQuSGVhbHRoIDw9IDAgb3Igbm90IHYuUGFyZW50IG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLlBsYXllckd1aS5NYWluLlF1ZXN0LlZpc2libGUgPT0gZmFsc2UKQnJpbmdNb2IgPSBmYWxzZQpGYXN0QXR0YWNrID0gZmFsc2UKZW5kCmVuZAplbHNlCnRvVGFyZ2V0KENGcmFtZS5uZXcoNTcxMy45ODg3NywgNjAxLjkyMjk3NCwgMjAyLjc1MTI1MSwgLTAuMTAxMDgwMjkxLCAtMCwtMC45OTQ4NzgyOTIsIC0wLCAxLCAtMCwgMC45OTQ4NzgyOTIsIDAsIC0wLjEwMTA4MDI5MSkpCmVuZAplbHNlaWYgc3RyaW5nLmZpbmQoZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuUGxheWVyR3VpLk1haW4uUXVlc3QuQ29udGFpbmVyLlF1ZXN0VGl0bGUuVGl0bGUuVGV4dCwgIktpbG8gQWRtaXJhbCIpIHRoZW4KaWYgZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkZpbmRGaXJzdENoaWxkKCJLaWxvIEFkbWlyYWwiKSB0aGVuCmZvciBpLCB2IGluIHBhaXJzKGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpHZXRDaGlsZHJlbigpKSBkbwppZiB2Lk5hbWUgPT0gIktpbG8gQWRtaXJhbCIgdGhlbgpyZXBlYXQKdGFzay53YWl0KCkKQnJpbmdNb2IgPSB0cnVlCkZhc3RBdHRhY2sgPSB0cnVlCmlmIG5vdCBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKF9HLlNlbGVjdFdlYXBvbikgdGhlbgp0YXNrLndhaXQoKQpFcXVpcFdlYXBvbihfRy5TZWxlY3RXZWFwb24pCmVuZApQb3NNb24gPSB2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lCmlmIG5vdCBfRy5GYXN0QXR0YWNrIHRoZW4KZ2FtZTpHZXRTZXJ2aWNlICdWaXJ0dWFsVXNlcic6Q2FwdHVyZUNvbnRyb2xsZXIoKQpnYW1lOkdldFNlcnZpY2UgJ1ZpcnR1YWxVc2VyJzpCdXR0b24xRG93bihWZWN0b3IyLm5ldygxMjgwLCA2NzIpKQplbmQKdi5IdW1hbm9pZFJvb3RQYXJ0LlNpemUgPSBWZWN0b3IzLm5ldyg4MCwgODAsIDgwKQp2Lkh1bWFub2lkLkp1bXBQb3dlciA9IDAKdi5IdW1hbm9pZC5XYWxrU3BlZWQgPSAwCnYuSHVtYW5vaWRSb290UGFydC5DYW5Db2xsaWRlID0gZmFsc2UKdi5IdW1hbm9pZDpDaGFuZ2VTdGF0ZSgxMSkKdi5IdW1hbm9pZDpDaGFuZ2VTdGF0ZSgxNCkKdi5IdW1hbm9pZDpDaGFuZ2VTdGF0ZSgxNikKdG9UYXJnZXQodi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSAqIE1ldGhvZEZhcm0pCnVudGlsIG5vdCBfRy5BdXRvUmFpbmJvd0hha2kgb3Igdi5IdW1hbm9pZC5IZWFsdGggPD0gMCBvciBub3Qgdi5QYXJlbnQgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuUGxheWVyR3VpLk1haW4uUXVlc3QuVmlzaWJsZSA9PSBmYWxzZQpCcmluZ01vYiA9IGZhbHNlCkZhc3RBdHRhY2sgPSBmYWxzZQplbmQKZW5kCmVsc2UKdG9UYXJnZXQoQ0ZyYW1lLm5ldygyODc3LjYxNzQzLCA0MjMuNTU4Njg1LCAtNzIwNy4zMTAwNiwgLTAuOTg5NTkxNTk5LCAtMCwtMC4xNDM5MDQ5MDksIC0wLCAxLjAwMDAwMDEyLCAtMCwgMC4xNDM5MDQ5MjQsIDAsIC0wLjk4OTU5MTQ3OSkpCmVuZAplbHNlaWYgc3RyaW5nLmZpbmQoZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuUGxheWVyR3VpLk1haW4uUXVlc3QuQ29udGFpbmVyLlF1ZXN0VGl0bGUuVGl0bGUuVGV4dCwgIkNhcHRhaW4gRWxlcGhhbnQiKSB0aGVuCmlmIGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpGaW5kRmlyc3RDaGlsZCgiQ2FwdGFpbiBFbGVwaGFudCIpIHRoZW4KZm9yIGksIHYgaW4gcGFpcnMoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkdldENoaWxkcmVuKCkpIGRvCmlmIHYuTmFtZSA9PSAiQ2FwdGFpbiBFbGVwaGFudCIgdGhlbgpyZXBlYXQKdGFzay53YWl0KCkKQnJpbmdNb2IgPSB0cnVlCkZhc3RBdHRhY2sgPSB0cnVlCmlmIG5vdCBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKF9HLlNlbGVjdFdlYXBvbikgdGhlbgp0YXNrLndhaXQoKQpFcXVpcFdlYXBvbihfRy5TZWxlY3RXZWFwb24pCmVuZApQb3NNb24gPSB2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lCmlmIG5vdCBfRy5GYXN0QXR0YWNrIHRoZW4KZ2FtZTpHZXRTZXJ2aWNlICdWaXJ0dWFsVXNlcic6Q2FwdHVyZUNvbnRyb2xsZXIoKQpnYW1lOkdldFNlcnZpY2UgJ1ZpcnR1YWxVc2VyJzpCdXR0b24xRG93bihWZWN0b3IyLm5ldygxMjgwLCA2NzIpKQplbmQKdi5IdW1hbm9pZFJvb3RQYXJ0LlNpemUgPSBWZWN0b3IzLm5ldyg4MCwgODAsIDgwKQp2Lkh1bWFub2lkLkp1bXBQb3dlciA9IDAKdi5IdW1hbm9pZC5XYWxrU3BlZWQgPSAwCnYuSHVtYW5vaWRSb290UGFydC5DYW5Db2xsaWRlID0gZmFsc2UKdi5IdW1hbm9pZDpDaGFuZ2VTdGF0ZSgxMSkKdi5IdW1hbm9pZDpDaGFuZ2VTdGF0ZSgxNCkKdi5IdW1hbm9pZDpDaGFuZ2VTdGF0ZSgxNikKdG9UYXJnZXQodi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSAqIE1ldGhvZEZhcm0pCnVudGlsIG5vdCBfRy5BdXRvUmFpbmJvd0hha2kgb3Igdi5IdW1hbm9pZC5IZWFsdGggPD0gMCBvciBub3Qgdi5QYXJlbnQgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuUGxheWVyR3VpLk1haW4uUXVlc3QuVmlzaWJsZSA9PSBmYWxzZQpCcmluZ01vYiA9IGZhbHNlCkZhc3RBdHRhY2sgPSBmYWxzZQplbmQKZW5kCmVsc2UKdG9UYXJnZXQoQ0ZyYW1lLm5ldygtMTM0ODUuMDI4MywgMzMxLjcwOTI1OSwgLTgwMTIuNDg3MywgMC43MTQ1MjEyODksNy45ODg0OTkxMWUtMDgsMC42OTk2MTM3NSwgLTEuMDIwNjU3NDhlLTA3LCAxLCAtOS45NDM4MzA2NWUtMDksIC0wLjY5OTYxMzc1LCAtNi40MzAxNTI0MWUtMDgsMC43MTQ1MjEyODkpKQplbmQKZWxzZWlmIHN0cmluZy5maW5kKGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLlBsYXllckd1aS5NYWluLlF1ZXN0LkNvbnRhaW5lci5RdWVzdFRpdGxlLlRpdGxlLlRleHQsICJCZWF1dGlmdWwgUGlyYXRlIikgdGhlbgppZiBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLkVuZW1pZXM6RmluZEZpcnN0Q2hpbGQoIkJlYXV0aWZ1bCBQaXJhdGUiKSB0aGVuCmZvciBpLCB2IGluIHBhaXJzKGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpHZXRDaGlsZHJlbigpKSBkbwppZiB2Lk5hbWUgPT0gIkJlYXV0aWZ1bCBQaXJhdGUiIHRoZW4KcmVwZWF0CnRhc2sud2FpdCgpCkJyaW5nTW9iID0gdHJ1ZQpGYXN0QXR0YWNrID0gdHJ1ZQppZiBub3QgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZChfRy5TZWxlY3RXZWFwb24pIHRoZW4KdGFzay53YWl0KCkKRXF1aXBXZWFwb24oX0cuU2VsZWN0V2VhcG9uKQplbmQKUG9zTW9uID0gdi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZQppZiBub3QgX0cuRmFzdEF0dGFjayB0aGVuCmdhbWU6R2V0U2VydmljZSAnVmlydHVhbFVzZXInOkNhcHR1cmVDb250cm9sbGVyKCkKZ2FtZTpHZXRTZXJ2aWNlICdWaXJ0dWFsVXNlcic6QnV0dG9uMURvd24oVmVjdG9yMi5uZXcoMTI4MCwgNjcyKSkKZW5kCnYuSHVtYW5vaWRSb290UGFydC5TaXplID0gVmVjdG9yMy5uZXcoODAsIDgwLCA4MCkKdi5IdW1hbm9pZC5KdW1wUG93ZXIgPSAwCnYuSHVtYW5vaWQuV2Fsa1NwZWVkID0gMAp2Lkh1bWFub2lkUm9vdFBhcnQuQ2FuQ29sbGlkZSA9IGZhbHNlCnYuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTEpCnYuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTQpCnYuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTYpCnRvVGFyZ2V0KHYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgKiBNZXRob2RGYXJtKQp1bnRpbCBub3QgX0cuQXV0b1JhaW5ib3dIYWtpIG9yIHYuSHVtYW5vaWQuSGVhbHRoIDw9IDAgb3Igbm90IHYuUGFyZW50IG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLlBsYXllckd1aS5NYWluLlF1ZXN0LlZpc2libGUgPT0gZmFsc2UKQnJpbmdNb2IgPSBmYWxzZQpGYXN0QXR0YWNrID0gZmFsc2UKZW5kCmVuZAplbHNlCnRvVGFyZ2V0KENGcmFtZS5uZXcoNTMxMi4zNTk4NjMyODEzLCAyMC4xNDEyMDEwMTkyODcsIC0xMC4xNTg1Mzg4MTgzNTkpKQplbmQKZWxzZQp0b1RhcmdldChDRnJhbWUubmV3KC0xMTg5Mi4wNzAzMTI1LCA5MzAuNTc2NzIxMTkxNDEsIC04NzYwLjE1OTE3OTY4NzUpKQppZiAoVmVjdG9yMy5uZXcoLTExODkyLjA3MDMxMjUsIDkzMC41NzY3MjExOTE0MSwgLTg3NjAuMTU5MTc5Njg3NSkgLSBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikuTWFnbml0dWRlIDw9IDMwIHRoZW4Kd2FpdCgxLjUpCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkhvcm5lZE1hbiIsIkJldCIpCmVuZAplbmQKZW5kCmVuZCkKZW5kCmVuZCkKcGFnZTE6VG9nZ2xlKCJBdXRvIEhvbHlUb3JjaFxubuC4iOC4uOC4lOC4hOC4muC5gOC4nuC4peC4tOC4hyIsIF9HLkF1dG9Ib2x5VG9yY2gsIGZ1bmN0aW9uKHZhbHVlKQpfRy5BdXRvSG9seVRvcmNoID0gdmFsdWUKaWYgdmFsdWUgPT0gZmFsc2UgdGhlbgp0b1RhcmdldChnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUpCmVuZAplbmQpCnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgd2FpdCgpIGRvCmlmIF9HLkF1dG9Ib2x5VG9yY2ggdGhlbgppZiBnYW1lLlJlcGxpY2F0ZWRTdG9yYWdlOkZpbmRGaXJzdENoaWxkKCJyaXBfaW5kcmEgVHJ1ZSBGb3JtIFtMdi4gNTAwMF0gW1JhaWQgQm9zc10iKSBvciBnYW1lLldvcmtzcGFjZS5FbmVtaWVzOkZpbmRGaXJzdENoaWxkKCJyaXBfaW5kcmEgVHJ1ZSBGb3JtIFtMdi4gNTAwMF0gW1JhaWQgQm9zc10iKSBhbmQgZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5NYXAuVHVydGxlLlR1c2hpdGFHYXRlLlR1c2hpdGFHYXRlLlRyYW5zcGFyZW5jeSA9PSAxIHRoZW4KaWYgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJIb2x5IFRvcmNoIikgdGhlbgpFcXVpcFdlYXBvbigiSG9seSBUb3JjaCIpCmVsc2VpZiBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJIb2x5IFRvcmNoIikgdGhlbgppZiBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLk1hcC5UdXJ0bGUuUXVlc3RUb3JjaGVzLlRvcmNoMS5QYXJ0aWNsZXMuTWFpbi5FbmFibGVkIH49IHRydWUgdGhlbgppZiAoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5NYXAuVHVydGxlLlF1ZXN0VG9yY2hlcy5Ub3JjaDEuUG9zaXRpb24gLSBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLm1hZ25pdHVkZSA+IDMwMCB0aGVuCkhvbHlUb3JjaHR3ZWVuID0gdG9UYXJnZXQoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5NYXAuVHVydGxlLlF1ZXN0VG9yY2hlcy5Ub3JjaDEuUG9zaXRpb24sZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5NYXAuVHVydGxlLlF1ZXN0VG9yY2hlcy5Ub3JjaDEuQ0ZyYW1lKQplbHNlaWYgKGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuTWFwLlR1cnRsZS5RdWVzdFRvcmNoZXMuVG9yY2gxLlBvc2l0aW9uIC0gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKS5tYWduaXR1ZGUgPD0gMzAwIHRoZW4KaWYgSG9seVRvcmNodHdlZW4gdGhlbgpIb2x5VG9yY2h0d2VlbjpTdG9wKCkKZW5kCmdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSA9IGdhbWUuV29ya3NwYWNlLk1hcC5UdXJ0bGUuUXVlc3RUb3JjaGVzLlRvcmNoMS5DRnJhbWUKZW5kCmVsc2VpZiBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLk1hcC5UdXJ0bGUuUXVlc3RUb3JjaGVzLlRvcmNoMi5QYXJ0aWNsZXMuTWFpbi5FbmFibGVkIH49IHRydWUgdGhlbgppZiAoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5NYXAuVHVydGxlLlF1ZXN0VG9yY2hlcy5Ub3JjaDIuUG9zaXRpb24gLSBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLm1hZ25pdHVkZSA+IDMwMCB0aGVuCkhvbHlUb3JjaHR3ZWVuID0gdG9UYXJnZXQoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5NYXAuVHVydGxlLlF1ZXN0VG9yY2hlcy5Ub3JjaDIuUG9zaXRpb24sZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5NYXAuVHVydGxlLlF1ZXN0VG9yY2hlcy5Ub3JjaDIuQ0ZyYW1lKQplbHNlaWYgKGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuTWFwLlR1cnRsZS5RdWVzdFRvcmNoZXMuVG9yY2gyLlBvc2l0aW9uIC0gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKS5tYWduaXR1ZGUgPD0gMzAwIHRoZW4KaWYgSG9seVRvcmNodHdlZW4gdGhlbgpIb2x5VG9yY2h0d2VlbjpTdG9wKCkKZW5kCmdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSA9IGdhbWUuV29ya3NwYWNlLk1hcC5UdXJ0bGUuUXVlc3RUb3JjaGVzLlRvcmNoMi5DRnJhbWUKZW5kCmVsc2VpZiBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLk1hcC5UdXJ0bGUuUXVlc3RUb3JjaGVzLlRvcmNoMy5QYXJ0aWNsZXMuTWFpbi5FbmFibGVkIH49IHRydWUgdGhlbgppZiAoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5NYXAuVHVydGxlLlF1ZXN0VG9yY2hlcy5Ub3JjaDMuUG9zaXRpb24gLSBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLm1hZ25pdHVkZSA+IDMwMCB0aGVuCkhvbHlUb3JjaHR3ZWVuID0gdG9UYXJnZXQoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5NYXAuVHVydGxlLlF1ZXN0VG9yY2hlcy5Ub3JjaDMuUG9zaXRpb24sZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5NYXAuVHVydGxlLlF1ZXN0VG9yY2hlcy5Ub3JjaDMuQ0ZyYW1lKQplbHNlaWYgKGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuTWFwLlR1cnRsZS5RdWVzdFRvcmNoZXMuVG9yY2gzLlBvc2l0aW9uIC0gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKS5tYWduaXR1ZGUgPD0gMzAwIHRoZW4KaWYgSG9seVRvcmNodHdlZW4gdGhlbgpIb2x5VG9yY2h0d2VlbjpTdG9wKCkKZW5kCmdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSA9IGdhbWUuV29ya3NwYWNlLk1hcC5UdXJ0bGUuUXVlc3RUb3JjaGVzLlRvcmNoMy5DRnJhbWUKZW5kCmVsc2VpZiBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLk1hcC5UdXJ0bGUuUXVlc3RUb3JjaGVzLlRvcmNoNC5QYXJ0aWNsZXMuTWFpbi5FbmFibGVkIH49IHRydWUgdGhlbgppZiAoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5NYXAuVHVydGxlLlF1ZXN0VG9yY2hlcy5Ub3JjaDQuUG9zaXRpb24gLSBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLm1hZ25pdHVkZSA+IDMwMCB0aGVuCkhvbHlUb3JjaHR3ZWVuID0gdG9UYXJnZXQoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5NYXAuVHVydGxlLlF1ZXN0VG9yY2hlcy5Ub3JjaDQuUG9zaXRpb24sZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5NYXAuVHVydGxlLlF1ZXN0VG9yY2hlcy5Ub3JjaDQuQ0ZyYW1lKQplbHNlaWYgKGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuTWFwLlR1cnRsZS5RdWVzdFRvcmNoZXMuVG9yY2g0LlBvc2l0aW9uIC0gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKS5tYWduaXR1ZGUgPD0gMzAwIHRoZW4KaWYgSG9seVRvcmNodHdlZW4gdGhlbgpIb2x5VG9yY2h0d2VlbjpTdG9wKCkKZW5kCmdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSA9IGdhbWUuV29ya3NwYWNlLk1hcC5UdXJ0bGUuUXVlc3RUb3JjaGVzLlRvcmNoNC5DRnJhbWUKZW5kCmVsc2VpZiBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLk1hcC5UdXJ0bGUuUXVlc3RUb3JjaGVzLlRvcmNoNS5QYXJ0aWNsZXMuTWFpbi5FbmFibGVkIH49IHRydWUgdGhlbgppZiAoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5NYXAuVHVydGxlLlF1ZXN0VG9yY2hlcy5Ub3JjaDUuUG9zaXRpb24gLSBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLm1hZ25pdHVkZSA+IDMwMCB0aGVuCkhvbHlUb3JjaHR3ZWVuID0gdG9UYXJnZXQoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5NYXAuVHVydGxlLlF1ZXN0VG9yY2hlcy5Ub3JjaDUuUG9zaXRpb24sZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5NYXAuVHVydGxlLlF1ZXN0VG9yY2hlcy5Ub3JjaDUuQ0ZyYW1lKQplbHNlaWYgKGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuTWFwLlR1cnRsZS5RdWVzdFRvcmNoZXMuVG9yY2g1LlBvc2l0aW9uIC0gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKS5tYWduaXR1ZGUgPD0gMzAwIHRoZW4KaWYgSG9seVRvcmNodHdlZW4gdGhlbgpIb2x5VG9yY2h0d2VlbjpTdG9wKCkKZW5kCmdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSA9IGdhbWUuV29ya3NwYWNlLk1hcC5UdXJ0bGUuUXVlc3RUb3JjaGVzLlRvcmNoNS5DRnJhbWUKZW5kCmVuZAplbHNlCmdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSA9IGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuTWFwLldhdGVyZmFsbC5TZWNyZXRSb29tLlJvb20uRG9vci5Eb29yLkhpdGJveC5DRnJhbWUKZW5kCmVuZAplbmQKZW5kCmVuZCkKZnVuY3Rpb24gRWxpdGUoKQp0YXNrLnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgdGFzay53YWl0KCkgZG8KcGNhbGwoZnVuY3Rpb24oKQppZiBfRy5BdXRvRWxpdGVIdW50ZXIgdGhlbgppZiBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuUGxheWVyR3VpLk1haW4uUXVlc3QuVmlzaWJsZSA9PSB0cnVlIHRoZW4KaWYgc3RyaW5nLmZpbmQoZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLlBsYXllckd1aS5NYWluLlF1ZXN0LkNvbnRhaW5lci5RdWVzdFRpdGxlLlRpdGxlLlRleHQsICJEaWFibG8iKSBvciBzdHJpbmcuZmluZChnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuUGxheWVyR3VpLk1haW4uUXVlc3QuQ29udGFpbmVyLlF1ZXN0VGl0bGUuVGl0bGUuVGV4dCwgIlVyYmFuIikgb3Igc3RyaW5nLmZpbmQoZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLlBsYXllckd1aS5NYWluLlF1ZXN0LkNvbnRhaW5lci5RdWVzdFRpdGxlLlRpdGxlLlRleHQsICJEZWFuZHJlIikgdGhlbgpmb3IgaSwgdiBpbiBwYWlycyhnYW1lLlJlcGxpY2F0ZWRTdG9yYWdlOkdldENoaWxkcmVuKCkpIGRvCmlmIHN0cmluZy5maW5kKHYuTmFtZSwgIkRpYWJsbyIpIHRoZW4KRWxpdGVIdW50ZXIgPSB0b1RhcmdldCh2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lKQppZiAodi5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uIC0gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKS5tYWduaXR1ZGUgPD0gMTUwIHRoZW4KaWYgRWxpdGVIdW50ZXIgdGhlbgpFbGl0ZUh1bnRlcjpTdG9wKCkKZW5kCmdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgPSB2Ci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZQplbmQKZW5kCmlmIHN0cmluZy5maW5kKHYuTmFtZSwgIlVyYmFuIikgdGhlbgpFbGl0ZUh1bnRlciA9IHRvVGFyZ2V0KHYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUpCmlmICh2Lkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24gLSBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLm1hZ25pdHVkZSA8PSAxNTAgdGhlbgppZiBFbGl0ZUh1bnRlciB0aGVuCkVsaXRlSHVudGVyOlN0b3AoKQplbmQKZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSA9IHYKLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lCmVuZAplbmQKaWYgc3RyaW5nLmZpbmQodi5OYW1lLCAiRGVhbmRyZSIpIHRoZW4KRWxpdGVIdW50ZXIgPSB0b1RhcmdldCh2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lKQppZiAodi5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uIC0gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKS5tYWduaXR1ZGUgPD0gMTUwIHRoZW4KaWYgRWxpdGVIdW50ZXIgdGhlbgpFbGl0ZUh1bnRlcjpTdG9wKCkKZW5kCmdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgPSB2Ci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZQplbmQKZW5kCmVuZApmb3IgaSwgdiBpbiBwYWlycyhnYW1lLldvcmtzcGFjZS5FbmVtaWVzOkdldENoaWxkcmVuKCkpIGRvCmlmIF9HLkF1dG9FbGl0ZUh1bnRlciBhbmQgc3RyaW5nLmZpbmQodi5OYW1lLCAiRGlhYmxvIikgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkIikgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKSBhbmQgdi5IdW1hbm9pZC5IZWFsdGggPiAwIHRoZW4KcmVwZWF0CnRhc2sud2FpdCgpCmlmICh2Lkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24gLSBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLm1hZ25pdHVkZSA+IDE1MCB0aGVuCkZhcm10d2VlbiA9IHRvVGFyZ2V0KHYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUpCmVsc2VpZiAodi5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uIC0gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKS5tYWduaXR1ZGUgPD0gMTUwIHRoZW4KaWYgRmFybXR3ZWVuIHRoZW4KRmFybXR3ZWVuOlN0b3AoKQplbmQKZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSA9IHYgLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lICogTWV0aG9kRmFybQpGYXN0QXR0YWNrID0gdHJ1ZQpFcXVpcFdlYXBvbihfRy5TZWxlY3RXZWFwb24pCmVuZAp1bnRpbCBub3QgX0cuQXV0b0VsaXRlSHVudGVyIG9yIG5vdCB2LlBhcmVudCBvciB2Lkh1bWFub2lkLkhlYWx0aCA8PSAwCkZhc3RBdHRhY2sgPSBmYWxzZQplbmQKaWYgX0cuQXV0b0VsaXRlSHVudGVyIGFuZCBzdHJpbmcuZmluZCh2Lk5hbWUsICJVcmJhbiIpIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZCIpIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikgYW5kIHYuSHVtYW5vaWQuSGVhbHRoID4gMCB0aGVuCnJlcGVhdAp0YXNrLndhaXQoKQppZiAodi5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uIC0gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKS5tYWduaXR1ZGUgPiAxNTAgdGhlbgpGYXJtdHdlZW4gPSB0b1RhcmdldCh2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lKQplbHNlaWYgKHYuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbiAtIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikubWFnbml0dWRlIDw9IDE1MCB0aGVuCmlmIEZhcm10d2VlbiB0aGVuCkZhcm10d2VlbjpTdG9wKCkKZW5kCmdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgPSB2IC5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSAqIE1ldGhvZEZhcm0KRmFzdEF0dGFjayA9IHRydWUKRXF1aXBXZWFwb24oX0cuU2VsZWN0V2VhcG9uKQplbmQKdW50aWwgbm90IF9HLkF1dG9FbGl0ZUh1bnRlciBvciBub3Qgdi5QYXJlbnQgb3Igdi5IdW1hbm9pZC5IZWFsdGggPD0gMApGYXN0QXR0YWNrID0gZmFsc2UKZW5kCmlmIF9HLkF1dG9FbGl0ZUh1bnRlciBhbmQgc3RyaW5nLmZpbmQodi5OYW1lLCAiRGVhbmRyZSIpIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZCIpIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikgYW5kIHYuSHVtYW5vaWQuSGVhbHRoID4gMCB0aGVuCnJlcGVhdAp0YXNrLndhaXQoKQppZiAodi5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uIC0gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKS5tYWduaXR1ZGUgPiAxNTAgdGhlbgpGYXJtdHdlZW4gPSB0b1RhcmdldCh2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lKQplbHNlaWYgKHYuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbiAtIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikubWFnbml0dWRlIDw9IDE1MCB0aGVuCmlmIEZhcm10d2VlbiB0aGVuCkZhcm10d2VlbjpTdG9wKCkKZW5kCmdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgPSB2IC5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSAqIE1ldGhvZEZhcm0KRmFzdEF0dGFjayA9IHRydWUKRXF1aXBXZWFwb24oX0cuU2VsZWN0V2VhcG9uKQplbmQKdW50aWwgbm90IF9HLkF1dG9FbGl0ZUh1bnRlciBvciBub3Qgdi5QYXJlbnQgb3Igdi5IdW1hbm9pZC5IZWFsdGggPD0gMApGYXN0QXR0YWNrID0gZmFsc2UKZW5kCmVuZAplbHNlCmxvY2FsIHN0cmluZ18xID0gIkVsaXRlSHVudGVyIjsKbG9jYWwgVGFyZ2V0ID0gZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXNbIkNvbW1GXyJdOwpUYXJnZXQ6SW52b2tlU2VydmVyKHN0cmluZ18xKTsKZW5kCmVsc2UKbG9jYWwgc3RyaW5nXzEgPSAiRWxpdGVIdW50ZXIiOwpsb2NhbCBUYXJnZXQgPSBnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlc1siQ29tbUZfIl07ClRhcmdldDpJbnZva2VTZXJ2ZXIoc3RyaW5nXzEpOwplbmQKZW5kCmVuZCkKZW5kCmVuZCkKaWYgX0cuQXV0b0VsaXRlSHVudGVySG9wIHRoZW4KaWYgbm90IChnYW1lLldvcmtzcGFjZS5FbmVtaWVzOkZpbmRGaXJzdENoaWxkKCJEZWFuZHJlIikgb3IgZ2FtZS5Xb3Jrc3BhY2UuRW5lbWllczpGaW5kRmlyc3RDaGlsZCgiVXJiYW4iKSBvciBnYW1lLldvcmtzcGFjZS5FbmVtaWVzOkZpbmRGaXJzdENoaWxkKCJEaWFibG8iKSBvciBnYW1lLlJlcGxpY2F0ZWRTdG9yYWdlOkZpbmRGaXJzdENoaWxkKCJEZWFuZHJlIikgb3IgZ2FtZS5SZXBsaWNhdGVkU3RvcmFnZTpGaW5kRmlyc3RDaGlsZCgiVXJiYW4iKSBvciBnYW1lLlJlcGxpY2F0ZWRTdG9yYWdlOkZpbmRGaXJzdENoaWxkKCJEaWFibG8iKSkgdGhlbgp3YWl0KDEwKQpIb3AoKQplbmQKZW5kCmVuZApsb2NhbCBFbGl0ZV9IdW50ZXJfU3RhdHVzID0gcGFnZTE6TGFiZWwoIlN0YXR1cyA6IE4vUSIpCnRhc2suc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB0YXNrLndhaXQoKSBkbwpwY2FsbChmdW5jdGlvbigpCmlmIGdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKTpGaW5kRmlyc3RDaGlsZCgiRGlhYmxvIikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpOkZpbmRGaXJzdENoaWxkKCJEZWFuZHJlIikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpOkZpbmRGaXJzdENoaWxkKCJVcmJhbiIpIG9yIGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpGaW5kRmlyc3RDaGlsZCgiRGlhYmxvIikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkZpbmRGaXJzdENoaWxkKCJEZWFuZHJlIikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkZpbmRGaXJzdENoaWxkKCJVcmJhbiIpIHRoZW4KRWxpdGVfSHVudGVyX1N0YXR1czpTZXQoIlN0YXR1cyA6IPCfn6JcbuC4quC4luC4suC4meC4sCIpCmVsc2UKRWxpdGVfSHVudGVyX1N0YXR1czpTZXQoIlN0YXR1cyA6IPCflLRcbuC4quC4luC4suC4meC4sCIpCmVuZAplbmQpCmVuZAplbmQpCmxvY2FsIEVsaXRlUHJvZ3Jlc3MgPSBwYWdlMTpMYWJlbCgiIikKc3Bhd24oZnVuY3Rpb24oKQpwY2FsbChmdW5jdGlvbigpCndoaWxlIHRhc2sud2FpdCgpIGRvCkVsaXRlUHJvZ3Jlc3M6U2V0KCJLaWxsZWQgOiAiIC4uIGdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkVsaXRlSHVudGVyIiwgIlByb2dyZXNzIikpCmVuZAplbmQpCmVuZCkKcGFnZTE6VG9nZ2xlKCJBdXRvIEVsaXRlSHVudGVyIEhvcFxu4Lit4Lit4LmC4LiV4LmJ4LiV4Li1IOC4reC4teC4peC4tOC4l+C4ruC4seC4meC5gOC4leC4reC4o+C5jCDguKLguYnguLLguKLguYDguIvguLTguJ8iLCBfRy5BdXRvRWxpdGVIdW50ZXJIb3AsIGZ1bmN0aW9uKHZhbHVlKQpfRy5BdXRvRWxpdGVIdW50ZXJIb3AgPSB2YWx1ZQpFbGl0ZSgpCmlmIHZhbHVlID09IGZhbHNlIHRoZW4KdG9UYXJnZXQoZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSkKZW5kCmVuZCkKcGFnZTE6VG9nZ2xlKCJBdXRvIEVsaXRlSHVudGVyXG7guK3guK3guYLguJXguYnguJXguLUg4Lit4Li14Lil4Li04LiX4Liu4Lix4LiZ4LmA4LiV4Lit4Lij4LmMIiwgX0cuQXV0b0VsaXRlSHVudGVyLGZ1bmN0aW9uKHZhbHVlKQpfRy5BdXRvRWxpdGVIdW50ZXIgPSB2YWx1ZQpFbGl0ZSgpCmlmIHZhbHVlID09IGZhbHNlIHRoZW4KdG9UYXJnZXQoZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSkKZW5kCmVuZCkKcGFnZTE6VG9nZ2xlKCJBdXRvIENhc3RsZVJhaWRcbuC4reC4reC5guC4leC5ieC4leC4teC5guC4iOC4o+C5gOC4geC4suC4sOC4geC4peC4suC4hyIsIF9HLkF1dG9DYXN0bGVSYWlkLCBmdW5jdGlvbih2YWx1ZSkKX0cuQXV0b0Nhc3RsZVJhaWQgPSB2YWx1ZQppZiB2YWx1ZSA9PSBmYWxzZSB0aGVuCnRvVGFyZ2V0KGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSkKZW5kCmVuZCkKc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB3YWl0KCkgZG8KcGNhbGwoZnVuY3Rpb24oKQppZiBfRy5BdXRvQ2FzdGxlUmFpZCB0aGVuCmlmIChDRnJhbWUubmV3KC01MTE4LjQ4NjgyLCAzMTQuNTQxMjksIC0yOTU4LjY0NDA0LCAtMC4zODcyMzIxMjUsIDEuODE1MDc4NThlLTA4LCAwLjkyMTk4MjIyOSwgLTcuNTQzODg5MDdlLTA4LCAxLCAtNS4xMzcwOTk5OWUtMDgsIC0wLjkyMTk4MjIyOSwgLTguOTQ0NTgxOTZlLTA4LCAtMC4zODcyMzIxMjUpLlBvc2l0aW9uIC0gZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLk1hZ25pdHVkZSA8PSAyMDAwIHRoZW4KZm9yIGksdiBpbiBwYWlycyhnYW1lLldvcmtzcGFjZS5FbmVtaWVzOkdldENoaWxkcmVuKCkpIGRvCmlmIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkIikgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKSBhbmQgdi5IdW1hbm9pZC5IZWFsdGggPiAwIGFuZCAodi5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uLWdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKS5tYWduaXR1ZGUgPD0gMTAwMCB0aGVuCnJlcGVhdCB3YWl0KCkKUG9zTW9uID0gdi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZQpFcXVpcFdlYXBvbihfRy5TZWxlY3RXZWFwb24pCnYuSHVtYW5vaWRSb290UGFydC5TaXplID0gVmVjdG9yMy5uZXcoNjAsIDYwLCA2MCkKQnJpbmdNb2IgPSB0cnVlCnRvVGFyZ2V0KHYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgKiBNZXRob2RGYXJtKQp1bnRpbCBub3QgX0cuQXV0b0Nhc3RsZVJhaWQgb3Igbm90IHYuUGFyZW50IG9yIHYuSHVtYW5vaWQuSGVhbHRoIDw9IDAKQnJpbmdNb2IgPSBmYWxzZQplbmQKZW5kCmVsc2UKaWYgKENGcmFtZS5uZXcoLTUxMTguNDg2ODIsIDMxNC41NDEyOSwgLTI5NTguNjQ0MDQsIC0wLjM4NzIzMjEyNSwgMS44MTUwNzg1OGUtMDgsIDAuOTIxOTgyMjI5LCAtNy41NDM4ODkwN2UtMDgsIDEsIC01LjEzNzA5OTk5ZS0wOCwgLTAuOTIxOTgyMjI5LCAtOC45NDQ1ODE5NmUtMDgsIC0wLjM4NzIzMjEyNSkuUG9zaXRpb24gLSBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikuTWFnbml0dWRlIDw9IDIwMDAgdGhlbgpmb3IgaSx2IGluIHBhaXJzKGdhbWUuUmVwbGljYXRlZFN0b3JhZ2U6R2V0Q2hpbGRyZW4oKSkgZG8KaWYgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpIGFuZCB2Lkh1bWFub2lkLkhlYWx0aCA+IDAgYW5kICh2Lkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24tZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLm1hZ25pdHVkZSA8PSAxMDAwIHRoZW4KdG9UYXJnZXQodi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSAqIE1ldGhvZEZhcm0pCmVuZAplbmQKZW5kCnRvVGFyZ2V0KENGcmFtZS5uZXcoLTUxMTguNDg2ODIsIDMxNC41NDEyOSwgLTI5NTguNjQ0MDQsIC0wLjM4NzIzMjEyNSwgMS44MTUwNzg1OGUtMDgsIDAuOTIxOTgyMjI5LCAtNy41NDM4ODkwN2UtMDgsIDEsIC01LjEzNzA5OTk5ZS0wOCwgLTAuOTIxOTgyMjI5LCAtOC45NDQ1ODE5NmUtMDgsIC0wLjM4NzIzMjEyNSkpCmVuZAplbmQKZW5kKQplbmQKZW5kKQpsb2NhbCBjb3VudF9udW1iZXIgPSAwCmxvY2FsIGNvdW50X3N0YWNrID0gcGFnZTE6TGFiZWwoJ0JvbmUgOiAnIC4uIGNvdW50X251bWJlciwgdHJ1ZSkKc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB0YXNrLndhaXQoKSBkbwpsb2NhbCBib25lU3RhdHVzID0gZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQm9uZXMiLCAiQ2hlY2siKQpjb3VudF9zdGFjazpTZXQoJ0JvbmUgOiAnIC4uIGJvbmVTdGF0dXMpCndhaXQoMSkKZW5kCmVuZCkKcGFnZTE6VG9nZ2xlKCJBdXRvIEZhcm1Cb25lXG7guJ/guLLguKPguYzguKHguIHguKPguLDguJTguLnguIEiLCBfRy5TZXR0aW5ncy5BdXRvRmFybUJvbmUgLCBmdW5jdGlvbih2YWx1ZSkKX0cuQXV0b0Zhcm1Cb25lICA9IHZhbHVlCl9HLlNldHRpbmdzLkF1dG9GYXJtQm9uZSA9IHZhbHVlClNhdmVTZXR0aW5ncygpCmlmIHZhbHVlID09IGZhbHNlIHRoZW4KdGFzay53YWl0KCkKdG9UYXJnZXQoZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lKQp0YXNrLndhaXQoKQplbmQKZW5kKQpwYWdlMTpUb2dnbGUoIkF1dG8gUmFuZG9tQm9uZVxu4Liq4Li44LmI4Lih4LiB4Lij4Liw4LiU4Li54LiBIiwgX0cuQXV0b1JhbmRvbUJvbmUsIGZ1bmN0aW9uKHZhbHVlKQpfRy5BdXRvUmFuZG9tQm9uZSA9IHZhbHVlCmVuZCkKc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB3YWl0KC4xKSBkbwppZiBfRy5BdXRvUmFuZG9tQm9uZSB0aGVuCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkJvbmVzIiwgIkJ1eSIsIDEsIDEpCmVuZAplbmQKZW5kKQpzcGF3bihmdW5jdGlvbigpCmdhbWU6R2V0U2VydmljZSgiUnVuU2VydmljZSIpLkhlYXJ0YmVhdDpDb25uZWN0KGZ1bmN0aW9uKCkKcGNhbGwoZnVuY3Rpb24oKQpmb3IgaSx2IGluIHBhaXJzKGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpHZXRDaGlsZHJlbigpKSBkbwppZiBfRy5CcmluZ01vYiBhbmQgX0cuQXV0b0Zhcm1Cb25lIGFuZCBTdGFydE1hZ25ldEJvbmVNb24gYW5kICh2Lk5hbWUgPT0gIlJlYm9ybiBTa2VsZXRvbiIgb3Igdi5OYW1lID09ICJMaXZpbmcgWm9tYmllIiBvciB2Lk5hbWUgPT0gIkRlbW9uaWMgU291bCIgb3Igdi5OYW1lID09ICJQb3Nlc3NlZCBNdW1teSIpIGFuZCAodi5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uIC0gUG9zTW9uQm9uZS5Qb3NpdGlvbikubWFnbml0dWRlIDw9IDEwMDAgdGhlbgp2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lID0gUG9zTW9uQm9uZQp2Lkh1bWFub2lkUm9vdFBhcnQuQ2FuQ29sbGlkZSA9IGZhbHNlCnYuSHVtYW5vaWQuSnVtcFBvd2VyID0gMAp2Lkh1bWFub2lkLldhbGtTcGVlZCA9IDAKdi5IdW1hbm9pZFJvb3RQYXJ0LlNpemUgPSBWZWN0b3IzLm5ldyg1MCw1MCw1MCkKaWYgdi5IdW1hbm9pZDpGaW5kRmlyc3RDaGlsZCgiQW5pbWF0b3IiKSB0aGVuCnYuSHVtYW5vaWQuQW5pbWF0b3I6RGVzdHJveSgpCmVuZApzZXRoaWRkZW5wcm9wZXJ0eShnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIsICJTaW11bGF0aW9uUmFkaXVzIiwgIG1hdGguaHVnZSkKZW5kCmVuZAplbmQpCmVuZCkKZW5kKQpsb2NhbCBOdW1iZXIyID0gMQpsb2NhbCBCb25lVGFiZWwgPSB7ClsiTW9uIl0gPSB7IlJlYm9ybiBTa2VsZXRvbiIsIkRlbW9uaWMgU291bCIsIkxpdmluZyBab21iaWUiLCJQb3Nlc3NlZCBNdW1teSJ9LApbIkJvc3MiXSA9IHsiU291bCBSZWFwZXIifSwKWyJJdGVtIl0gPSAiSGFsbG93IEVzc2VuY2UiLAp9CmxvY2FsIFNldENGYXJtZUJvbmUgPSAxCmZ1bmN0aW9uIEdldEJvbmVfQ0ZyYW1lX01vbigpCmxvY2FsIG1hdGNoaW5nQ0ZyYW1lcyA9IHt9CmZvciBfLCBNb24gaW4gaXBhaXJzKEJvbmVUYWJlbFsiTW9uIl0pIGRvCmxvY2FsIHJlc3VsdCA9IE1vbjpnc3ViKCJMdi4gIiwgIiIpOmdzdWIoIlslWyVdXSIsICIiKTpnc3ViKCIlZCsiLCAiIik6Z3N1YigiJXMrIiwgIiIpCmZvciBfLCB2IGluIGlwYWlycyhnYW1lLndvcmtzcGFjZS5FbmVteVNwYXduczpHZXRDaGlsZHJlbigpKSBkbwppZiB2Lk5hbWUgPT0gcmVzdWx0IHRoZW4KdGFibGUuaW5zZXJ0KG1hdGNoaW5nQ0ZyYW1lcywgdi5DRnJhbWUpCmVuZAplbmQKZW5kCnJldHVybiBtYXRjaGluZ0NGcmFtZXMKZW5kCnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgd2FpdCgpIGRvCnBjYWxsKGZ1bmN0aW9uKCkKaWYgX0cuQXV0b0Zhcm1Cb25lIHRoZW4KZm9yIF8sIF9Cb3NzIGluIGlwYWlycyhCb25lVGFiZWxbIkJvc3MiXSkgZG8KbG9jYWwgX0l0ZW0gPSBCb25lVGFiZWxbIkl0ZW0iXQppZiBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLkVuZW1pZXM6RmluZEZpcnN0Q2hpbGQoX0Jvc3MpIG9yIGdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKTpGaW5kRmlyc3RDaGlsZChfQm9zcykgdGhlbgpmb3IgXywgX3IgaW4gcGFpcnMoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkdldENoaWxkcmVuKCkpIGRvCmlmIHN0cmluZy5maW5kKF9yLk5hbWUsIF9Cb3NzKSB0aGVuCmlmIF9yOkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZCIpIGFuZCBfcjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpIGFuZCBfci5IdW1hbm9pZC5IZWFsdGggPiAwIHRoZW4KcmVwZWF0IHdhaXQoKQpFcXVpcFdlYXBvbihfRy5TZWxlY3RXZWFwb24pCl9yLkh1bWFub2lkUm9vdFBhcnQuU2l6ZSA9IFZlY3RvcjMubmV3KDYwLCA2MCwgNjApCkJyaW5nTW9iID0gdHJ1ZQp0b1RhcmdldChfci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSAqIE1ldGhvZEZhcm0pCmlmIChfci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZS5Qb3NpdGlvbiAtIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKS5NYWduaXR1ZGUgPD0gNTAgdGhlbgpfRy5GYXN0QXR0YWNrID0gdHJ1ZQplbmQKdW50aWwgbm90IF9HLkF1dG9GYXJtQm9uZSBvciBfci5IdW1hbm9pZC5IZWFsdGggPD0gMCBvciBub3QgX3IuUGFyZW50IG9yIF9yLkh1bWFub2lkLkhlYWx0aCA8PSAwCkJyaW5nTW9iID0gZmFsc2UKZW5kCmVuZAplbmQKZWxzZQppZiBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZChfSXRlbSkgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKF9JdGVtKSB0aGVuCkVxdWlwV2VhcG9uKF9JdGVtKQp0b1RhcmdldCh3b3Jrc3BhY2UuTWFwWyJIYXVudGVkIENhc3RsZSJdLlN1bW1vbmVyLkRldGVjdGlvbi5DRnJhbWUpCmVsc2UKZm9yIF8sIF9Nb24gaW4gbmV4dCwgQm9uZVRhYmVsWyJNb24iXSBkbwppZiBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLkVuZW1pZXM6RmluZEZpcnN0Q2hpbGQoIlJlYm9ybiBTa2VsZXRvbiIpIG9yIGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpGaW5kRmlyc3RDaGlsZCgiTGl2aW5nIFpvbWJpZSIpIG9yIGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpGaW5kRmlyc3RDaGlsZCgiRGVtb25pYyBTb3VsIikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkZpbmRGaXJzdENoaWxkKCJQb3Nlc3NlZCBNdW1teSIpIHRoZW4KZm9yIGksdiBpbiBwYWlycyhnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLkVuZW1pZXM6R2V0Q2hpbGRyZW4oKSkgZG8KaWYgc3RyaW5nLmZpbmQodi5OYW1lLCBfTW9uKSB0aGVuCmlmIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkIikgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKSBhbmQgdi5IdW1hbm9pZC5IZWFsdGggPiAwIHRoZW4KcmVwZWF0IHdhaXQoKQpQb3NNb24gPSB2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lCkVxdWlwV2VhcG9uKF9HLlNlbGVjdFdlYXBvbikKdi5IdW1hbm9pZFJvb3RQYXJ0LlNpemUgPSBWZWN0b3IzLm5ldyg2MCwgNjAsIDYwKQpCcmluZ01vYiA9IHRydWUKdG9UYXJnZXQodi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSAqIE1ldGhvZEZhcm0pCmlmICh2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lLlBvc2l0aW9uIC0gZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLk1hZ25pdHVkZSA8PSA1MCB0aGVuCl9HLkZhc3RBdHRhY2sgPSB0cnVlCmVuZAp1bnRpbCBub3QgX0cuQXV0b0Zhcm1Cb25lIG9yIHYuSHVtYW5vaWQuSGVhbHRoIDw9IDAgb3Igbm90IHYuUGFyZW50IG9yIHYuSHVtYW5vaWQuSGVhbHRoIDw9IDAKZWxzZWlmIChDRnJhbWUubmV3KC05NTEzLjg4NDc3LCAxNzIuMTMwNiwgNjA3My4zNzA2MSwgLTAuOTA2MjIxNjI4LCA3LjU1NTA4NTA5ZS0wOCwgMC40MjI4MDI5ODUsIDUuNzk0MjY4NTNlLTA4LCAxLCAtNS40NDk4MDQ4N2UtMDgsIC0wLjQyMjgwMjk4NSwgLTIuNDg4ODk2OTFlLTA4LCAtMC45MDYyMjE2MjgpLlBvc2l0aW9uIC0gZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLk1hZ25pdHVkZSA+IDEwMDAgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuUGxheWVyR3VpLk1haW4uUXVlc3QuVmlzaWJsZSA9PSBmYWxzZSBhbmQgX0cuQWNlZXRwUXVlc3RCb25lICB0aGVuCmxvY2FsIENGcmFtZU1vbiA9IENGcmFtZS5uZXcoLTk1MTMuODg0NzcsIDE3Mi4xMzA2LCA2MDczLjM3MDYxLCAtMC45MDYyMjE2MjgsIDcuNTU1MDg1MDllLTA4LCAwLjQyMjgwMjk4NSwgNS43OTQyNjg1M2UtMDgsIDEsIC01LjQ0OTgwNDg3ZS0wOCwgLTAuNDIyODAyOTg1LCAtMi40ODg4OTY5MWUtMDgsIC0wLjkwNjIyMTYyOCkKcmVwZWF0IHdhaXQoKSB0b1RhcmdldChDRnJhbWVNb24pIHVudGlsIChDRnJhbWVNb24uUG9zaXRpb24gLSBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikuTWFnbml0dWRlIDw9IDIwIG9yICBub3QgX0cuQXV0b0Zhcm1Cb25lCmVuZAplbmQKZW5kCmVsc2UKaWYgX0cuQXV0b19DRnJhbWUgdGhlbgp0b1RhcmdldChHZXRCb25lX0NGcmFtZV9Nb24oKVtTZXRDRmFybWVCb25lXSAqIE1ldGhvZEZhcm0pCmlmIChHZXRCb25lX0NGcmFtZV9Nb24oKVtTZXRDRmFybWVCb25lXS5Qb3NpdGlvbiAtIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKS5NYWduaXR1ZGUgPD0gNTAgdGhlbgppZiBTZXRDRmFybWVCb25lID09IG5pbCBvciBTZXRDRmFybWVCb25lID09ICcnIHRoZW4KU2V0Q0Zhcm1lQm9uZSA9IDEKZWxzZWlmIFNldENGYXJtZUJvbmUgPj0gI0dldEJvbmVfQ0ZyYW1lX01vbigpIHRoZW4KU2V0Q0Zhcm1lQm9uZSA9IDEKZW5kClNldENGYXJtZUJvbmUgPSAgU2V0Q0Zhcm1lQm9uZSArIDEKd2FpdCgwLjUpCmVuZAplbHNlCmlmIEF0dGFja1JhbmRvbVR5cGVfTW9uQ0ZyYW1lID09IDEgdGhlbgp0b1RhcmdldChHZXRCb25lX0NGcmFtZV9Nb24oKVsxXSAqIENGcmFtZS5uZXcoMCwzMCwyMCkpCmVsc2VpZiBBdHRhY2tSYW5kb21UeXBlX01vbkNGcmFtZSA9PSAyIHRoZW4KdG9UYXJnZXQoR2V0Qm9uZV9DRnJhbWVfTW9uKClbMV0gKiBDRnJhbWUubmV3KDAsMzAsLTIwKSkKZWxzZWlmIEF0dGFja1JhbmRvbVR5cGVfTW9uQ0ZyYW1lID09IDMgdGhlbgp0b1RhcmdldChHZXRCb25lX0NGcmFtZV9Nb24oKVsxXSAqIENGcmFtZS5uZXcoMjAsMzAsMCkpCmVsc2VpZiBBdHRhY2tSYW5kb21UeXBlX01vbkNGcmFtZSA9PSA0IHRoZW4KdG9UYXJnZXQoR2V0Qm9uZV9DRnJhbWVfTW9uKClbMV0gKiBDRnJhbWUubmV3KDAsMzAsLTIwKSkKZWxzZWlmIEF0dGFja1JhbmRvbVR5cGVfTW9uQ0ZyYW1lID09IDUgdGhlbgp0b1RhcmdldChHZXRCb25lX0NGcmFtZV9Nb24oKVsxXSAqIENGcmFtZS5uZXcoLTIwLDMwLDApKQplbHNlCnRvVGFyZ2V0KEdldEJvbmVfQ0ZyYW1lX01vbigpWzFdICogQ0ZyYW1lLm5ldygwLDMwLDIwKSkKZW5kCmVuZAplbmQKZW5kCmVuZAplbmQKZW5kCmVuZAplbmQpCmVuZAplbmQpCmxvY2FsIE1vYktpbGxlZExhYmVsID0gcGFnZTE6TGFiZWwoIk5lZWQgdG8ga2lsbCA6IExvYWRpbmcuLi4iLCB0cnVlKQpzcGF3bihmdW5jdGlvbigpCndoaWxlIHRydWUgZG8KcGNhbGwoZnVuY3Rpb24oKQpsb2NhbCBjYWtlU3RhdHVzID0gZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQ2FrZVByaW5jZVNwYXduZXIiKQppZiBzdHJpbmcubGVuKGNha2VTdGF0dXMpID09IDg4IHRoZW4KTW9iS2lsbGVkTGFiZWw6U2V0KCJOZWVkIHRvIGtpbGwgOiAiIC4uIHN0cmluZy5zdWIoY2FrZVN0YXR1cywgMzksIDQxKSkKZWxzZWlmIHN0cmluZy5sZW4oY2FrZVN0YXR1cykgPT0gODcgdGhlbgpNb2JLaWxsZWRMYWJlbDpTZXQoIk5lZWQgdG8ga2lsbCA6ICIgLi4gc3RyaW5nLnN1YihjYWtlU3RhdHVzLCAzOSwgNDApKQplbHNlaWYgc3RyaW5nLmxlbihjYWtlU3RhdHVzKSA9PSA4NiB0aGVuCk1vYktpbGxlZExhYmVsOlNldCgiTmVlZCB0byBraWxsIDogIiAuLiBzdHJpbmcuc3ViKGNha2VTdGF0dXMsIDM5LCAzOSkpCmVsc2UKTW9iS2lsbGVkTGFiZWw6U2V0KCJLYXRha3VyaSBTcGF3bmVkXG7guITguLLguJXguLLguITguLjguKPguLTguYDguIHguLTguJTguYHguKXguYnguKciKQplbmQKZW5kKQp3YWl0KDEpCmVuZAplbmQpCnBhZ2UxOlRvZ2dsZSgiQXV0byBLYXRha3VyaVxu4LiV4Li14LiE4Liy4LiV4Liy4LiE4Li44Lij4Li0IiwgX0cuQXV0b0Nha2VQcmluY2UgLGZ1bmN0aW9uKHZhbHVlKQpfRy5BdXRvQ2FrZVByaW5jZSAgPSB2YWx1ZQppZiB2YWx1ZSA9PSBmYWxzZSB0aGVuCnRvVGFyZ2V0KGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSkKZW5kCmVuZCkKc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB3YWl0KCkgZG8KaWYgX0cuQXV0b0Nha2VQcmluY2UgdGhlbgpwY2FsbChmdW5jdGlvbigpCmlmIGdhbWUuUmVwbGljYXRlZFN0b3JhZ2U6RmluZEZpcnN0Q2hpbGQoIkNha2UgUHJpbmNlIikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkZpbmRGaXJzdENoaWxkKCJDYWtlIFByaW5jZSIpIG9yICBnYW1lLlJlcGxpY2F0ZWRTdG9yYWdlOkZpbmRGaXJzdENoaWxkKCJEb3VnaCBLaW5nIikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkZpbmRGaXJzdENoaWxkKCJEb3VnaCBLaW5nIikgdGhlbgppZiBub3QgZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkZpbmRGaXJzdENoaWxkKCJDYWtlIFByaW5jZSIpIHRoZW4KZm9yIF8seCBpbiBwYWlycyhnYW1lLlJlcGxpY2F0ZWRTdG9yYWdlOkdldENoaWxkcmVuKCkpIGRvCmlmIHguTmFtZSA9PSAiQ2FrZSBQcmluY2UiIG9yIHguTmFtZSA9PSAiRG91Z2ggS2luZyIgdGhlbgppZiAoeC5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZS5Qb3NpdGlvbiAtIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKS5NYWduaXR1ZGUgPiAxMDAwIHRoZW4Kd2FpdCgxLjUpCnRvVGFyZ2V0KENGcmFtZS5uZXcoLTIxNDUuODk3MjIsIDcwLjAwODgyNzIsIC0xMjM5OS42MDE2LCAwLjk5OTk5NzAyLCAxLjU4Mjc2Mzc5ZS0wOCwgMC4wMDI0NTI3Nzg4NiwgLTEuNTc5ODI5NzhlLTA4LCAxLCAtMS4xOTgxMzA1N2UtMDgsIC0wLjAwMjQ1Mjc3ODg2LCAxLjE5NDI1MTk5ZS0wOCwgMC45OTk5OTcwMikpCnJldHVybgplbmQKZW5kCmVuZAplbmQKZm9yIGksdiBpbiBwYWlycyhnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLkVuZW1pZXM6R2V0Q2hpbGRyZW4oKSkgZG8KaWYgdi5OYW1lID09ICJDYWtlIFByaW5jZSIgdGhlbgppZiB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZCIpIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikgYW5kIHYuSHVtYW5vaWQuSGVhbHRoID4gMCB0aGVuCnJlcGVhdCB0YXNrLndhaXQoKQppZiAodi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZS5Qb3NpdGlvbiAtIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKS5NYWduaXR1ZGUgPiAxMDAwIHRoZW4KdG9UYXJnZXQoQ0ZyYW1lLm5ldygtMjE0NS44OTcyMiwgNzAuMDA4ODI3MiwgLTEyMzk5LjYwMTYsIDAuOTk5OTk3MDIsIDEuNTgyNzYzNzllLTA4LCAwLjAwMjQ1Mjc3ODg2LCAtMS41Nzk4Mjk3OGUtMDgsIDEsIC0xLjE5ODEzMDU3ZS0wOCwgLTAuMDAyNDUyNzc4ODYsIDEuMTk0MjUxOTllLTA4LCAwLjk5OTk5NzAyKSkKcmV0dXJuCmVuZApFcXVpcFdlYXBvbihfRy5TZWxlY3RXZWFwb24pCnYuSHVtYW5vaWRSb290UGFydC5TaXplID0gVmVjdG9yMy5uZXcoNjAsIDYwLCA2MCkKQnJpbmdNb2IgPSB0cnVlCnRvVGFyZ2V0KHYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgKiBNZXRob2RGYXJtKQppZiAodi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZS5Qb3NpdGlvbiAtIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKS5NYWduaXR1ZGUgPD0gNTAgdGhlbgpfRy5GYXN0QXR0YWNrID0gdHJ1ZQplbmQKc2V0aGlkZGVucHJvcGVydHkoZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLCJTaW11bGF0aW9uUmFkaXVzIixtYXRoLmh1Z2UpCnVudGlsIG5vdCBfRy5BdXRvQ2FrZVByaW5jZSBvciBub3Qgdi5QYXJlbnQgb3Igdi5IdW1hbm9pZC5IZWFsdGggPD0gMAplbmQKZWxzZQpmb3IgXyx4IGluIHBhaXJzKGdhbWUuUmVwbGljYXRlZFN0b3JhZ2U6R2V0Q2hpbGRyZW4oKSkgZG8KaWYgeC5OYW1lID09ICJDYWtlIFByaW5jZSIgb3IgeC5OYW1lID09ICJEb3VnaCBLaW5nIiB0aGVuCmlmICh4Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lLlBvc2l0aW9uIC0gZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLk1hZ25pdHVkZSA+IDEwMDAgdGhlbgp0b1RhcmdldChDRnJhbWUubmV3KC0yMTQ1Ljg5NzIyLCA3MC4wMDg4MjcyLCAtMTIzOTkuNjAxNiwgMC45OTk5OTcwMiwgMS41ODI3NjM3OWUtMDgsIDAuMDAyNDUyNzc4ODYsIC0xLjU3OTgyOTc4ZS0wOCwgMSwgLTEuMTk4MTMwNTdlLTA4LCAtMC4wMDI0NTI3Nzg4NiwgMS4xOTQyNTE5OWUtMDgsIDAuOTk5OTk3MDIpKQpyZXR1cm4KZW5kCmVuZAplbmQKZW5kCmVuZAplbHNlCmlmIGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpGaW5kRmlyc3RDaGlsZCgiQ2FrZSBQcmluY2UiKSBvciBnYW1lLlJlcGxpY2F0ZWRTdG9yYWdlOkZpbmRGaXJzdENoaWxkKCJDYWtlIFByaW5jZSIpIHRoZW4KZm9yIF8seCBpbiBwYWlycyhnYW1lLlJlcGxpY2F0ZWRTdG9yYWdlOkdldENoaWxkcmVuKCkpIGRvCmlmIHguTmFtZSA9PSAiQ2FrZSBQcmluY2UiIG9yIHguTmFtZSA9PSAiRG91Z2ggS2luZyIgdGhlbgppZiAoeC5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZS5Qb3NpdGlvbiAtIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKS5NYWduaXR1ZGUgPiAxMDAwIHRoZW4KdG9UYXJnZXQoQ0ZyYW1lLm5ldygtMjE0NS44OTcyMiwgNzAuMDA4ODI3MiwgLTEyMzk5LjYwMTYsIDAuOTk5OTk3MDIsIDEuNTgyNzYzNzllLTA4LCAwLjAwMjQ1Mjc3ODg2LCAtMS41Nzk4Mjk3OGUtMDgsIDEsIC0xLjE5ODEzMDU3ZS0wOCwgLTAuMDAyNDUyNzc4ODYsIDEuMTk0MjUxOTllLTA4LCAwLjk5OTk5NzAyKSkKcmV0dXJuCmVuZAplbmQKZW5kCmVsc2UKaWYgZ2FtZS5Xb3Jrc3BhY2UuRW5lbWllczpGaW5kRmlyc3RDaGlsZCgiQmFraW5nIFN0YWZmIikgb3IgZ2FtZS5Xb3Jrc3BhY2UuRW5lbWllczpGaW5kRmlyc3RDaGlsZCgiSGVhZCBCYWtlciIpIG9yIGdhbWUuV29ya3NwYWNlLkVuZW1pZXM6RmluZEZpcnN0Q2hpbGQoIkNha2UgR3VhcmQiKSBvciBnYW1lLldvcmtzcGFjZS5FbmVtaWVzOkZpbmRGaXJzdENoaWxkKCJDb29raWUgQ3JhZnRlciIpICB0aGVuCmZvciBpLHYgaW4gcGFpcnMoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkdldENoaWxkcmVuKCkpIGRvCmlmICh2Lk5hbWUgPT0gIkJha2luZyBTdGFmZiIgb3Igdi5OYW1lID09ICJIZWFkIEJha2VyIiBvciB2Lk5hbWUgPT0gIkNha2UgR3VhcmQiIG9yIHYuTmFtZSA9PSAiQ29va2llIENyYWZ0ZXIiKSBhbmQgdi5IdW1hbm9pZC5IZWFsdGggPiAwIHRoZW4KcmVwZWF0IHdhaXQoKQpQb3NNb24gPSB2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lCkVxdWlwV2VhcG9uKF9HLlNlbGVjdFdlYXBvbikKdi5IdW1hbm9pZFJvb3RQYXJ0LlNpemUgPSBWZWN0b3IzLm5ldyg2MCwgNjAsIDYwKQpCcmluZ01vYiA9IHRydWUKdG9UYXJnZXQodi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSAqIE1ldGhvZEZhcm0pCmlmICh2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lLlBvc2l0aW9uIC0gZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLk1hZ25pdHVkZSA8PSA1MCB0aGVuCl9HLkZhc3RBdHRhY2sgPSB0cnVlCmVuZAp1bnRpbCBfRy5BdXRvQ2FrZVByaW5jZSA9PSBmYWxzZSBvciBnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIik6RmluZEZpcnN0Q2hpbGQoIkNha2UgUHJpbmNlIikgb3Igbm90IHYuUGFyZW50IG9yIHYuSHVtYW5vaWQuSGVhbHRoIDw9IDAKZW5kCmVuZAplbHNlCkJyaW5nTW9iID0gZmFsc2UKdG9UYXJnZXQoR2V0Q2FrZV9DRnJhbWVfTW9uKCkgKiBNZXRob2RGYXJtKQp3YWl0KDAuNSkKZW5kCmVuZAplbmQKZW5kKQplbmQKZW5kCmVuZCkKZW5kCnBhZ2UxOlNlcGVyYXRvcigiTWF0ZXJpYWwv4Lin4Lix4Liq4LiU4Li4IikKcGFnZTE6RHJvcGRvd24oIlNlbGVjdCBNYXRlcmlhbFxu4LmA4Lil4Li34Lit4LiB4Lin4Lix4Liq4LiU4Li4IixBbGxNYXRlcmlhbCwgZnVuY3Rpb24odmFsdWUpClNlbGVjdE1vZGVNYXRlcmlhbCA9IHZhbHVlCmVuZCkKcGFnZTE6VG9nZ2xlKCJBdXRvIEZhcm1NYXRlcmlhbFxu4Lif4Liy4Lij4LmM4Lih4Lin4Lix4Liq4LiU4Li4IixBdXRvRmFybU1hdGVyaWFsLCBmdW5jdGlvbih2YWx1ZSkKQXV0b0Zhcm1NYXRlcmlhbCA9IHZhbHVlCnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgd2FpdCgpIGRvCmlmIEF1dG9GYXJtTWF0ZXJpYWwgdGhlbgpwY2FsbChmdW5jdGlvbigpCmlmIChTZWxlY3RNb2RlTWF0ZXJpYWx+PSIiKSB0aGVuCkNoZWNrTWF0ZXJpYWwoU2VsZWN0TW9kZU1hdGVyaWFsKQppZiBDdXN0b21GaW5kRmlyc3RDaGlsZChNYXRlcmlhbE1vYikgdGhlbgpmb3IgdjAsdjEgaW4gcGFpcnMoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkdldENoaWxkcmVuKCkpIGRvCmlmIChBdXRvRmFybU1hdGVyaWFsIGFuZCB0YWJsZS5maW5kKE1hdGVyaWFsTW9iLHYxLk5hbWUpIGFuZCB2MTpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpIGFuZCB2MTpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgKHYxLkh1bWFub2lkLkhlYWx0aCA+IDApKSB0aGVuCnJlcGVhdCB0YXNrLndhaXQoKQpFcXVpcFdlYXBvbihfRy5TZWxlY3RXZWFwb24pCmlmIG5vdCBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJIYXNCdXNvIikgdGhlbgpsb2NhbCBhcmdzID0gewpbMV0gPSAiQnVzbyIKfQpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKHVucGFjayhhcmdzKSkKZW5kClBvc01vbiA9IHYxLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lCnYxLkh1bWFub2lkUm9vdFBhcnQuQ2FuQ29sbGlkZSA9IGZhbHNlCnYxLkh1bWFub2lkLldhbGtTcGVlZCA9IDAKdjEuSGVhZC5DYW5Db2xsaWRlID0gZmFsc2UKdjEuSHVtYW5vaWRSb290UGFydC5TaXplID0gVmVjdG9yMy5uZXcoODAsIDgwLCA4MCkKdjEuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTEpCnYxLkh1bWFub2lkOkNoYW5nZVN0YXRlKDE0KQp2MS5IdW1hbm9pZDpDaGFuZ2VTdGF0ZSgxNikKQnJpbmdNb2IgPSB0cnVlCkZhc3RBdHRhY2sgPSB0cnVlCnRvVGFyZ2V0KHYxLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lICogTWV0aG9kRmFybSkKaWYgbm90IEZhc3RBdHRhY2sgdGhlbgpnYW1lOkdldFNlcnZpY2UgJ1ZpcnR1YWxVc2VyJzpDYXB0dXJlQ29udHJvbGxlcigpCmdhbWU6R2V0U2VydmljZSAnVmlydHVhbFVzZXInOkJ1dHRvbjFEb3duKFZlY3RvcjIubmV3KDEyODAsIDY3MikpCmVuZApQb3NNb24gPSB2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lCnVudGlsIG5vdCBDdXN0b21GaW5kRmlyc3RDaGlsZChNYXRlcmlhbE1vYikgb3Igbm90IEF1dG9GYXJtTWF0ZXJpYWwgb3IgKHYxLkh1bWFub2lkLkhlYWx0aCA8PSAwKSBvciBub3QgdjEuUGFyZW50CkZhc3RBdHRhY2sgPSBmYWxzZTsKZW5kCmVuZAplbHNlCkZhc3RBdHRhY2sgPSBmYWxzZQp0b1RhcmdldChDRnJhbWVNb24pCmVuZAplbmQKZW5kKQplbHNlCmJyZWFrOwplbmQKZW5kCmVuZCkKZW5kKQpwYWdlMjpTZXBlcmF0b3IoIuKame+4jyIpCldlYXBvbiA9IHsiTWVsZWUiLCJTd29yZCIsIkZydWl0In0KcGFnZTI6RHJvcGRvd24oIlNlbGVjdCBXZWFwb25cbuC5gOC4peC4t+C4reC4geC4reC4suC4p+C4uOC4mCIsV2VhcG9uLCBmdW5jdGlvbih2YWx1ZSkKU2VsZWN0V2VhcG9uID0gdmFsdWUKZW5kKQp0YXNrLnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgd2FpdCgpIGRvCnBjYWxsKGZ1bmN0aW9uKCkKaWYgU2VsZWN0V2VhcG9uID09ICJNZWxlZSIgdGhlbgpmb3IgaSwgdiBpbiBwYWlycyhnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQmFja3BhY2s6R2V0Q2hpbGRyZW4oKSkgZG8KaWYgdi5Ub29sVGlwID09ICJNZWxlZSIgdGhlbgppZiBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQodG9zdHJpbmcodi5OYW1lKSkgdGhlbgpfRy5TZWxlY3RXZWFwb24gPSB2Lk5hbWUKZW5kCmVuZAplbmQKZWxzZWlmIFNlbGVjdFdlYXBvbiA9PSAiU3dvcmQiIHRoZW4KZm9yIGksIHYgaW4gcGFpcnMoZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkJhY2twYWNrOkdldENoaWxkcmVuKCkpIGRvCmlmIHYuVG9vbFRpcCA9PSAiU3dvcmQiIHRoZW4KaWYgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKHRvc3RyaW5nKHYuTmFtZSkpIHRoZW4KX0cuU2VsZWN0V2VhcG9uID0gdi5OYW1lCmVuZAplbmQKZW5kCmVsc2VpZiBTZWxlY3RXZWFwb24gPT0gIkZydWl0IiB0aGVuCmZvciBpLCB2IGluIHBhaXJzKGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5CYWNrcGFjazpHZXRDaGlsZHJlbigpKSBkbwppZiB2LlRvb2xUaXAgPT0gIkJsb3ggRnJ1aXQiIHRoZW4KaWYgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKHRvc3RyaW5nKHYuTmFtZSkpIHRoZW4KX0cuU2VsZWN0V2VhcG9uID0gdi5OYW1lCmVuZAplbmQKZW5kCmVsc2UKZm9yIGkgLHYgaW4gcGFpcnMoZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkJhY2twYWNrOkdldENoaWxkcmVuKCkpIGRvCmlmIHYuVG9vbFRpcCA9PSAiTWVsZWUiIHRoZW4KaWYgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKHRvc3RyaW5nKHYuTmFtZSkpIHRoZW4KX0cuU2VsZWN0V2VhcG9uID0gdi5OYW1lCmVuZAplbmQKZW5kCmVuZAplbmQpCmVuZAplbmQpCmxvY2FsIE1ldGhvZCA9IHsiVXBwZXIiLCJCZWhpbmQiLCJCZWxvdyJ9CmlmIF9HLk1ldGhvZCA9PSBuaWwgdGhlbgpfRy5NZXRob2QgPSAiVXBwZXIiCmVuZAppZiAgX0cuRGlzdGFuY2VBdXRvRmFybSA9PSBuaWwgdGhlbgpfRy5EaXN0YW5jZUF1dG9GYXJtID0gMzAKZW5kCnBhZ2UyOkRyb3Bkb3duKCJTZWxlY3QgTWV0aG9kXG7guYDguKXguLfguK3guIHguJXguLPguYHguKvguJnguYjguIfguIHguLLguKPguJ/guLLguKPguYzguKEiLE1ldGhvZCwgZnVuY3Rpb24odmFsdWUpCl9HLk1ldGhvZCA9IHZhbHVlCmVuZCkKcGFnZTI6U2xpZGVyKCJTZWxlY3QgRGlzdGFuY2VcbuC5gOC4peC4t+C4reC4geC4o+C4sOC4ouC4sOC4geC4suC4o+C4n+C4suC4o+C5jOC4oSIsMSw4MCwzMCxmdW5jdGlvbih2YWx1ZSkKX0cuRGlzdGFuY2VBdXRvRmFybSA9IHZhbHVlCmVuZCkKdGFzay5zcGF3bihmdW5jdGlvbigpCndoaWxlIHRhc2sud2FpdCgwLjEpIGRvCnBjYWxsKGZ1bmN0aW9uKCkKbG9jYWwgcmFuZG9tT2Zmc2V0WCA9IG1hdGgucmFuZG9tKC0zMCwgMzApCmxvY2FsIHJhbmRvbU9mZnNldFkgPSBtYXRoLnJhbmRvbSgtMzAsIDMwKQpsb2NhbCByYW5kb21PZmZzZXRaID0gbWF0aC5yYW5kb20oLTMwLCAzMCkKaWYgX0cuTWV0aG9kID09ICJCZWhpbmQiIHRoZW4KTWV0aG9kRmFybSA9IENGcmFtZS5uZXcocmFuZG9tT2Zmc2V0WCwgcmFuZG9tT2Zmc2V0WSwgX0cuRGlzdGFuY2VBdXRvRmFybSArIHJhbmRvbU9mZnNldFopCmVsc2VpZiBfRy5NZXRob2QgPT0gIkJlbG93IiB0aGVuCk1ldGhvZEZhcm0gPSBDRnJhbWUubmV3KHJhbmRvbU9mZnNldFgsIC0oX0cuRGlzdGFuY2VBdXRvRmFybSArIHJhbmRvbU9mZnNldFkpLCByYW5kb21PZmZzZXRaKSAqIENGcmFtZS5BbmdsZXMobWF0aC5yYWQoOTApLCAwLCAwKQplbHNlaWYgX0cuTWV0aG9kID09ICJVcHBlciIgdGhlbgpNZXRob2RGYXJtID0gQ0ZyYW1lLm5ldyhyYW5kb21PZmZzZXRYLCBfRy5EaXN0YW5jZUF1dG9GYXJtICsgcmFuZG9tT2Zmc2V0WSwgcmFuZG9tT2Zmc2V0WikgKiBDRnJhbWUuQW5nbGVzKG1hdGgucmFkKDApLCAwLCAwKQplbHNlCk1ldGhvZEZhcm0gPSBDRnJhbWUubmV3KHJhbmRvbU9mZnNldFgsIF9HLkRpc3RhbmNlQXV0b0Zhcm0gKyByYW5kb21PZmZzZXRZLCByYW5kb21PZmZzZXRaKQplbmQKZW5kKQplbmQKZW5kKQpwYWdlMjpUb2dnbGUoIkF1dG8gVXNlSGFraVxu4Lit4Lit4LmC4LiV4LmJ4LmA4Lib4Li04LiU4Liu4Liy4LiE4Li0IiwgdHJ1ZSwgZnVuY3Rpb24odmFsdWUpCl9HLkF1dG9IYWtpID0gdmFsdWUKZW5kKQp0YXNrLnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgdGFzay53YWl0KCkgZG8KcGNhbGwoZnVuY3Rpb24oKQppZiBfRy5BdXRvSGFraSB0aGVuCmlmIG5vdCBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJIYXNCdXNvIikgdGhlbgpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJCdXNvIikKZW5kCmVuZAplbmQpCmVuZAplbmQpCnBhZ2UyOlRvZ2dsZSgiQXV0byBVc2VIYWtpT2JzZXJ2YXRpb25cbuC4reC4reC5guC4leC5ieC5gOC4m+C4tOC4lOC4ruC4suC4hOC4tOC4quC4seC4h+C5gOC4geC4lSIsIHRydWUsIGZ1bmN0aW9uKHZhbHVlKQpfRy5BdXRvS2VuID0gdmFsdWUKZW5kKQpzcGF3bihmdW5jdGlvbigpCndoaWxlIHdhaXQoKSBkbwppZiBfRy5BdXRvS2VuIHRoZW4KbG9jYWwgYXJncyA9IHsKWzFdID0gIktlbiIsClsyXSA9IHRydWUKfQpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRTpGaXJlU2VydmVyKHVucGFjayhhcmdzKSkKZW5kCmVuZAplbmQpCnBhZ2UyOlRvZ2dsZSgiV2hpdGUgU2NyZWVuXG7guIjguK3guILguLLguKciLCBmYWxzZSwgZnVuY3Rpb24odmFsdWUpCl9HLldoaXRlU2NyZWVuID0gdmFsdWUKaWYgdmFsdWUgdGhlbgpnYW1lOkdldFNlcnZpY2UoIlJ1blNlcnZpY2UiKTpTZXQzZFJlbmRlcmluZ0VuYWJsZWQoZmFsc2UpCmVsc2UKZ2FtZTpHZXRTZXJ2aWNlKCJSdW5TZXJ2aWNlIik6U2V0M2RSZW5kZXJpbmdFbmFibGVkKHRydWUpCmVuZAplbmQpCnBhZ2UyOlRvZ2dsZSgiQmxhY2sgU2NyZWVuXG7guIjguK3guJTguLMiLCBmYWxzZSwgZnVuY3Rpb24odmFsdWUpCl9HLkJsYWNrU2NyZWVuID0gdmFsdWUKaWYgdmFsdWUgdGhlbgpnYW1lOkdldFNlcnZpY2UoIlJ1blNlcnZpY2UiKTpTZXQzZFJlbmRlcmluZ0VuYWJsZWQoZmFsc2UpCmdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLlBsYXllckd1aS5NYWluLkJsYWNrc2NyZWVuLlNpemUgPSBVRGltMi5uZXcoNTAwLCAwLCA1MDAsIDUwMCkKZWxzZQpnYW1lOkdldFNlcnZpY2UoIlJ1blNlcnZpY2UiKTpTZXQzZFJlbmRlcmluZ0VuYWJsZWQodHJ1ZSkKZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuUGxheWVyR3VpLk1haW4uQmxhY2tzY3JlZW4uU2l6ZSA9IFVEaW0yLm5ldygxLCAwLCA1MDAsIDUwMCkKZW5kCmVuZCkKcGFnZTI6VG9nZ2xlKCJIaWRlTm90aWZpY2F0aW9uXG7guIvguYjguK3guJnguILguYnguK3guITguKfguLLguKHguIHguLLguKPguYHguIjguYnguIfguYDguJXguLfguK3guJkiLCBmYWxzZSwgZnVuY3Rpb24odmFsdWUpCmdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLlBsYXllckd1aS5Ob3RpZmljYXRpb25zLkVuYWJsZWQgPSBub3QgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuUGxheWVyR3VpLk5vdGlmaWNhdGlvbnMuRW5hYmxlZAplbmQpCnBhZ2UyOlRvZ2dsZSgiQnJpbmdNb25cbuC4o+C4p+C4oeC4qOC4seC4leC4o+C4uSIsIHRydWUsIGZ1bmN0aW9uKHZhbHVlKQpfRy5CcmluZ01vYiA9IHZhbHVlCmVuZCkKc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB0YXNrLndhaXQoKSBkbwpwY2FsbChmdW5jdGlvbigpCmlmIF9HLkJyaW5nTW9iIHRoZW4KUXVlc3RDaGVjaygpCmZvciBpLHYgaW4gcGFpcnMoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkdldENoaWxkcmVuKCkpIGRvCmlmIF9HLkF1dG9GYXJtIGFuZCBfRy5CcmluZ01vYiBhbmQgdi5OYW1lID09IFF1ZXN0Q2hlY2soKVszXSBhbmQgKFF1ZXN0Q2hlY2soKVszXSA9PSAiRmFjdG9yeSBTdGFmZiIgb3IgUXVlc3RDaGVjaygpWzNdID09ICJNb25rZXkiIG9yIFF1ZXN0Q2hlY2soKVszXSA9PSAiRHJhZ29uIENyZXcgV2FycmlvciIgb3IgUXVlc3RDaGVjaygpWzNdID09ICJEcmFnb24gQ3JldyBBcmNoZXIiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpIGFuZCB2Lkh1bWFub2lkLkhlYWx0aCA+IDAgYW5kICh2Lkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24gLSBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikuTWFnbml0dWRlIDw9IDIyMCB0aGVuCnYuSHVtYW5vaWRSb290UGFydC5TaXplID0gVmVjdG9yMy5uZXcoNTAsNTAsNTApCnYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgPSBQb3NNb24Kdi5IdW1hbm9pZDpDaGFuZ2VTdGF0ZSgxNCkKdi5IdW1hbm9pZFJvb3RQYXJ0LkNhbkNvbGxpZGUgPSBmYWxzZQp2LkhlYWQuQ2FuQ29sbGlkZSA9IGZhbHNlCmlmIHYuSHVtYW5vaWQ6RmluZEZpcnN0Q2hpbGQoIkFuaW1hdG9yIikgdGhlbgp2Lkh1bWFub2lkLkFuaW1hdG9yOkRlc3Ryb3koKQplbmQKc2V0aGlkZGVucHJvcGVydHkoZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIsIlNpbXVsYXRpb25SYWRpdXMiLG1hdGguaHVnZSkKZWxzZWlmIF9HLkF1dG9GYXJtIGFuZCBfRy5CcmluZ01vYiBhbmQgdi5OYW1lID09IFF1ZXN0Q2hlY2soKVszXSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpIGFuZCB2Lkh1bWFub2lkLkhlYWx0aCA+IDAgYW5kICh2Lkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24gLSBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikuTWFnbml0dWRlIDw9IF9HLkJyaW5nTW9kZSB0aGVuCnYuSHVtYW5vaWRSb290UGFydC5TaXplID0gVmVjdG9yMy5uZXcoNTAsNTAsNTApCnYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgPSBQb3NNb24Kdi5IdW1hbm9pZDpDaGFuZ2VTdGF0ZSgxNCkKdi5IdW1hbm9pZFJvb3RQYXJ0LkNhbkNvbGxpZGUgPSBmYWxzZQp2LkhlYWQuQ2FuQ29sbGlkZSA9IGZhbHNlCmlmIHYuSHVtYW5vaWQ6RmluZEZpcnN0Q2hpbGQoIkFuaW1hdG9yIikgdGhlbgp2Lkh1bWFub2lkLkFuaW1hdG9yOkRlc3Ryb3koKQplbmQKc2V0aGlkZGVucHJvcGVydHkoZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIsIlNpbXVsYXRpb25SYWRpdXMiLG1hdGguaHVnZSkKZW5kCmVuZAplbmQKZW5kKQplbmQKZW5kKQpzcGF3bihmdW5jdGlvbigpCndoaWxlIHRhc2sud2FpdCgpIGRvCnBjYWxsKGZ1bmN0aW9uKCkKaWYgX0cuQnJpbmdNb2IgdGhlbgpRdWVzdENoZWNrKCkKZm9yIGksdiBpbiBwYWlycyhnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLkVuZW1pZXM6R2V0Q2hpbGRyZW4oKSkgZG8KaWYgX0cuQXV0b0Zhcm0gYW5kIF9HLkJyaW5nTW9iICBhbmQgdi5OYW1lID09IFF1ZXN0Q2hlY2soKVszXSBhbmQgKFF1ZXN0Q2hlY2soKVszXSA9PSAiRmFjdG9yeSBTdGFmZiIgb3IgUXVlc3RDaGVjaygpWzNdID09ICJNb25rZXkiIG9yIFF1ZXN0Q2hlY2soKVszXSA9PSAiRHJhZ29uIENyZXcgV2FycmlvciIgb3IgUXVlc3RDaGVjaygpWzNdID09ICJEcmFnb24gQ3JldyBBcmNoZXIiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpIGFuZCB2Lkh1bWFub2lkLkhlYWx0aCA+IDAgYW5kICh2Lkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24gLSBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikuTWFnbml0dWRlIDw9IDI1MCB0aGVuCnYuSHVtYW5vaWRSb290UGFydC5TaXplID0gVmVjdG9yMy5uZXcoMTUwLDE1MCwxNTApCnYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgPSBQb3NNb24Kdi5IdW1hbm9pZDpDaGFuZ2VTdGF0ZSgxNCkKdi5IdW1hbm9pZFJvb3RQYXJ0LkNhbkNvbGxpZGUgPSBmYWxzZQp2LkhlYWQuQ2FuQ29sbGlkZSA9IGZhbHNlCmlmIHYuSHVtYW5vaWQ6RmluZEZpcnN0Q2hpbGQoIkFuaW1hdG9yIikgdGhlbgp2Lkh1bWFub2lkLkFuaW1hdG9yOkRlc3Ryb3koKQplbmQKc2V0aGlkZGVucHJvcGVydHkoZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIsIlNpbXVsYXRpb25SYWRpdXMiLG1hdGguaHVnZSkKZWxzZWlmIF9HLkF1dG9GYXJtIGFuZCBfRy5CcmluZ01vYiAgYW5kIHYuTmFtZSA9PSBRdWVzdENoZWNrKClbM10gYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkIikgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKSBhbmQgdi5IdW1hbm9pZC5IZWFsdGggPiAwIGFuZCAodi5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uIC0gZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLk1hZ25pdHVkZSA8PSBfRy5CcmluZ01vZGUgdGhlbgp2Lkh1bWFub2lkUm9vdFBhcnQuU2l6ZSA9IFZlY3RvcjMubmV3KDE1MCwxNTAsMTUwKQp2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lID0gUG9zTW9uCnYuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTQpCnYuSHVtYW5vaWRSb290UGFydC5DYW5Db2xsaWRlID0gZmFsc2UKdi5IZWFkLkNhbkNvbGxpZGUgPSBmYWxzZQppZiB2Lkh1bWFub2lkOkZpbmRGaXJzdENoaWxkKCJBbmltYXRvciIpIHRoZW4Kdi5IdW1hbm9pZC5BbmltYXRvcjpEZXN0cm95KCkKZW5kCnNldGhpZGRlbnByb3BlcnR5KGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLCJTaW11bGF0aW9uUmFkaXVzIixtYXRoLmh1Z2UpCmVuZAppZiBfRy5BdXRvRWN0b3BsYXNtIGFuZCBTdGFydEVjdG9wbGFzbU1hZ25ldCB0aGVuCmlmIHN0cmluZy5maW5kKHYuTmFtZSwgIlNoaXAiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpIGFuZCB2Lkh1bWFub2lkLkhlYWx0aCA+IDAgYW5kICh2Lkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24gLSBFY3RvcGxhc21Nb24uUG9zaXRpb24pLk1hZ25pdHVkZSA8PSBfRy5CcmluZ01vZGUgdGhlbgp2Lkh1bWFub2lkUm9vdFBhcnQuU2l6ZSA9IFZlY3RvcjMubmV3KDUwLDUwLDUwKQp2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lID0gRWN0b3BsYXNtTW9uCnYuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTQpCnYuSHVtYW5vaWRSb290UGFydC5DYW5Db2xsaWRlID0gZmFsc2UKdi5IZWFkLkNhbkNvbGxpZGUgPSBmYWxzZQppZiB2Lkh1bWFub2lkOkZpbmRGaXJzdENoaWxkKCJBbmltYXRvciIpIHRoZW4Kdi5IdW1hbm9pZC5BbmltYXRvcjpEZXN0cm95KCkKZW5kCnNldGhpZGRlbnByb3BlcnR5KGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLCAiU2ltdWxhdGlvblJhZGl1cyIsIG1hdGguaHVnZSkKZW5kCmVuZAppZiBfRy5BdXRvUmVuZ29rdSBhbmQgU3RhcnRSZW5nb2t1TWFnbmV0IHRoZW4KaWYgKHYuTmFtZSA9PSAiU25vdyBMdXJrZXIiIG9yIHYuTmFtZSA9PSAiQXJjdGljIFdhcnJpb3IiKSBhbmQgKHYuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbiAtIFJlbmdva3VNb24uUG9zaXRpb24pLk1hZ25pdHVkZSA8PSBfRy5CcmluZ01vZGUgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkIikgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKSBhbmQgdi5IdW1hbm9pZC5IZWFsdGggPiAwIHRoZW4Kdi5IdW1hbm9pZFJvb3RQYXJ0LlNpemUgPSBWZWN0b3IzLm5ldygxNTAwLDE1MDAsMTUwMCkKdi5IdW1hbm9pZDpDaGFuZ2VTdGF0ZSgxNCkKdi5IdW1hbm9pZFJvb3RQYXJ0LkNhbkNvbGxpZGUgPSBmYWxzZQp2LkhlYWQuQ2FuQ29sbGlkZSA9IGZhbHNlCnYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgPSBSZW5nb2t1TW9uCmlmIHYuSHVtYW5vaWQ6RmluZEZpcnN0Q2hpbGQoIkFuaW1hdG9yIikgdGhlbgp2Lkh1bWFub2lkLkFuaW1hdG9yOkRlc3Ryb3koKQplbmQKc2V0aGlkZGVucHJvcGVydHkoZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIsICJTaW11bGF0aW9uUmFkaXVzIiwgbWF0aC5odWdlKQplbmQKZW5kCmlmIF9HLkF1dG9NdXNrZXRlZXJIYXQgYW5kIFN0YXJ0TWFnbmV0TXVza2V0ZWVyaGF0IHRoZW4KaWYgdi5OYW1lID09ICJGb3Jlc3QgUGlyYXRlIiBhbmQgKHYuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbiAtIE11c2tldGVlckhhdE1vbi5Qb3NpdGlvbikuTWFnbml0dWRlIDw9IF9HLkJyaW5nTW9kZSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpIGFuZCB2Lkh1bWFub2lkLkhlYWx0aCA+IDAgdGhlbgp2Lkh1bWFub2lkUm9vdFBhcnQuU2l6ZSA9IFZlY3RvcjMubmV3KDUwLDUwLDUwKQp2Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDE0KQp2Lkh1bWFub2lkUm9vdFBhcnQuQ2FuQ29sbGlkZSA9IGZhbHNlCnYuSGVhZC5DYW5Db2xsaWRlID0gZmFsc2UKdi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSA9IE11c2tldGVlckhhdE1vbgppZiB2Lkh1bWFub2lkOkZpbmRGaXJzdENoaWxkKCJBbmltYXRvciIpIHRoZW4Kdi5IdW1hbm9pZC5BbmltYXRvcjpEZXN0cm95KCkKZW5kCnNldGhpZGRlbnByb3BlcnR5KGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLCAiU2ltdWxhdGlvblJhZGl1cyIsIG1hdGguaHVnZSkKZW5kCmVuZAppZiBfRy5BdXRvT2JzZXJ2YXRpb25IYWtpVjIgYW5kIE1hbmduZXRjaXR6ZW5tb24gdGhlbgppZiB2Lk5hbWUgPT0gIkZvcmVzdCBQaXJhdGUiIGFuZCAodi5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uIC0gTXVza2V0ZWVySGF0TW9uLlBvc2l0aW9uKS5NYWduaXR1ZGUgPD0gX0cuQnJpbmdNb2RlIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZCIpIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikgYW5kIHYuSHVtYW5vaWQuSGVhbHRoID4gMCB0aGVuCnYuSHVtYW5vaWRSb290UGFydC5TaXplID0gVmVjdG9yMy5uZXcoNTAsNTAsNTApCnYuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTQpCnYuSHVtYW5vaWRSb290UGFydC5DYW5Db2xsaWRlID0gZmFsc2UKdi5IZWFkLkNhbkNvbGxpZGUgPSBmYWxzZQp2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lID0gUG9zSGVlCmlmIHYuSHVtYW5vaWQ6RmluZEZpcnN0Q2hpbGQoIkFuaW1hdG9yIikgdGhlbgp2Lkh1bWFub2lkLkFuaW1hdG9yOkRlc3Ryb3koKQplbmQKc2V0aGlkZGVucHJvcGVydHkoZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIsICJTaW11bGF0aW9uUmFkaXVzIiwgbWF0aC5odWdlKQplbmQKZW5kCmlmIF9HLkF1dG9fRXZvUmFjZSBhbmQgU3RhcnRFdm9NYWduZXQgdGhlbgppZiB2Lk5hbWUgPT0gIlpvbWJpZSIgYW5kICh2Lkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24gLSBQb3NNb25Fdm8uUG9zaXRpb24pLk1hZ25pdHVkZSA8PSBfRy5CcmluZ01vZGUgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkIikgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKSBhbmQgdi5IdW1hbm9pZC5IZWFsdGggPiAwIHRoZW4Kdi5IdW1hbm9pZFJvb3RQYXJ0LlNpemUgPSBWZWN0b3IzLm5ldyg1MCw1MCw1MCkKdi5IdW1hbm9pZDpDaGFuZ2VTdGF0ZSgxNCkKdi5IdW1hbm9pZFJvb3RQYXJ0LkNhbkNvbGxpZGUgPSBmYWxzZQp2LkhlYWQuQ2FuQ29sbGlkZSA9IGZhbHNlCnYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgPSBQb3NNb25Fdm8KaWYgdi5IdW1hbm9pZDpGaW5kRmlyc3RDaGlsZCgiQW5pbWF0b3IiKSB0aGVuCnYuSHVtYW5vaWQuQW5pbWF0b3I6RGVzdHJveSgpCmVuZApzZXRoaWRkZW5wcm9wZXJ0eShnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllciwgIlNpbXVsYXRpb25SYWRpdXMiLCBtYXRoLmh1Z2UpCmVuZAplbmQKaWYgX0cuQXV0b0JhcnRpbG8gYW5kIEF1dG9CYXJ0aWxvQnJpbmcgdGhlbgppZiB2Lk5hbWUgPT0gIlN3YW4gUGlyYXRlIiBhbmQgKHYuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbiAtIFBvc01vbkJhcnRvLlBvc2l0aW9uKS5NYWduaXR1ZGUgPD0gX0cuQnJpbmdNb2RlIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZCIpIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikgYW5kIHYuSHVtYW5vaWQuSGVhbHRoID4gMCB0aGVuCnYuSHVtYW5vaWRSb290UGFydC5TaXplID0gVmVjdG9yMy5uZXcoNTAsNTAsNTApCnYuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTQpCnYuSHVtYW5vaWRSb290UGFydC5DYW5Db2xsaWRlID0gZmFsc2UKdi5IZWFkLkNhbkNvbGxpZGUgPSBmYWxzZQp2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lID0gUG9zTW9uQmFydG8KaWYgdi5IdW1hbm9pZDpGaW5kRmlyc3RDaGlsZCgiQW5pbWF0b3IiKSB0aGVuCnYuSHVtYW5vaWQuQW5pbWF0b3I6RGVzdHJveSgpCmVuZApzZXRoaWRkZW5wcm9wZXJ0eShnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllciwgIlNpbXVsYXRpb25SYWRpdXMiLCBtYXRoLmh1Z2UpCmVuZAplbmQKaWYgX0cuQXV0b0Zhcm1GcnVpdE1hc3RlcnkgYW5kIFN0YXJ0TWFzdGVyeUZydWl0TWFnbmV0IHRoZW4KaWYgdi5OYW1lID09ICJNb25rZXkiIHRoZW4KaWYgKHYuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbiAtIFBvc01vbk1hc3RlcnlGcnVpdC5Qb3NpdGlvbikuTWFnbml0dWRlIDw9IF9HLkJyaW5nTW9kZSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpIGFuZCB2Lkh1bWFub2lkLkhlYWx0aCA+IDAgdGhlbgp2Lkh1bWFub2lkUm9vdFBhcnQuU2l6ZSA9IFZlY3RvcjMubmV3KDUwLDUwLDUwKQp2Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDE0KQp2Lkh1bWFub2lkUm9vdFBhcnQuQ2FuQ29sbGlkZSA9IGZhbHNlCnYuSGVhZC5DYW5Db2xsaWRlID0gZmFsc2UKdi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSA9IFBvc01vbk1hc3RlcnlGcnVpdAppZiB2Lkh1bWFub2lkOkZpbmRGaXJzdENoaWxkKCJBbmltYXRvciIpIHRoZW4Kdi5IdW1hbm9pZC5BbmltYXRvcjpEZXN0cm95KCkKZW5kCnNldGhpZGRlbnByb3BlcnR5KGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLCAiU2ltdWxhdGlvblJhZGl1cyIsIG1hdGguaHVnZSkKZW5kCmVsc2VpZiB2Lk5hbWUgPT0gIkZhY3RvcnkgU3RhZmYiIHRoZW4KaWYgKHYuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbiAtIFBvc01vbk1hc3RlcnlGcnVpdC5Qb3NpdGlvbikuTWFnbml0dWRlIDw9IF9HLkJyaW5nTW9kZSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpIGFuZCB2Lkh1bWFub2lkLkhlYWx0aCA+IDAgdGhlbgp2Lkh1bWFub2lkUm9vdFBhcnQuU2l6ZSA9IFZlY3RvcjMubmV3KDUwLDUwLDUwKQp2Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDE0KQp2Lkh1bWFub2lkUm9vdFBhcnQuQ2FuQ29sbGlkZSA9IGZhbHNlCnYuSGVhZC5DYW5Db2xsaWRlID0gZmFsc2UKdi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSA9IFBvc01vbk1hc3RlcnlGcnVpdAppZiB2Lkh1bWFub2lkOkZpbmRGaXJzdENoaWxkKCJBbmltYXRvciIpIHRoZW4Kdi5IdW1hbm9pZC5BbmltYXRvcjpEZXN0cm95KCkKZW5kCnNldGhpZGRlbnByb3BlcnR5KGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLCAiU2ltdWxhdGlvblJhZGl1cyIsIG1hdGguaHVnZSkKZW5kCmVsc2VpZiB2Lk5hbWUgPT0gTW9uIHRoZW4KaWYgKHYuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbiAtIFBvc01vbk1hc3RlcnlGcnVpdC5Qb3NpdGlvbikuTWFnbml0dWRlIDw9IF9HLkJyaW5nTW9kZSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpIGFuZCB2Lkh1bWFub2lkLkhlYWx0aCA+IDAgdGhlbgp2Lkh1bWFub2lkUm9vdFBhcnQuU2l6ZSA9IFZlY3RvcjMubmV3KDUwLDUwLDUwKQp2Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDE0KQp2Lkh1bWFub2lkUm9vdFBhcnQuQ2FuQ29sbGlkZSA9IGZhbHNlCnYuSGVhZC5DYW5Db2xsaWRlID0gZmFsc2UKdi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSA9IFBvc01vbk1hc3RlcnlGcnVpdAppZiB2Lkh1bWFub2lkOkZpbmRGaXJzdENoaWxkKCJBbmltYXRvciIpIHRoZW4Kdi5IdW1hbm9pZC5BbmltYXRvcjpEZXN0cm95KCkKZW5kCnNldGhpZGRlbnByb3BlcnR5KGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLCAiU2ltdWxhdGlvblJhZGl1cyIsIG1hdGguaHVnZSkKZW5kCmVuZAplbmQKaWYgX0cuQXV0b0Zhcm1HdW5NYXN0ZXJ5IGFuZCBTdGFydE1hc3RlcnlHdW5NYWduZXQgdGhlbgppZiB2Lk5hbWUgPT0gIk1vbmtleSIgdGhlbgppZiAodi5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uIC0gUG9zTW9uTWFzdGVyeUd1bi5Qb3NpdGlvbikuTWFnbml0dWRlIDw9IF9HLkJyaW5nTW9kZSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpIGFuZCB2Lkh1bWFub2lkLkhlYWx0aCA+IDAgdGhlbgp2Lkh1bWFub2lkUm9vdFBhcnQuU2l6ZSA9IFZlY3RvcjMubmV3KDUwLDUwLDUwKQp2Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDE0KQp2Lkh1bWFub2lkUm9vdFBhcnQuQ2FuQ29sbGlkZSA9IGZhbHNlCnYuSGVhZC5DYW5Db2xsaWRlID0gZmFsc2UKdi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSA9IFBvc01vbk1hc3RlcnlHdW4KaWYgdi5IdW1hbm9pZDpGaW5kRmlyc3RDaGlsZCgiQW5pbWF0b3IiKSB0aGVuCnYuSHVtYW5vaWQuQW5pbWF0b3I6RGVzdHJveSgpCmVuZApzZXRoaWRkZW5wcm9wZXJ0eShnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllciwgIlNpbXVsYXRpb25SYWRpdXMiLCBtYXRoLmh1Z2UpCmVuZAplbHNlaWYgdi5OYW1lID09ICJGYWN0b3J5IFN0YWZmIiB0aGVuCmlmICh2Lkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24gLSBQb3NNb25NYXN0ZXJ5R3VuLlBvc2l0aW9uKS5NYWduaXR1ZGUgPD0gX0cuQnJpbmdNb2RlIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZCIpIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikgYW5kIHYuSHVtYW5vaWQuSGVhbHRoID4gMCB0aGVuCnYuSHVtYW5vaWRSb290UGFydC5TaXplID0gVmVjdG9yMy5uZXcoNTAsNTAsNTApCnYuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTQpCnYuSHVtYW5vaWRSb290UGFydC5DYW5Db2xsaWRlID0gZmFsc2UKdi5IZWFkLkNhbkNvbGxpZGUgPSBmYWxzZQp2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lID0gUG9zTW9uTWFzdGVyeUd1bgppZiB2Lkh1bWFub2lkOkZpbmRGaXJzdENoaWxkKCJBbmltYXRvciIpIHRoZW4Kdi5IdW1hbm9pZC5BbmltYXRvcjpEZXN0cm95KCkKZW5kCnNldGhpZGRlbnByb3BlcnR5KGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLCAiU2ltdWxhdGlvblJhZGl1cyIsIG1hdGguaHVnZSkKZW5kCmVsc2VpZiB2Lk5hbWUgPT0gUXVlc3RDaGVjaygpWzNdIHRoZW4KaWYgKHYuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbiAtIFBvc01vbk1hc3RlcnlHdW4uUG9zaXRpb24pLk1hZ25pdHVkZSA8PSBfRy5CcmluZ01vZGUgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkIikgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKSBhbmQgdi5IdW1hbm9pZC5IZWFsdGggPiAwIHRoZW4Kdi5IdW1hbm9pZFJvb3RQYXJ0LlNpemUgPSBWZWN0b3IzLm5ldyg1MCw1MCw1MCkKdi5IdW1hbm9pZDpDaGFuZ2VTdGF0ZSgxNCkKdi5IdW1hbm9pZFJvb3RQYXJ0LkNhbkNvbGxpZGUgPSBmYWxzZQp2LkhlYWQuQ2FuQ29sbGlkZSA9IGZhbHNlCnYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgPSBQb3NNb25NYXN0ZXJ5R3VuCmlmIHYuSHVtYW5vaWQ6RmluZEZpcnN0Q2hpbGQoIkFuaW1hdG9yIikgdGhlbgp2Lkh1bWFub2lkLkFuaW1hdG9yOkRlc3Ryb3koKQplbmQKc2V0aGlkZGVucHJvcGVydHkoZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIsICJTaW11bGF0aW9uUmFkaXVzIiwgbWF0aC5odWdlKQplbmQKZW5kCmVuZAppZiBfRy5BdXRvX0JvbmUgYW5kIFN0YXJ0TWFnbmV0Qm9uZU1vbiB0aGVuCmlmICh2Lk5hbWUgPT0gIlJlYm9ybiBTa2VsZXRvbiIgb3Igdi5OYW1lID09ICJMaXZpbmcgWm9tYmllIiBvciB2Lk5hbWUgPT0gIkRlbW9uaWMgU291bCIgb3Igdi5OYW1lID09ICJQb3Nlc3NlZCBNdW1teSIpIGFuZCAodi5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uIC0gUG9zTW9uQm9uZS5Qb3NpdGlvbikuTWFnbml0dWRlIDw9IF9HLkJyaW5nTW9kZSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpIGFuZCB2Lkh1bWFub2lkLkhlYWx0aCA+IDAgdGhlbgp2Lkh1bWFub2lkUm9vdFBhcnQuU2l6ZSA9IFZlY3RvcjMubmV3KDUwLDUwLDUwKQp2Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDE0KQp2Lkh1bWFub2lkUm9vdFBhcnQuQ2FuQ29sbGlkZSA9IGZhbHNlCnYuSGVhZC5DYW5Db2xsaWRlID0gZmFsc2UKdi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSA9IFBvc01vbkJvbmUKaWYgdi5IdW1hbm9pZDpGaW5kRmlyc3RDaGlsZCgiQW5pbWF0b3IiKSB0aGVuCnYuSHVtYW5vaWQuQW5pbWF0b3I6RGVzdHJveSgpCmVuZApzZXRoaWRkZW5wcm9wZXJ0eShnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllciwgIlNpbXVsYXRpb25SYWRpdXMiLCBtYXRoLmh1Z2UpCmVuZAplbmQKaWYgX0cuQXV0b0Zhcm1DYW5keSBhbmQgU3RhcnRDYW5keU1hZ25ldCB0aGVuCmlmICh2Lk5hbWUgPT0gIkljZSBDcmVhbSBDaGVmIiBvciB2Lk5hbWUgPT0gIkljZSBDcmVhbSBDb21tYW5kZXIiKSBhbmQgKHYuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbiAtIENhbmR5TW9uLlBvc2l0aW9uKS5NYWduaXR1ZGUgPD0gX0cuQnJpbmdNb2RlIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZCIpIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikgYW5kIHYuSHVtYW5vaWQuSGVhbHRoID4gMCB0aGVuCnYuSHVtYW5vaWRSb290UGFydC5TaXplID0gVmVjdG9yMy5uZXcoNTAsNTAsNTApCnYuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTQpCnYuSHVtYW5vaWRSb290UGFydC5DYW5Db2xsaWRlID0gZmFsc2UKdi5IZWFkLkNhbkNvbGxpZGUgPSBmYWxzZQp2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lID0gQ2FuZHlNb24KaWYgdi5IdW1hbm9pZDpGaW5kRmlyc3RDaGlsZCgiQW5pbWF0b3IiKSB0aGVuCnYuSHVtYW5vaWQuQW5pbWF0b3I6RGVzdHJveSgpCmVuZApzZXRoaWRkZW5wcm9wZXJ0eShnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllciwgIlNpbXVsYXRpb25SYWRpdXMiLCBtYXRoLmh1Z2UpCmVuZAplbmQKaWYgU3RhcmRGYXJtIGFuZCBGYXJtTWFnIHRoZW4KaWYgKHYuTmFtZSA9PSAiQ29jb2EgV2FycmlvciIgb3Igdi5OYW1lID09ICJDaG9jb2xhdGUgQmFyIEJhdHRsZXIiIG9yIHYuTmFtZSA9PSAiU3dlZXQgVGhpZWYiIG9yIHYuTmFtZSA9PSAiQ2FuZHkgUmViZWwiKSBhbmQgKHYuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbiAtIFBvc0dHLlBvc2l0aW9uKS5NYWduaXR1ZGUgPD0gMjUwIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZCIpIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikgYW5kIHYuSHVtYW5vaWQuSGVhbHRoID4gMCB0aGVuCnYuSHVtYW5vaWRSb290UGFydC5TaXplID0gVmVjdG9yMy5uZXcoNTAsNTAsNTApCnYuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTQpCnYuSHVtYW5vaWRSb290UGFydC5DYW5Db2xsaWRlID0gZmFsc2UKdi5IZWFkLkNhbkNvbGxpZGUgPSBmYWxzZQp2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lID0gUG9zR0cKaWYgdi5IdW1hbm9pZDpGaW5kRmlyc3RDaGlsZCgiQW5pbWF0b3IiKSB0aGVuCnYuSHVtYW5vaWQuQW5pbWF0b3I6RGVzdHJveSgpCmVuZApzZXRoaWRkZW5wcm9wZXJ0eShnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllciwgIlNpbXVsYXRpb25SYWRpdXMiLCBtYXRoLmh1Z2UpCmVuZAplbmQKaWYgX0cuRmFybWZhc3QgYW5kIFN0YXJkTWFnIHRoZW4KaWYgKHYuTmFtZSA9PSAiU2hhbmRhIiBvciB2Lk5hbWUgPT0gIlNoYW5kYSIpIGFuZCAodi5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uIC0gRmFzdE1vbi5Qb3NpdGlvbikuTWFnbml0dWRlIDw9IF9HLkJyaW5nTW9kZSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpIGFuZCB2Lkh1bWFub2lkLkhlYWx0aCA+IDAgdGhlbgp2Lkh1bWFub2lkUm9vdFBhcnQuU2l6ZSA9IFZlY3RvcjMubmV3KDUwLDUwLDUwKQp2Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDE0KQp2Lkh1bWFub2lkUm9vdFBhcnQuQ2FuQ29sbGlkZSA9IGZhbHNlCnYuSGVhZC5DYW5Db2xsaWRlID0gZmFsc2UKdi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSA9IEZhc3RNb24KaWYgdi5IdW1hbm9pZDpGaW5kRmlyc3RDaGlsZCgiQW5pbWF0b3IiKSB0aGVuCnYuSHVtYW5vaWQuQW5pbWF0b3I6RGVzdHJveSgpCmVuZApzZXRoaWRkZW5wcm9wZXJ0eShnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllciwgIlNpbXVsYXRpb25SYWRpdXMiLCBtYXRoLmh1Z2UpCmVuZAplbmQKaWYgX0cuQXV0b0RvdWdodEJvc3MgYW5kIE1hZ25ldERvdWdodCB0aGVuCmlmICh2Lk5hbWUgPT0gIkNvb2tpZSBDcmFmdGVyIiBvciB2Lk5hbWUgPT0gIkNha2UgR3VhcmQiIG9yIHYuTmFtZSA9PSAiQmFraW5nIFN0YWZmIiBvciB2Lk5hbWUgPT0gIkhlYWQgQmFrZXIiKSBhbmQgKHYuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbiAtIFBvc01vbkRvdWdodE9wZW5Eb29yLlBvc2l0aW9uKS5NYWduaXR1ZGUgPD0gX0cuQnJpbmdNb2RlIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZCIpIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikgYW5kIHYuSHVtYW5vaWQuSGVhbHRoID4gMCB0aGVuCnYuSHVtYW5vaWRSb290UGFydC5TaXplID0gVmVjdG9yMy5uZXcoNTAsNTAsNTApCnYuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTQpCnYuSHVtYW5vaWRSb290UGFydC5DYW5Db2xsaWRlID0gZmFsc2UKdi5IZWFkLkNhbkNvbGxpZGUgPSBmYWxzZQp2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lID0gUG9zTW9uRG91Z2h0T3BlbkRvb3IKaWYgdi5IdW1hbm9pZDpGaW5kRmlyc3RDaGlsZCgiQW5pbWF0b3IiKSB0aGVuCnYuSHVtYW5vaWQuQW5pbWF0b3I6RGVzdHJveSgpCmVuZApzZXRoaWRkZW5wcm9wZXJ0eShnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllciwgIlNpbXVsYXRpb25SYWRpdXMiLCBtYXRoLmh1Z2UpCmVuZAplbmQKZW5kCmVuZAplbmQpCmVuZAplbmQpCnRhc2suc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB0cnVlIGRvIHdhaXQoKQppZiBzZXRzY3JpcHRhYmxlIHRoZW4Kc2V0c2NyaXB0YWJsZShnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIsICJTaW11bGF0aW9uUmFkaXVzIiwgdHJ1ZSkKZW5kCmlmIHNldGhpZGRlbnByb3BlcnR5IHRoZW4Kc2V0aGlkZGVucHJvcGVydHkoZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLCAiU2ltdWxhdGlvblJhZGl1cyIsIG1hdGguaHVnZSkKZW5kCmVuZAplbmQpCnRhc2suc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB0YXNrLndhaXQoKSBkbwpwY2FsbChmdW5jdGlvbigpCmlmICBfRy5CcmluZ01vYiB0aGVuCmZvciBpLHYgaW4gcGFpcnMoZ2FtZS5Xb3Jrc3BhY2UuRW5lbWllczpHZXRDaGlsZHJlbigpKSBkbwppZiBub3Qgc3RyaW5nLmZpbmQodi5OYW1lLCJCb3NzIikgYW5kICh2Lkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24gLSBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLk1hZ25pdHVkZSA8PSBfRy5CcmluZ01vZGUgdGhlbgppZiBJbk15TmV0V29yayh2Lkh1bWFub2lkUm9vdFBhcnQpIHRoZW4Kdi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSA9IFBvc0dheQp2Lkh1bWFub2lkLkp1bXBQb3dlciA9IDAKdi5IdW1hbm9pZC5XYWxrU3BlZWQgPSAwCnYuSHVtYW5vaWRSb290UGFydC5TaXplID0gVmVjdG9yMy5uZXcoNjAsNjAsNjApCnYuSHVtYW5vaWRSb290UGFydC5UcmFuc3BhcmVuY3kgPSAxCnYuSHVtYW5vaWRSb290UGFydC5DYW5Db2xsaWRlID0gZmFsc2UKdi5IZWFkLkNhbkNvbGxpZGUgPSBmYWxzZQppZiB2Lkh1bWFub2lkOkZpbmRGaXJzdENoaWxkKCJBbmltYXRvciIpIHRoZW4Kdi5IdW1hbm9pZC5BbmltYXRvcjpEZXN0cm95KCkKZW5kCnYuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTEpCnYuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTQpCmVuZAplbmQKZW5kCmVuZAplbmQpCmVuZAplbmQpCnRhc2suc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB0YXNrLndhaXQoKSBkbwpwY2FsbChmdW5jdGlvbigpCmlmIF9HLkF1dG9Td29yZE1hc3RlcnkgYW5kIEF1dG9Td29yZE1hc3RlcnlNYWcgYW5kIF9HLkJyaW5nTW9iIHRoZW4KZm9yIGksdiBpbiBwYWlycyhnYW1lLldvcmtzcGFjZS5FbmVtaWVzOkdldENoaWxkcmVuKCkpIGRvCmlmIG5vdCBzdHJpbmcuZmluZCh2Lk5hbWUsIkJvc3MiKSBhbmQgKHYuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbiAtIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikuTWFnbml0dWRlIDw9IF9HLkJyaW5nTW9kZSB0aGVuCmlmIEluTXlOZXRXb3JrKHYuSHVtYW5vaWRSb290UGFydCkgdGhlbgp2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lID0gUG9zTW9uCnYuSHVtYW5vaWQuSnVtcFBvd2VyID0gMAp2Lkh1bWFub2lkLldhbGtTcGVlZCA9IDAKdi5IdW1hbm9pZFJvb3RQYXJ0LlNpemUgPSBWZWN0b3IzLm5ldyg2MCw2MCw2MCkKdi5IdW1hbm9pZFJvb3RQYXJ0LlRyYW5zcGFyZW5jeSA9IDEKdi5IdW1hbm9pZFJvb3RQYXJ0LkNhbkNvbGxpZGUgPSBmYWxzZQp2LkhlYWQuQ2FuQ29sbGlkZSA9IGZhbHNlCmlmIHYuSHVtYW5vaWQ6RmluZEZpcnN0Q2hpbGQoIkFuaW1hdG9yIikgdGhlbgp2Lkh1bWFub2lkLkFuaW1hdG9yOkRlc3Ryb3koKQplbmQKdi5IdW1hbm9pZDpDaGFuZ2VTdGF0ZSgxMSkKdi5IdW1hbm9pZDpDaGFuZ2VTdGF0ZSgxNCkKZW5kCmVuZAplbmQKZW5kCmVuZCkKZW5kCmVuZCkKdGFzay5zcGF3bihmdW5jdGlvbigpCndoaWxlIHRhc2sud2FpdCgpIGRvCnBjYWxsKGZ1bmN0aW9uKCkKaWYgX0cuQnJpbmdNb2IgdGhlbgpmb3IgaSx2IGluIHBhaXJzKGdhbWUuV29ya3NwYWNlLkVuZW1pZXM6R2V0Q2hpbGRyZW4oKSkgZG8KaWYgbm90IHN0cmluZy5maW5kKHYuTmFtZSwiQm9zcyIpIGFuZCAodi5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uIC0gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKS5NYWduaXR1ZGUgPD0gX0cuQnJpbmdNb2RlIHRoZW4KaWYgSW5NeU5ldFdvcmsodi5IdW1hbm9pZFJvb3RQYXJ0KSB0aGVuCnYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgPSBQb3NOYXJhdGhpd2F0CnYuSHVtYW5vaWQuSnVtcFBvd2VyID0gMAp2Lkh1bWFub2lkLldhbGtTcGVlZCA9IDAKdi5IdW1hbm9pZFJvb3RQYXJ0LlNpemUgPSBWZWN0b3IzLm5ldyg2MCw2MCw2MCkKdi5IdW1hbm9pZFJvb3RQYXJ0LlRyYW5zcGFyZW5jeSA9IDEKdi5IdW1hbm9pZFJvb3RQYXJ0LkNhbkNvbGxpZGUgPSBmYWxzZQp2LkhlYWQuQ2FuQ29sbGlkZSA9IGZhbHNlCmlmIHYuSHVtYW5vaWQ6RmluZEZpcnN0Q2hpbGQoIkFuaW1hdG9yIikgdGhlbgp2Lkh1bWFub2lkLkFuaW1hdG9yOkRlc3Ryb3koKQplbmQKdi5IdW1hbm9pZDpDaGFuZ2VTdGF0ZSgxMSkKdi5IdW1hbm9pZDpDaGFuZ2VTdGF0ZSgxNCkKZW5kCmVuZAplbmQKZW5kCmVuZCkKZW5kCmVuZCkKdGFzay5zcGF3bihmdW5jdGlvbigpCndoaWxlIHRhc2sud2FpdCgpIGRvCnBjYWxsKGZ1bmN0aW9uKCkKaWYgX0cuQXV0b0Zhcm1OZWFyZXN0IGFuZCBfRy5CcmluZ01vYiB0aGVuCmZvciBpLHYgaW4gcGFpcnMoZ2FtZS5Xb3Jrc3BhY2UuRW5lbWllczpHZXRDaGlsZHJlbigpKSBkbwppZiBub3Qgc3RyaW5nLmZpbmQodi5OYW1lLCJCb3NzIikgYW5kICh2Lkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24gLSBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLk1hZ25pdHVkZSA8PSBfRy5CcmluZ01vZGUgdGhlbgppZiBJbk15TmV0V29yayh2Lkh1bWFub2lkUm9vdFBhcnQpIHRoZW4Kdi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSA9IFBvc01vbgp2Lkh1bWFub2lkLkp1bXBQb3dlciA9IDAKdi5IdW1hbm9pZC5XYWxrU3BlZWQgPSAwCnYuSHVtYW5vaWRSb290UGFydC5TaXplID0gVmVjdG9yMy5uZXcoNjAsNjAsNjApCnYuSHVtYW5vaWRSb290UGFydC5UcmFuc3BhcmVuY3kgPSAxCnYuSHVtYW5vaWRSb290UGFydC5DYW5Db2xsaWRlID0gZmFsc2UKdi5IZWFkLkNhbkNvbGxpZGUgPSBmYWxzZQppZiB2Lkh1bWFub2lkOkZpbmRGaXJzdENoaWxkKCJBbmltYXRvciIpIHRoZW4Kdi5IdW1hbm9pZC5BbmltYXRvcjpEZXN0cm95KCkKZW5kCnYuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTEpCnYuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTQpCmVuZAplbmQKZW5kCmVuZAplbmQpCmVuZAplbmQpCl9HLkJyaW5nTW9kZSA9IDE1MApfRy5BdXRvX0NGcmFtZSA9IHRydWUKcGFnZTI6VG9nZ2xlKCJEaXNhYmxlRGFtYWdlXG7guJvguLTguJTguJTguLLguYDguKHguIgiLCAgdHJ1ZSwgZnVuY3Rpb24odmFsdWUpCl9HLkRpc2RhbWFnZSA9IHZhbHVlCkRpc2FibGVkRGFtYWdlKCkKZW5kKQpwYWdlMzpTZXBlcmF0b3IoIvCfk4oiKQpwYWdlMzpEcm9wZG93bigiU2VsZWN0IFN0YXRzXG7guYDguKXguLfguK3guIHguKrguYHguJXguIQiLHsiTWVsZWUiLCJEZWZlbnNlIiwiU3dvcmQiLCJHdW4iLCJGcnVpdCJ9LGZ1bmN0aW9uKHZhbHVlKQpfRy5TZWxlY3RTdGF0cyA9IHZhbHVlCmVuZCkKcGFnZTM6VG9nZ2xlKCJBdXRvIFN0YXRzXG7guK3guK3guYLguJXguYnguK3guLHguJ7guKrguYHguJXguIQiLCBfRy5FbmFibGVkQXV0b1N0YXRzLCBmdW5jdGlvbih2YWx1ZSkKX0cuRW5hYmxlZEF1dG9TdGF0cyA9IHZhbHVlCmVuZCkKc3Bhd24oZnVuY3Rpb24oKQpwY2FsbChmdW5jdGlvbigpCndoaWxlIHRhc2sud2FpdCgpIGRvCmlmIF9HLkVuYWJsZWRBdXRvU3RhdHMgdGhlbgppZiBfRy5TZWxlY3RTdGF0cyA9PSAiTWVsZWUiIHRoZW4KbG9jYWwgYXJncyA9IHsKWzFdID0gIkFkZFBvaW50IiwKWzJdID0gIk1lbGVlIiwKWzNdID0gMTAwMAp9CmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIodW5wYWNrKGFyZ3MpKQplbHNlaWYgX0cuU2VsZWN0U3RhdHMgPT0gIkRlZmVuc2UiIHRoZW4KbG9jYWwgYXJncyA9IHsKWzFdID0gIkFkZFBvaW50IiwKWzJdID0gIkRlZmVuc2UiLApbM10gPSAxMDAwCn0KZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcih1bnBhY2soYXJncykpCmVsc2VpZiBfRy5TZWxlY3RTdGF0cyA9PSAiU3dvcmQiIHRoZW4KbG9jYWwgYXJncyA9IHsKWzFdID0gIkFkZFBvaW50IiwKWzJdID0gIlN3b3JkIiwKWzNdID0gMTAwMAp9CmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIodW5wYWNrKGFyZ3MpKQplbHNlaWYgX0cuU2VsZWN0U3RhdHMgPT0gIkd1biIgdGhlbgpsb2NhbCBhcmdzID0gewpbMV0gPSAiQWRkUG9pbnQiLApbMl0gPSAiR3VuIiwKWzNdID0gMTAwMAp9CmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIodW5wYWNrKGFyZ3MpKQplbHNlaWYgX0cuU2VsZWN0U3RhdHMgPT0gIkZydWl0IiB0aGVuCmxvY2FsIGFyZ3MgPSB7ClsxXSA9ICJBZGRQb2ludCIsClsyXSA9ICJEZW1vbiBGcnVpdCIsClszXSA9IDEwMDAKfQpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKHVucGFjayhhcmdzKSkKZW5kCmVuZAplbmQKZW5kKQplbmQpCnBhZ2UzOlRvZ2dsZSgiQXV0byBTdGF0cyBLYWl0dW5cbuC4reC4seC4nuC4quC5geC4leC4hOC5geC4muC4muC5hOC4geC5iOC4leC4seC4mSIsIHRydWUsIGZ1bmN0aW9uKHZhbHVlKQpfRy5BdXRvU3RhdHNLYWl0dW4gPSB2YWx1ZQplbmQpCnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgdGFzay53YWl0KCkgZG8KaWYgX0cuQXV0b1N0YXRzS2FpdHVuIHRoZW4KaWYgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuRGF0YS5TdGF0cy5NZWxlZS5MZXZlbC5WYWx1ZSA8PSAyNjQ5IHRoZW4KbG9jYWwgYXJncyA9IHsKWzFdID0gIkFkZFBvaW50IiwKWzJdID0gIk1lbGVlIiwKWzNdID0gMTAwMAp9CmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIodW5wYWNrKGFyZ3MpKQplbHNlCmxvY2FsIGFyZ3MgPSB7ClsxXSA9ICJBZGRQb2ludCIsClsyXSA9ICJEZWZlbnNlIiwKWzNdID0gMTAwMAp9CmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIodW5wYWNrKGFyZ3MpKQplbmQKZW5kCmVuZAplbmQpCnBhZ2UzOlRvZ2dsZSgiQXV0byBSZWRlZW0gQ29kZVxu4Lit4Lit4LmC4LiV4LmJ4LmD4Liq4LmI4LmC4LiE4LmJ4LiUIiwgX0cuRW5hYmxlZEF1dG9SZWRlZW1Db2RlLCBmdW5jdGlvbih2YWx1ZSkKX0cuRW5hYmxlZEF1dG9SZWRlZW1Db2RlID0gdmFsdWUKZW5kKQpzcGF3bihmdW5jdGlvbigpCndoaWxlIHRhc2sud2FpdCgpIGRvCmlmIF9HLkVuYWJsZWRBdXRvUmVkZWVtQ29kZSBvciBfRy5BdXRvRmFybSB0aGVuCmZ1bmN0aW9uIFVzZUNvZGUoVGV4dCkKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuUmVkZWVtOkludm9rZVNlcnZlcihUZXh0KQplbmQKVXNlQ29kZSgiQURNSU5GSUdIVCIpClVzZUNvZGUoIkdJRlRJTkdfSE9VUlMiKQpVc2VDb2RlKCJOT01PUkVIQUNLIikKVXNlQ29kZSgiRUFSTl9GUlVJVFMiKQpVc2VDb2RlKCJGSUdIVDRGUlVJVCIpClVzZUNvZGUoIk5PRVhQTE9JVEVSIikKVXNlQ29kZSgiTk9PQjJBRE1JTiIpClVzZUNvZGUoIkNPREVTTElERSIpClVzZUNvZGUoIkFETUlOSEFDS0VEIikKVXNlQ29kZSgiQURNSU5EQVJFUyIpClVzZUNvZGUoImZydWl0Y29uY2VwdHMiKQpVc2VDb2RlKCJrcmF6eWRhcmVzIikKVXNlQ29kZSgiVFJJUExFQUJVU0UiKQpVc2VDb2RlKCJTRUFUUk9MTElORyIpClVzZUNvZGUoIjI0Tk9BRE1JTiIpClVzZUNvZGUoIlJFV0FSREZVTiIpClVzZUNvZGUoIk5FV1RST0xMIikKVXNlQ29kZSgiU0VDUkVUX0FETUlOIikKVXNlQ29kZSgiQkFORVhQTE9JVCIpClVzZUNvZGUoIk5PTU9SRUhBQ0siKQpVc2VDb2RlKCJHZXRQcmFua2VkIikKVXNlQ29kZSgiRUFSTl9GUlVJVFMiKQpVc2VDb2RlKCJOT0VYUExPSVQiKQpVc2VDb2RlKCJGSUdIVDRGUlVJVCIpClVzZUNvZGUoIk5PT0IyQURNSU4iKQpVc2VDb2RlKCJDT0RFU0xJREUiKQpVc2VDb2RlKCJLSVRUX1JFU0VUIikKVXNlQ29kZSgiU3ViMkNhcHRhaW5NYXVpIikKZW5kCmVuZAplbmQpCmZ1bmN0aW9uIEdldEFsbE1lbGVlRmFybSgpCmlmIFN1cENvbXBsZXRlID09IGZhbHNlIHRoZW4KbG9jYWwgYXJncyA9IHsKWzFdID0gIkJ1eVN1cGVyaHVtYW4iCn0KZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcih1bnBhY2soYXJncykpCmlmIENoZWNrTWFzdGVyeVdlYXBvbigiU3VwZXJodW1hbiIsIDQwMCkgPT0gInRydWUgVXBUbyIgdGhlbgpTdXBDb21wbGV0ZSA9IHRydWUKZW5kCmVuZAp3YWl0KC41KQppZiBFQ2xhd0NvbXBsZXRlID09IGZhbHNlIHRoZW4KbG9jYWwgc3RyaW5nXzEgPSAiQnV5RWxlY3RyaWNDbGF3IjsKbG9jYWwgVGFyZ2V0ID0gZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXNbIkNvbW1GXyJdOwpUYXJnZXQ6SW52b2tlU2VydmVyKHN0cmluZ18xKTsKaWYgQ2hlY2tNYXN0ZXJ5V2VhcG9uKCJFbGVjdHJpYyBDbGF3IiwgNDAwKSA9PSAidHJ1ZSBVcFRvIiB0aGVuCkVDbGF3Q29tcGxldGUgPSB0cnVlCmVuZAplbmQKd2FpdCguNSkKaWYgVGFsQ29tcGxldGUgPT0gZmFsc2UgdGhlbgpnYW1lLlJlcGxpY2F0ZWRTdG9yYWdlLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQnV5RHJhZ29uVGFsb24iKQppZiBDaGVja01hc3RlcnlXZWFwb24oIkRyYWdvbiBUYWxvbiIsIDQwMCkgPT0gInRydWUgVXBUbyIgdGhlbgpUYWxDb21wbGV0ZSA9IHRydWUKZW5kCmVuZAp3YWl0KC41KQppZiBTaGFya0NvbXBsZXRlID09IGZhbHNlIHRoZW4KbG9jYWwgYXJncyA9IHsKWzFdID0gIkJ1eVNoYXJrbWFuS2FyYXRlIgp9CmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIodW5wYWNrKGFyZ3MpKQppZiBDaGVja01hc3RlcnlXZWFwb24oIlNoYXJrbWFuIEthcmF0ZSIsIDQwMCkgPT0gInRydWUgVXBUbyIgdGhlbgpTaGFya0NvbXBsZXRlID0gdHJ1ZQplbmQKZW5kCndhaXQoLjUpCmlmIERlYXRoQ29tcGxldGUgPT0gZmFsc2UgdGhlbgpsb2NhbCBhcmdzID0gewpbMV0gPSAiQnV5RGVhdGhTdGVwIgp9CmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIodW5wYWNrKGFyZ3MpKQppZiBDaGVja01hc3RlcnlXZWFwb24oIkRlYXRoIFN0ZXAiLCA0MDApID09ICJ0cnVlIFVwVG8iIHRoZW4KRGVhdGhDb21wbGV0ZSA9IHRydWUKZW5kCmVuZAppZiBHb2RDb21wbGV0ZSA9PSBmYWxzZSB0aGVuCmxvY2FsIGFyZ3MgPSB7ClsxXSA9ICJCdXlHb2RodW1hbiIKfQpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKHVucGFjayhhcmdzKSkKaWYgQ2hlY2tNYXN0ZXJ5V2VhcG9uKCJHb2RodW1hbiIsIDM1MCkgPT0gInRydWUgVXBUbyIgdGhlbgpHb2RDb21wbGV0ZSA9IHRydWUKZW5kCmVuZAplbmQKcGFnZTM6U2VwZXJhdG9yKCLwn6WLIikKcGFnZTM6VG9nZ2xlKCJBdXRvIEdvZEh1bWFuXG7guK3guK3guYLguJXguYnguJfguLPguKvguKHguLHguJTguIHguYfguK3guJXguK7guLTguKfguYHguKHguJkiLCBfRy5BdXRvR29kSHVtYW4sIGZ1bmN0aW9uKHZhbHVlKQpfRy5BdXRvR29kSHVtYW4gPSB2YWx1ZQpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJCdXlHb2RodW1hbiIsIHRydWUpCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkJ1eUdvZGh1bWFuIikKQnV5R29kaHVtYW4gPSB0b251bWJlcihnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJCdXlHb2RodW1hbiIsIHRydWUpKQppZiBCdXlHb2RodW1hbiB0aGVuCmlmIEJ1eUdvZGh1bWFuIH49IDEgdGhlbgpHZXRBbGxNZWxlZUZhcm0oKQplbmQKZW5kCmVuZCkKc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB0YXNrLndhaXQoKSBkbwppZiBfRy5BdXRvX0dvZF9IdW1hbiB0aGVuCnBjYWxsKGZ1bmN0aW9uKCkKaWYgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiU3VwZXJodW1hbiIpIG9yIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiU3VwZXJodW1hbiIpIG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJCbGFjayBMZWciKSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkJsYWNrIExlZyIpIG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJEZWF0aCBTdGVwIikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJEZWF0aCBTdGVwIikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIkZpc2htYW4gS2FyYXRlIikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJGaXNobWFuIEthcmF0ZSIpIG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJTaGFya21hbiBLYXJhdGUiKSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIlNoYXJrbWFuIEthcmF0ZSIpIG9yIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiRWxlY3RybyIpIG9yIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkVsZWN0cm8iKSBvciBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIkVsZWN0cmljIENsYXciKSBvciBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJFbGVjdHJpYyBDbGF3Iikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIkRyYWdvbiBDbGF3Iikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJEcmFnb24gQ2xhdyIpIG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJEcmFnb24gVGFsb24iKSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkRyYWdvbiBUYWxvbiIpIG9yIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkdvZGh1bWFuIikgb3IgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJHb2RodW1hbiIpIHRoZW4KaWYgZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQnV5U3VwZXJodW1hbiIsdHJ1ZSkgPT0gMSB0aGVuCmlmIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiU3VwZXJodW1hbiIpIGFuZCBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIlN1cGVyaHVtYW4iKS5MZXZlbC5WYWx1ZSA+PSA0MDAgb3IgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiU3VwZXJodW1hbiIpIGFuZCBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJTdXBlcmh1bWFuIikuTGV2ZWwuVmFsdWUgPj0gNDAwIHRoZW4KZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQnV5RGVhdGhTdGVwIikKZW5kCmVsc2UKZ2FtZS5TdGFydGVyR3VpOlNldENvcmUoIlNlbmROb3RpZmljYXRpb24iLCB7VGl0bGUgPSAiTm90aWZpY2F0aW9uIiwgVGV4dCA9ICJOb3QgSGF2ZSBTdXBlcmh1bWFuIiAsSWNvbiA9ICJodHRwOi8vd3d3LnJvYmxveC5jb20vYXNzZXQvP2lkPTE2MTI5MjM1MDU0IixEdXJhdGlvbiA9IDIuNX0pCmVuZAppZiBnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJCdXlEZWF0aFN0ZXAiLHRydWUpID09IDEgdGhlbgppZiBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIkRlYXRoIFN0ZXAiKSBhbmQgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJEZWF0aCBTdGVwIikuTGV2ZWwuVmFsdWUgPj0gNDAwIG9yIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkRlYXRoIFN0ZXAiKSBhbmQgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiRGVhdGggU3RlcCIpLkxldmVsLlZhbHVlID49IDQwMCB0aGVuCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkJ1eVNoYXJrbWFuS2FyYXRlIikKZW5kCmVsc2UKZ2FtZS5TdGFydGVyR3VpOlNldENvcmUoIlNlbmROb3RpZmljYXRpb24iLCB7VGl0bGUgPSAiTm90aWZpY2F0aW9uIiwgVGV4dCA9ICJOb3QgSGF2ZSBEZWF0aCBTdGVwIiAsSWNvbiA9ICJodHRwOi8vd3d3LnJvYmxveC5jb20vYXNzZXQvP2lkPTE2MTI5MjM1MDU0IixEdXJhdGlvbiA9IDIuNX0pCmVuZAppZiBnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJCdXlTaGFya21hbkthcmF0ZSIsdHJ1ZSkgPT0gMSB0aGVuCmlmIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiU2hhcmttYW4gS2FyYXRlIikgYW5kIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiU2hhcmttYW4gS2FyYXRlIikuTGV2ZWwuVmFsdWUgPj0gNDAwIG9yIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIlNoYXJrbWFuIEthcmF0ZSIpIGFuZCBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJTaGFya21hbiBLYXJhdGUiKS5MZXZlbC5WYWx1ZSA+PSA0MDAgdGhlbgpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJCdXlFbGVjdHJpY0NsYXciKQplbmQKZWxzZQpnYW1lLlN0YXJ0ZXJHdWk6U2V0Q29yZSgiU2VuZE5vdGlmaWNhdGlvbiIsIHtUaXRsZSA9ICJOb3RpZmljYXRpb24iLCBUZXh0ID0gIk5vdCBIYXZlIFNoYXJrTWFuIEthcmF0ZSIgLEljb24gPSAiaHR0cDovL3d3dy5yb2Jsb3guY29tL2Fzc2V0Lz9pZD0xNjEyOTIzNTA1NCIsRHVyYXRpb24gPSAyLjV9KQplbmQKaWYgZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQnV5RWxlY3RyaWNDbGF3Iix0cnVlKSA9PSAxIHRoZW4KaWYgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJFbGVjdHJpYyBDbGF3IikgYW5kIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiRWxlY3RyaWMgQ2xhdyIpLkxldmVsLlZhbHVlID49IDQwMCBvciBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJFbGVjdHJpYyBDbGF3IikgYW5kIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkVsZWN0cmljIENsYXciKS5MZXZlbC5WYWx1ZSA+PSA0MDAgdGhlbgpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJCdXlEcmFnb25UYWxvbiIpCmVuZAplbHNlCmdhbWUuU3RhcnRlckd1aTpTZXRDb3JlKCJTZW5kTm90aWZpY2F0aW9uIiwge1RpdGxlID0gIk5vdGlmaWNhdGlvbiIsIFRleHQgPSAiTm90IEhhdmUgRWxlY3RyaWMgQ2xhdyIgLEljb24gPSAiaHR0cDovL3d3dy5yb2Jsb3guY29tL2Fzc2V0Lz9pZD0xNjEyOTIzNTA1NCIsRHVyYXRpb24gPSAyLjV9KQplbmQKaWYgZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQnV5RHJhZ29uVGFsb24iLHRydWUpID09IDEgdGhlbgppZiBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIkRyYWdvbiBUYWxvbiIpIGFuZCBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIkRyYWdvbiBUYWxvbiIpLkxldmVsLlZhbHVlID49IDQwMCBvciBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJEcmFnb24gVGFsb24iKSBhbmQgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiRHJhZ29uIFRhbG9uIikuTGV2ZWwuVmFsdWUgPj0gNDAwIHRoZW4KaWYgc3RyaW5nLmZpbmQoZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQnV5R29kaHVtYW4iLHRydWUpLCAiQnJpbmciKSB0aGVuCmdhbWUuU3RhcnRlckd1aTpTZXRDb3JlKCJTZW5kTm90aWZpY2F0aW9uIiwge1RpdGxlID0gIk5vdGlmaWNhdGlvbiIsIFRleHQgPSAiTm90IEhhdmUgRW5vdWdoIE1hdGVyaWFsIiAsSWNvbiA9ICJodHRwOi8vd3d3LnJvYmxveC5jb20vYXNzZXQvP2lkPTE2MTI5MjM1MDU0IixEdXJhdGlvbiA9IDIuNX0pCmVsc2UKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQnV5R29kaHVtYW4iKQplbmQKZW5kCmVsc2UKZ2FtZS5TdGFydGVyR3VpOlNldENvcmUoIlNlbmROb3RpZmljYXRpb24iLCB7VGl0bGUgPSAiTm90aWZpY2F0aW9uIiwgVGV4dCA9ICJOb3QgSGF2ZSBEcmFnb24gVGFsb24iICxJY29uID0gImh0dHA6Ly93d3cucm9ibG94LmNvbS9hc3NldC8/aWQ9MTYxMjkyMzUwNTQiLER1cmF0aW9uID0gMi41fSkKZW5kCmVsc2UKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQnV5U3VwZXJodW1hbiIpCmVuZAplbmQpCmVuZAplbmQKZW5kKQpwYWdlMzpUb2dnbGUoIkF1dG8gU3VwZXJIdW1hblxu4Lit4Lit4LmC4LiV4LmJ4LiX4Liz4Lir4Lih4Lix4LiU4LiK4Li44Lib4LmA4Lib4Lit4Lij4LmM4Liu4Li04Lin4LmB4Lih4LiZIiwgX0cuQXV0b1N1cGVyaHVtYW4sIGZ1bmN0aW9uKHZhbHVlKQpfRy5BdXRvU3VwZXJodW1hbiA9IHZhbHVlCmVuZCkKdGFzay5zcGF3bihmdW5jdGlvbigpCndoaWxlIHRhc2sud2FpdCgpIGRvCnBjYWxsKGZ1bmN0aW9uKCkKaWYgX0cuQXV0b1N1cGVyaHVtYW4gdGhlbgppZiBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiQ29tYmF0IikgdGhlbgpsb2NhbCBhcmdzID0gewpbMV0gPSAiQnV5QmxhY2tMZWciCn0KZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcih1bnBhY2soYXJncykpCmVuZAppZiBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIkJsYWNrIExlZyIpIGFuZCBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIkJsYWNrIExlZyIpLkxldmVsLlZhbHVlID49IDMwMCB0aGVuCmxvY2FsIGFyZ3MgPSB7ClsxXSA9ICJCdXlFbGVjdHJvIgp9CmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIodW5wYWNrKGFyZ3MpKQplbmQKaWYgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiQmxhY2sgTGVnIikgYW5kIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkJsYWNrIExlZyIpLkxldmVsLlZhbHVlID49IDMwMCB0aGVuCmxvY2FsIGFyZ3MgPSB7ClsxXSA9ICJCdXlFbGVjdHJvIgp9CmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIodW5wYWNrKGFyZ3MpKQplbmQKaWYgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJFbGVjdHJvIikgYW5kIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiRWxlY3RybyIpLkxldmVsLlZhbHVlID49IDMwMCB0aGVuCmxvY2FsIGFyZ3MgPSB7ClsxXSA9ICJCdXlGaXNobWFuS2FyYXRlIgp9CmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIodW5wYWNrKGFyZ3MpKQplbmQKaWYgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiRWxlY3RybyIpIGFuZCBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJFbGVjdHJvIikuTGV2ZWwuVmFsdWUgPj0gMzAwIHRoZW4KbG9jYWwgYXJncyA9IHsKWzFdID0gIkJ1eUZpc2htYW5LYXJhdGUiCn0KZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcih1bnBhY2soYXJncykpCmVuZAppZiBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIkZpc2htYW4gS2FyYXRlIikgYW5kIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiRmlzaG1hbiBLYXJhdGUiKS5MZXZlbC5WYWx1ZSA+PSAzMDAgdGhlbgpsb2NhbCBhcmdzID0gewpbMV0gPSAiQmxhY2tiZWFyZFJld2FyZCIsClsyXSA9ICJEcmFnb25DbGF3IiwKWzNdID0gIjIiCn0KSGF2ZURyYWdvbkNsYXcgPSBnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKHVucGFjayhhcmdzKSkKaWYgX0cuQXV0b1N1cGVyaHVtYW4gYW5kIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5EYXRhLkZyYWdtZW50cy5WYWx1ZSA8PSAxNTAwIGFuZCBIYXZlRHJhZ29uQ2xhdyA9PSAwIHRoZW4KaWYgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkRhdGEuTGV2ZWwuVmFsdWUgPiAxMTAwIHRoZW4KX0cuU2VsZWN0UmFpZHMgPSAiRmxhbWUiCl9HLkF1dG9SYWlkcyA9IHRydWUKaWYgX0cuQXV0b0Zhcm0gdGhlbiBfRy5BdXRvRmFybSA9IGZhbHNlIGVuZAplbmQKZWxzZQpfRy5BdXRvUmFpZHMgPSBmYWxzZQppZiBfRy5BdXRvRmFybSB0aGVuIF9HLkF1dG9GYXJtID0gdHJ1ZSBlbmQKbG9jYWwgYXJncyA9IHsKWzFdID0gIkJsYWNrYmVhcmRSZXdhcmQiLApbMl0gPSAiRHJhZ29uQ2xhdyIsClszXSA9ICIyIgp9CmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIodW5wYWNrKGFyZ3MpKQpfRy5BdXRvUmFpZHMgPSBmYWxzZQppZiBfRy5BdXRvRmFybSB0aGVuIF9HLkF1dG9GYXJtID0gdHJ1ZSBlbmQKZW5kCmVuZAppZiBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJGaXNobWFuIEthcmF0ZSIpIGFuZCBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJGaXNobWFuIEthcmF0ZSIpLkxldmVsLlZhbHVlID49IDMwMCB0aGVuCmxvY2FsIGFyZ3MgPSB7ClsxXSA9ICJCbGFja2JlYXJkUmV3YXJkIiwKWzJdID0gIkRyYWdvbkNsYXciLApbM10gPSAiMiIKfQpIYXZlRHJhZ29uQ2xhdyA9IGdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIodW5wYWNrKGFyZ3MpKQppZiBfRy5BdXRvU3VwZXJodW1hbiBhbmQgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkRhdGEuRnJhZ21lbnRzLlZhbHVlIDw9IDE1MDAgYW5kIEhhdmVEcmFnb25DbGF3ID09IDAgdGhlbgppZiBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuRGF0YS5MZXZlbC5WYWx1ZSA+IDExMDAgdGhlbgpfRy5HZXRfRnJ1aXQgPSB0cnVlCl9HLlNlbGVjdFJhaWRzID0gIkZsYW1lIgpfRy5BdXRvUmFpZHMgPSB0cnVlCmlmIF9HLkF1dG9GYXJtIHRoZW4gX0cuQXV0b0Zhcm0gPSBmYWxzZSBlbmQKZW5kCmVsc2UKX0cuQXV0b1JhaWRzID0gZmFsc2UKX0cuR2V0X0ZydWl0ID0gZmFsc2UKaWYgX0cuQXV0b0Zhcm0gdGhlbiBfRy5BdXRvRmFybSA9IHRydWUgZW5kCmxvY2FsIGFyZ3MgPSB7ClsxXSA9ICJCbGFja2JlYXJkUmV3YXJkIiwKWzJdID0gIkRyYWdvbkNsYXciLApbM10gPSAiMiIKfQpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKHVucGFjayhhcmdzKSkKX0cuQXV0b1JhaWRzID0gZmFsc2UKaWYgX0cuQXV0b0Zhcm0gdGhlbiBfRy5BdXRvRmFybSA9IHRydWUgZW5kCmVuZAplbmQKaWYgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJEcmFnb24gQ2xhdyIpIGFuZCBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIkRyYWdvbiBDbGF3IikuTGV2ZWwuVmFsdWUgPj0gMzAwIHRoZW4KbG9jYWwgYXJncyA9IHsKWzFdID0gIkJ1eVN1cGVyaHVtYW4iCn0KZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcih1bnBhY2soYXJncykpCmVuZAppZiBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJEcmFnb24gQ2xhdyIpIGFuZCBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJEcmFnb24gQ2xhdyIpLkxldmVsLlZhbHVlID49IDMwMCB0aGVuCmxvY2FsIGFyZ3MgPSB7ClsxXSA9ICJCdXlTdXBlcmh1bWFuIgp9CmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIodW5wYWNrKGFyZ3MpKQplbmQKZW5kCmVuZCkKZW5kCmVuZCkKaWYgX0cuR2V0X0ZydWl0IHRoZW4KaWYgSW52ZW50b3J5X0ZydWl0IHRoZW4KSW52ZW50b3J5X0ZydWl0ID0gbmlsCmVuZApUYWJlbERldmlsRnJ1aXRTdG9yZSA9IHt9CmZvciBpLCB2IGluIHBhaXJzKGdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzWyJDb21tRl8iXTpJbnZva2VTZXJ2ZXIoImdldEludmVudG9yeUZydWl0cyIpKSBkbwpmb3IgaTEsIHIgaW4gcGFpcnModikgZG8KaWYgaTEgPT0gIk5hbWUiIHRoZW4KdGFibGUuaW5zZXJ0KFRhYmVsRGV2aWxGcnVpdFN0b3JlLCByKQplbmQKZW5kCmVuZApmcnVpdCA9IGdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoImdldEludmVudG9yeUZydWl0cyIpCmZvciBpMSwgdiBpbiBwYWlycyhUYWJlbERldmlsRnJ1aXRTdG9yZSkgZG8KaWYgbm90IGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZChUYWJlbERldmlsRnJ1aXRTdG9yZSkgdGhlbgpmb3IgaSx2IGluIHBhaXJzKGZydWl0KSBkbwppZiB2WyJQcmljZSJdIDwgMTAwMDAwMDAgdGhlbgpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJMb2FkRnJ1aXQiLHZbIk5hbWUiXSkKZW5kCmVuZAplbmQKZW5kCmVuZApwYWdlMzpUb2dnbGUoIkF1dG8gRWxlY3RyaWNDbGF3XG7guK3guK3guYLguJXguYnguJfguLPguKvguKHguLHguJTguKrguLLguKLguJ/guYnguLIiLCBfRy5BdXRvRWxlY3RyaWNDbGF3LCBmdW5jdGlvbih2YWx1ZSkKX0cuQXV0b0VsZWN0cmljQ2xhdyA9IHZhbHVlCmlmIF9HLkF1dG9FbGVjdHJpY0NsYXcgdGhlbgpDb20oIkZfIiwgIkJ1eUVsZWN0cm8iKQplbmQKZW5kKQp0YXNrLnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgdGFzay53YWl0KCkgZG8KcGNhbGwoZnVuY3Rpb24oKQppZiBfRy5BdXRvRWxlY3RyaWNDbGF3IHRoZW4KaWYgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyOkZpbmRGaXJzdENoaWxkKCJXZWFwb25Bc3NldENhY2hlIikgdGhlbgppZiBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIkVsZWN0cm8iKSBhbmQgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJFbGVjdHJvIikuTGV2ZWwuVmFsdWUgPCA0MDAgdGhlbgpfRy5TZWxlY3RXZWFwb24gPSAiRWxlY3RybyIKZW5kCmlmIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkVsZWN0cm8iKSBhbmQgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiRWxlY3RybyIpLkxldmVsLlZhbHVlIDwgNDAwIHRoZW4KX0cuU2VsZWN0V2VhcG9uID0gIkVsZWN0cm8iCmVuZAppZiBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIkVsZWN0cm8iKSBhbmQgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJFbGVjdHJvIikuTGV2ZWwuVmFsdWUgPj0gNDAwIHRoZW4KbG9jYWwgcjc1ID0gZ2FtZS5SZXBsaWNhdGVkU3RvcmFnZS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkJ1eUVsZWN0cmljQ2xhdyIsIHRydWUpOwppZiByNzUgPT0gNCB0aGVuCmxvY2FsIHI3NiA9IGdhbWUuUmVwbGljYXRlZFN0b3JhZ2UuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJCdXlFbGVjdHJpY0NsYXciLAoiU3RhcnQiKTsKaWYgcjc2ID09IG5pbCB0aGVuCmdhbWUuUGxheWVycy5sb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgPSBDRnJhbWUubmV3KC0xMjU0OCwKMzM3LCAtNzQ4MSkKZW5kCmVsc2UKbG9jYWwgc3RyaW5nXzEgPSAiQnV5RWxlY3RyaWNDbGF3IjsKbG9jYWwgVGFyZ2V0ID0gZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXNbIkNvbW1GXyJdOwpUYXJnZXQ6SW52b2tlU2VydmVyKHN0cmluZ18xKTsKZW5kCmVuZAppZiBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJFbGVjdHJvIikgYW5kIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkVsZWN0cm8iKS5MZXZlbC5WYWx1ZSA+PSA0MDAgdGhlbgpsb2NhbCByNzUgPSBnYW1lLlJlcGxpY2F0ZWRTdG9yYWdlLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQnV5RWxlY3RyaWNDbGF3IiwgdHJ1ZSk7CmlmIHI3NSA9PSA0IHRoZW4KbG9jYWwgcjc2ID0gZ2FtZS5SZXBsaWNhdGVkU3RvcmFnZS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkJ1eUVsZWN0cmljQ2xhdyIsCiJTdGFydCIpOwppZiByNzYgPT0gbmlsIHRoZW4KZ2FtZS5QbGF5ZXJzLmxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSA9IENGcmFtZS5uZXcoLTEyNTQ4LAozMzcsIC03NDgxKQplbmQKZWxzZQpsb2NhbCBzdHJpbmdfMSA9ICJCdXlFbGVjdHJpY0NsYXciOwpsb2NhbCBUYXJnZXQgPSBnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlc1siQ29tbUZfIl07ClRhcmdldDpJbnZva2VTZXJ2ZXIoc3RyaW5nXzEpOwplbmQKZW5kCmVuZAplbmQKZW5kKQplbmQKZW5kKQpwYWdlMzpUb2dnbGUoIkF1dG8gRGVhdGhTdGVwXG7guK3guK3guYLguJXguYnguJfguLPguKvguKHguLHguJTguILguLLguJTguLMiLCBfRy5BdXRvRGVhdGhTdGVwLCBmdW5jdGlvbih2YWx1ZSkKX0cuQXV0b0RlYXRoU3RlcCA9IHZhbHVlCmlmIF9HLkF1dG9EZWF0aFN0ZXAgdGhlbgpDb20oIkZfIiwgIkJ1eUJsYWNrTGVnIikKZW5kCmVuZCkKdGFzay5zcGF3bihmdW5jdGlvbigpCndoaWxlIHRhc2sud2FpdCgpIGRvCnBjYWxsKGZ1bmN0aW9uKCkKaWYgX0cuQXV0b0RlYXRoU3RlcCB0aGVuCmlmIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllcjpGaW5kRmlyc3RDaGlsZCgiV2VhcG9uQXNzZXRDYWNoZSIpIHRoZW4KaWYgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJCbGFjayBMZWciKSBhbmQgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJCbGFjayBMZWciKS5MZXZlbC5WYWx1ZSA+PSA0MDAgdGhlbgpsb2NhbCBhcmdzID0gewpbMV0gPSAiQnV5RGVhdGhTdGVwIgp9CmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIodW5wYWNrKGFyZ3MpKQpfRy5TZWxlY3RXZWFwb24gPSAiRGVhdGggU3RlcCIKZW5kCmlmIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkJsYWNrIExlZyIpIGFuZCBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJCbGFjayBMZWciKS5MZXZlbC5WYWx1ZSA+PSA0MDAgdGhlbgpsb2NhbCBhcmdzID0gewpbMV0gPSAiQnV5RGVhdGhTdGVwIgp9CmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIodW5wYWNrKGFyZ3MpKQpfRy5TZWxlY3RXZWFwb24gPSAiRGVhdGggU3RlcCIKZW5kCmlmIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiQmxhY2sgTGVnIikgYW5kIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiQmxhY2sgTGVnIikuTGV2ZWwuVmFsdWUgPCA0MDAgdGhlbgpfRy5TZWxlY3RXZWFwb24gPSAiQmxhY2sgTGVnIgplbmQKZW5kCmVsc2VpZiBfRy5BdXRvRnVsbHlEZWF0aFN0ZXAgdGhlbgppZiBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJCbGFjayBMZWciKSBhbmQgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiQmxhY2sgTGVnIikuTGV2ZWwuVmFsdWUgPj0gNDAwIG9yIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiQmxhY2sgTGVnIikgYW5kIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiQmxhY2sgTGVnIikuTGV2ZWwuVmFsdWUgPj0gNDAwIHRoZW4KaWYgZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5NYXAuSWNlQ2FzdGxlLkhhbGwuTGlicmFyeURvb3IuUGhvZXl1RG9vci5UcmFuc3BhcmVuY3kgPT0gMCB0aGVuCmlmIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiTGlicmFyeSBLZXkiKSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiTGlicmFyeSBLZXkiKSB0aGVuCkVxdWlwV2VhcG9uKCJMaWJyYXJ5IEtleSIpCnJlcGVhdAp0YXNrLndhaXQoKQp0b1RhcmdldChDRnJhbWUubmV3KDYzNzEuMjAwMTk1MzEyNSwgMjk2LjYzNDMzODM3ODkwNjI1LCAtNjg0MS4xODExNTIzNDM3NSkpCnVudGlsIChDRnJhbWUubmV3KDYzNzEuMjAwMTk1MzEyNSwgMjk2LjYzNDMzODM3ODkwNjI1LCAtNjg0MS4xODExNTIzNDM3NSkuUG9zaXRpb24gLSBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikuTWFnbml0dWRlIDw9IDMgb3Igbm90IF9HLkF1dG9EZWF0aFN0ZXAKaWYgKENGcmFtZS5uZXcoNjM3MS4yMDAxOTUzMTI1LCAyOTYuNjM0MzM4Mzc4OTA2MjUsIC02ODQxLjE4MTE1MjM0Mzc1KS5Qb3NpdGlvbiAtIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKS5NYWduaXR1ZGUgPD0gMyB0aGVuCndhaXQoMS4yKQpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJCdXlEZWF0aFN0ZXAiLHRydWUpCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkJ1eURlYXRoU3RlcCIpCndhaXQoMC41KQplbmQKZWxzZWlmIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiQmxhY2sgTGVnIikgYW5kIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiQmxhY2sgTGVnIikuTGV2ZWwuVmFsdWUgPj0gNDUwIG9yIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkJsYWNrIExlZyIpIGFuZCBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJCbGFjayBMZWciKS5MZXZlbC5WYWx1ZSA+PSA0NTAgdGhlbgppZiBnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIik6RmluZEZpcnN0Q2hpbGQoIkF3YWtlbmVkIEljZSBBZG1pcmFsIikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkZpbmRGaXJzdENoaWxkKCJBd2FrZW5lZCBJY2UgQWRtaXJhbCIpIHRoZW4KaWYgZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkZpbmRGaXJzdENoaWxkKCJBd2FrZW5lZCBJY2UgQWRtaXJhbCIpIHRoZW4KZm9yIGksIHYgaW4gcGFpcnMoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkdldENoaWxkcmVuKCkpIGRvCmlmIHYuTmFtZSA9PSAiQXdha2VuZWQgSWNlIEFkbWlyYWwiIHRoZW4KcmVwZWF0CnRhc2sud2FpdCgpIHRhc2sud2FpdCgpCmlmIGdhbWUuV29ya3NwYWNlLkVuZW1pZXM6RmluZEZpcnN0Q2hpbGQodi5OYW1lKSB0aGVuCmlmICh2Lkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24gLSBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLm1hZ25pdHVkZSA+IDIwMCB0aGVuCkZhcm10d2VlbiA9IHRvVGFyZ2V0KHYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUpCmVsc2VpZiAodi5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uIC0gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKS5tYWduaXR1ZGUgPD0gMjAwIHRoZW4KaWYgRmFybXR3ZWVuIHRoZW4gRmFybXR3ZWVuOlN0b3AoKSBlbmQKRmFzdEF0dGFjayA9IHRydWUKaWYgbm90IGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoX0cuU2VsZWN0V2VhcG9uKSB0aGVuCnRhc2sud2FpdCgpCkVxdWlwV2VhcG9uKF9HLlNlbGVjdFdlYXBvbikKZW5kCmlmIG5vdCBfRy5GYXN0QXR0YWNrIHRoZW4KZ2FtZTpHZXRTZXJ2aWNlICdWaXJ0dWFsVXNlcic6Q2FwdHVyZUNvbnRyb2xsZXIoKQpnYW1lOkdldFNlcnZpY2UgJ1ZpcnR1YWxVc2VyJzpCdXR0b24xRG93bihWZWN0b3IyLm5ldygxMjgwLCA2NzIpKQplbmQKdi5IdW1hbm9pZFJvb3RQYXJ0LlNpemUgPSBWZWN0b3IzLm5ldyg2MCwgNjAsIDYwKQp2Lkh1bWFub2lkLkp1bXBQb3dlciA9IDAKdi5IdW1hbm9pZC5XYWxrU3BlZWQgPSAwCnYuSHVtYW5vaWRSb290UGFydC5DYW5Db2xsaWRlID0gZmFsc2UKdi5IdW1hbm9pZDpDaGFuZ2VTdGF0ZSgxMSkKdG9UYXJnZXQodi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSAqIE1ldGhvZEZhcm0pCmlmIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkJsYWNrIExlZyIpIGFuZCBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJCbGFjayBMZWciKS5MZXZlbC5WYWx1ZSA+PSAxNTAgdGhlbgpnYW1lOnNlcnZpY2UoJ1ZpcnR1YWxJbnB1dE1hbmFnZXInKTpTZW5kS2V5RXZlbnQodHJ1ZSwgIlYiLCBmYWxzZSwgZ2FtZSkKZ2FtZTpzZXJ2aWNlKCdWaXJ0dWFsSW5wdXRNYW5hZ2VyJyk6U2VuZEtleUV2ZW50KGZhbHNlLCAiViIsIGZhbHNlLCBnYW1lKQplbmQKZW5kCmVuZAp1bnRpbCBub3Qgdi5QYXJlbnQgb3Igdi5IdW1hbm9pZC5IZWFsdGggPD0gMCBvciBfRy5BdXRvRGVhdGhTdGVwID09IGZhbHNlIG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiTGlicmFyeSBLZXkiKSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiTGlicmFyeSBLZXkiKQpGYXN0QXR0YWNrID0gZmFsc2UKZW5kCmVuZAplbHNlCnRvVGFyZ2V0KGdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKTpGaW5kRmlyc3RDaGlsZCgiQXdha2VuZWQgSWNlIEFkbWlyYWwiKS5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSkKZW5kCmVuZAplbmQKZW5kCmVsc2UKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQnV5QmxhY2tMZWciKQplbmQKZW5kCmVuZCkKZW5kCmVuZCkKcGFnZTM6VG9nZ2xlKCJBdXRvIFNoYXJrbWFuS2FyYXRlXG7guK3guK3guYLguJXguYnguJfguLPguKvguKHguLHguJTguKHguJnguLjguKnguKLguYzguYDguIfguLfguK3guIEiLF9HLkF1dG9TaGFya01hbkthcmF0ZSwgZnVuY3Rpb24odmFsdWUpCl9HLkF1dG9TaGFya01hbkthcmF0ZSA9IHZhbHVlCmlmIF9HLkF1dG9TaGFya01hbkthcmF0ZSB0aGVuCkNvbSgiRl8iLCAiQnV5U2hhcmttYW5LYXJhdGUiKQplbmQKZW5kKQp0YXNrLnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgdGFzay53YWl0KCkgZG8KcGNhbGwoZnVuY3Rpb24oKQppZiBfRy5BdXRvU2hhcmtNYW5LYXJhdGUgdGhlbgppZiBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXI6RmluZEZpcnN0Q2hpbGQoIldlYXBvbkFzc2V0Q2FjaGUiKSB0aGVuCmlmIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJGaXNobWFuIEthcmF0ZSIpIG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiRmlzaG1hbiBLYXJhdGUiKSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiU2hhcmttYW4gS2FyYXRlIikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJTaGFya21hbiBLYXJhdGUiKSB0aGVuCmlmIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJGaXNobWFuIEthcmF0ZSIpIGFuZCBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiRmlzaG1hbiBLYXJhdGUiKS5MZXZlbC5WYWx1ZSA+PSA0MDAgdGhlbgpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJCdXlTaGFya21hbkthcmF0ZSIpCl9HLlNlbGVjdFdlYXBvbiAgPSAiU2hhcmttYW4gS2FyYXRlIgplbmQKaWYgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJGaXNobWFuIEthcmF0ZSIpIGFuZCBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkZpc2htYW4gS2FyYXRlIikuTGV2ZWwuVmFsdWUgPj0gNDAwIHRoZW4KZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQnV5U2hhcmttYW5LYXJhdGUiKQpfRy5TZWxlY3RXZWFwb24gID0gIlNoYXJrbWFuIEthcmF0ZSIKZW5kCmlmIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJGaXNobWFuIEthcmF0ZSIpIGFuZCBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiRmlzaG1hbiBLYXJhdGUiKS5MZXZlbC5WYWx1ZSA8PSA0MDAgdGhlbgpfRy5TZWxlY3RXZWFwb24gPSAiRmlzaG1hbiBLYXJhdGUiCmVuZAplbHNlCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkJ1eUZpc2htYW5LYXJhdGUiKQplbmQKZW5kCmVsc2VpZiBfRy5BdXRvRnVsbHlTaGFya01hbkthcmF0ZSB0aGVuCmlmIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkZpc2htYW4gS2FyYXRlIikgYW5kIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkZpc2htYW4gS2FyYXRlIikuTGV2ZWwuVmFsdWUgPj0gNDAwIG9yIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiRmlzaG1hbiBLYXJhdGUiKSBhbmQgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJGaXNobWFuIEthcmF0ZSIpLkxldmVsLlZhbHVlID49IDQwMCB0aGVuCmlmIHN0cmluZy5maW5kKGdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkJ1eVNoYXJrbWFuS2FyYXRlIiksICJrZXlzIikgdGhlbgppZiBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIldhdGVyIEtleSIpIG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJXYXRlciBLZXkiKSB0aGVuCnJlcGVhdAp0YXNrLndhaXQoKQp0b1RhcmdldCgtMjYwNC42OTU4LCAyMzkuNDMyNTI2LCAtMTAzMTUuMTk4MiwgMC4wNDI1NzAxMzY1LCAwLCAtMC45OTkwOTM0MTMsMCwgMSwwLCAwLjk5OTA5MzQxMywgMCwgMC4wNDI1NzAxMzY1KQp1bnRpbCAoQ0ZyYW1lLm5ldygtMjYwNC42OTU4LCAyMzkuNDMyNTI2LCAtMTAzMTUuMTk4MiwgMC4wNDI1NzAxMzY1LCAwLCAtMC45OTkwOTM0MTMsIDAsIDEsIDAsIDAuOTk5MDkzNDEzLCAwLCAwLjA0MjU3MDEzNjUpLlBvc2l0aW9uIC0gZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLk1hZ25pdHVkZSA8PSAzIG9yIG5vdCBfRy5BdXRvX0Z1bGx5X1NoYXJrTWFuX0thcmF0ZQppZiAoQ0ZyYW1lLm5ldygtMjYwNC42OTU4LCAyMzkuNDMyNTI2LCAtMTAzMTUuMTk4MiwgMC4wNDI1NzAxMzY1LCAwLCAtMC45OTkwOTM0MTMsIDAsIDEsIDAsIDAuOTk5MDkzNDEzLCAwLCAwLjA0MjU3MDEzNjUpLlBvc2l0aW9uIC0gZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLk1hZ25pdHVkZSA8PSAzIHRoZW4Kd2FpdCgxLjIpCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkJ1eVNoYXJrbWFuS2FyYXRlIiwgdHJ1ZSkKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQnV5U2hhcmttYW5LYXJhdGUiKQp3YWl0KDAuNSkKZW5kCmVsc2VpZiBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIkZpc2htYW4gS2FyYXRlIikgYW5kIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiRmlzaG1hbiBLYXJhdGUiKS5MZXZlbC5WYWx1ZSA+PSA0MDAgb3IgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJGaXNobWFuIEthcmF0ZSIpIGFuZCBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIkZpc2htYW4gS2FyYXRlIikuTGV2ZWwuVmFsdWUgPj0gNDAwIHRoZW4KaWYgZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpOkZpbmRGaXJzdENoaWxkKCJUaWRlIEtlZXBlciIpIG9yIGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpGaW5kRmlyc3RDaGlsZCgiVGlkZSBLZWVwZXIiKSB0aGVuCmlmIGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpGaW5kRmlyc3RDaGlsZCgiVGlkZSBLZWVwZXIiKSB0aGVuCmZvciBpLCB2IGluIHBhaXJzKGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpHZXRDaGlsZHJlbigpKSBkbwppZiB2Lk5hbWUgPT0gIlRpZGUgS2VlcGVyIiB0aGVuCnJlcGVhdAp0YXNrLndhaXQoKQppZiBnYW1lLldvcmtzcGFjZS5FbmVtaWVzOkZpbmRGaXJzdENoaWxkKHYuTmFtZSkgdGhlbgppZiAodi5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uIC0gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKS5tYWduaXR1ZGUgPiAyMDAgdGhlbgpGYXJtdHdlZW4gPSB0b1RhcmdldCh2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lKQplbHNlaWYgKHYuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbiAtIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikubWFnbml0dWRlIDw9IDIwMCB0aGVuCmlmIEZhcm10d2VlbiB0aGVuIEZhcm10d2VlbjpTdG9wKCkgZW5kCkZhc3RBdHRhY2sgPSB0cnVlCmlmIG5vdCBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKF9HLlNlbGVjdFdlYXBvbikgdGhlbgp0YXNrLndhaXQoKQpFcXVpcFdlYXBvbihfRy5TZWxlY3RXZWFwb24pCmVuZAppZiBub3QgX0cuRmFzdEF0dGFjayB0aGVuCmdhbWU6R2V0U2VydmljZSAnVmlydHVhbFVzZXInOkNhcHR1cmVDb250cm9sbGVyKCkKZ2FtZTpHZXRTZXJ2aWNlICdWaXJ0dWFsVXNlcic6QnV0dG9uMURvd24oVmVjdG9yMi5uZXcoMTI4MCwgNjcyKSkKZW5kCnYuSHVtYW5vaWRSb290UGFydC5TaXplID0gVmVjdG9yMy5uZXcoNjAsIDYwLCA2MCkKdi5IdW1hbm9pZC5KdW1wUG93ZXIgPSAwCnYuSHVtYW5vaWQuV2Fsa1NwZWVkID0gMAp2Lkh1bWFub2lkUm9vdFBhcnQuQ2FuQ29sbGlkZSA9IGZhbHNlCnYuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTEpCnRvVGFyZ2V0KHYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgKiBNZXRob2RGYXJtKQppZiBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJCbGFjayBMZWciKSBhbmQgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiQmxhY2sgTGVnIikuTGV2ZWwuVmFsdWUgPj0gMTUwIHRoZW4KZ2FtZTpzZXJ2aWNlKCdWaXJ0dWFsSW5wdXRNYW5hZ2VyJyk6U2VuZEtleUV2ZW50KHRydWUsICJWIiwgZmFsc2UsIGdhbWUpCmdhbWU6c2VydmljZSgnVmlydHVhbElucHV0TWFuYWdlcicpOlNlbmRLZXlFdmVudChmYWxzZSwgIlYiLCBmYWxzZSwgZ2FtZSkKZW5kCmVuZAplbmQKdW50aWwgbm90IHYuUGFyZW50IG9yIHYuSHVtYW5vaWQuSGVhbHRoIDw9IDAgb3IgX0cuQXV0b0RlYXRoU3RlcCA9PSBmYWxzZSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkxpYnJhcnkgS2V5Iikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIkxpYnJhcnkgS2V5IikKRmFzdEF0dGFjayA9IGZhbHNlCmVuZAplbmQKZWxzZQp0b1RhcmdldChnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIik6RmluZEZpcnN0Q2hpbGQoIlRpZGUgS2VlcGVyIikuSHVtYW5vaWRSb290UGFydC5DRnJhbWUpCmVuZAplbmQKZW5kCmVsc2UKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQnV5U2hhcmttYW5LYXJhdGUiKQplbmQKZWxzZQpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJCdXlGaXNobWFuS2FyYXRlIikKZW5kCmVuZAplbmQpCmVuZAplbmQpCnBhZ2UzOlRvZ2dsZSgiQXV0byBEcmFnb25UYWxvblxu4Lit4Lit4LmC4LiV4LmJ4LiX4Liz4Lir4Lih4Lix4LiU4Lih4Lix4LiH4LiB4LijIiwgIF9HLkF1dG9EcmFnb25UYWxvbiAsIGZ1bmN0aW9uKHZhbHVlKQpfRy5BdXRvRHJhZ29uVGFsb24gPSB2YWx1ZQppZiBfRy5BdXRvRHJhZ29uVGFsb24gdGhlbgpDb20oIkZfIiwgIkJsYWNrYmVhcmRSZXdhcmQiLCAiRHJhZ29uQ2xhdyIsICIyIikKZW5kCmVuZCkKdGFzay5zcGF3bihmdW5jdGlvbigpCndoaWxlIHRhc2sud2FpdCgpIGRvCnBjYWxsKGZ1bmN0aW9uKCkKaWYgX0cuQXV0b0RyYWdvblRhbG9uIHRoZW4KaWYgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyOkZpbmRGaXJzdENoaWxkKCJXZWFwb25Bc3NldENhY2hlIikgdGhlbgppZiBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIkRyYWdvbiBDbGF3IikgYW5kIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiRHJhZ29uIENsYXciKS5MZXZlbC5WYWx1ZSA8PSAzOTkgYW5kIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWQuSGVhbHRoID4gMCB0aGVuCl9HLlNlbGVjdFdlYXBvbiA9ICJEcmFnb24gQ2xhdyIKZW5kCmlmIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkRyYWdvbiBDbGF3IikgYW5kIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkRyYWdvbiBDbGF3IikuTGV2ZWwuVmFsdWUgPD0gMzk5IGFuZCBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkLkhlYWx0aCA+IDAgdGhlbgpfRy5TZWxlY3RXZWFwb24gPSAiRHJhZ29uIENsYXciCmVuZAppZiBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIkRyYWdvbiBDbGF3IikgYW5kIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiRHJhZ29uIENsYXciKS5MZXZlbC5WYWx1ZSA+PSA0MDAgYW5kIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWQuSGVhbHRoID4gMCB0aGVuCl9HLlNlbGVjdFdlYXBvbiA9ICJEcmFnb24gQ2xhdyIKaWYgZ2FtZS5SZXBsaWNhdGVkU3RvcmFnZS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkJ1eURyYWdvblRhbG9uIiwgdHJ1ZSkgPT0gMyB0aGVuCmxvY2FsIHN0cmluZ18xID0gIkJvbmVzIjsKbG9jYWwgc3RyaW5nXzIgPSAiQnV5IjsKbG9jYWwgbnVtYmVyXzEgPSAxOwpsb2NhbCBudW1iZXJfMiA9IDE7CmxvY2FsIFRhcmdldCA9IGdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzWyJDb21tRl8iXTsKVGFyZ2V0Okludm9rZVNlcnZlcihzdHJpbmdfMSwgc3RyaW5nXzIsIG51bWJlcl8xLCBudW1iZXJfMik7CmxvY2FsIHN0cmluZ18xID0gIkJ1eURyYWdvblRhbG9uIjsKbG9jYWwgYm9vbF8xID0gdHJ1ZTsKbG9jYWwgVGFyZ2V0ID0gZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXNbIkNvbW1GXyJdOwpUYXJnZXQ6SW52b2tlU2VydmVyKHN0cmluZ18xLCBib29sXzEpOwplbHNlaWYgZ2FtZS5SZXBsaWNhdGVkU3RvcmFnZS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkJ1eURyYWdvblRhbG9uIiwgdHJ1ZSkgPT0gMSB0aGVuCmdhbWUuUmVwbGljYXRlZFN0b3JhZ2UuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJCdXlEcmFnb25UYWxvbiIpCmVsc2UKbG9jYWwgc3RyaW5nXzEgPSAiQnV5RHJhZ29uVGFsb24iO2xvY2FsIGJvb2xfMSA9IHRydWU7CmxvY2FsIFRhcmdldCA9IGdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzWyJDb21tRl8iXTtUYXJnZXQ6SW52b2tlU2VydmVyKHN0cmluZ18xLCBib29sXzEpOwpsb2NhbCBzdHJpbmdfMSA9ICJCdXlEcmFnb25UYWxvbiI7CmxvY2FsIFRhcmdldCA9IGdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzWyJDb21tRl8iXTtUYXJnZXQ6SW52b2tlU2VydmVyKHN0cmluZ18xKTsKZW5kCmVuZAppZiBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJEcmFnb24gQ2xhdyIpIGFuZCBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJEcmFnb24gQ2xhdyIpLkxldmVsLlZhbHVlID49IDQwMCBhbmQgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZC5IZWFsdGggPiAwIHRoZW4KX0cuU2VsZWN0V2VhcG9uID0gIkRyYWdvbiBDbGF3IgppZiBnYW1lLlJlcGxpY2F0ZWRTdG9yYWdlLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQnV5RHJhZ29uVGFsb24iLCB0cnVlKSA9PSAzIHRoZW4KbG9jYWwgc3RyaW5nXzEgPSAiQm9uZXMiOwpsb2NhbCBzdHJpbmdfMiA9ICJCdXkiOwpsb2NhbCBudW1iZXJfMSA9IDE7CmxvY2FsIG51bWJlcl8yID0gMTsKbG9jYWwgVGFyZ2V0ID0gZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXNbIkNvbW1GXyJdO1RhcmdldDpJbnZva2VTZXJ2ZXIoc3RyaW5nXzEsIHN0cmluZ18yLCBudW1iZXJfMSwgbnVtYmVyXzIpOwpsb2NhbCBzdHJpbmdfMSA9ICJCdXlEcmFnb25UYWxvbiI7CmxvY2FsIGJvb2xfMSA9IHRydWU7CmxvY2FsIFRhcmdldCA9IGdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzWyJDb21tRl8iXTtUYXJnZXQ6SW52b2tlU2VydmVyKHN0cmluZ18xLCBib29sXzEpOwplbHNlaWYgZ2FtZS5SZXBsaWNhdGVkU3RvcmFnZS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkJ1eURyYWdvblRhbG9uIiwgdHJ1ZSkgPT0gMSB0aGVuCmdhbWUuUmVwbGljYXRlZFN0b3JhZ2UuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJCdXlEcmFnb25UYWxvbiIpCmVsc2UKbG9jYWwgc3RyaW5nXzEgPSAiQnV5RHJhZ29uVGFsb24iOwpsb2NhbCBib29sXzEgPSB0cnVlOwpsb2NhbCBUYXJnZXQgPSBnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlc1siQ29tbUZfIl07VGFyZ2V0Okludm9rZVNlcnZlcihzdHJpbmdfMSwgYm9vbF8xKTsKbG9jYWwgc3RyaW5nXzEgPSAiQnV5RHJhZ29uVGFsb24iOwpsb2NhbCBUYXJnZXQgPSBnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlc1siQ29tbUZfIl07VGFyZ2V0Okludm9rZVNlcnZlcihzdHJpbmdfMSk7CmVuZAplbmQKZW5kCmVuZAplbmQpCmVuZAplbmQpCnBhZ2U0OlNlcGVyYXRvcigi8J+agCIpCnBhZ2U0OkJ1dHRvbigiVGVsZXBvcnQgVG8gV29ybGQxXG7guYDguJfguYDguKXguJ7guK3guKPguYzguJXguYTguJvguJfguLDguYDguKUgMSIsIGZ1bmN0aW9uKHZhbHVlKQpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJUcmF2ZWxNYWluIikKZW5kKQpwYWdlNDpCdXR0b24oIlRlbGVwb3J0IFRvIFdvcmxkMlxu4LmA4LiX4LmA4Lil4Lie4Lit4Lij4LmM4LiV4LmE4Lib4LiX4Liw4LmA4LilIDIiLCBmdW5jdGlvbih2YWx1ZSkKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiVHJhdmVsRHJlc3Nyb3NhIikKZW5kKQpwYWdlNDpCdXR0b24oIlRlbGVwb3J0IFRvIFdvcmxkM1xu4LmA4LiX4LmA4Lil4Lie4Lit4Lij4LmM4LiV4LmE4Lib4LiX4Liw4LmA4LilIDMiLCBmdW5jdGlvbih2YWx1ZSkKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiVHJhdmVsWm91IikKZW5kKQpUZWxlcG9ydFRhYmxlID0ge30KaWYgV29ybGQzIHRoZW4KVGVsZXBvcnRUYWJsZSA9IHsgIlBvcnQgVG93biIsICJIeWRyYSBJc2xhbmQiLCAiR2FpbnQgVHJlZSIsICJNYW5zaW9uIiwgIkNhc3RsZSBvbiB0aGUgU2VhIiwgIkhhdW50ZWQgQ2FzdGxlIiwiSWNlY3JlYW0gSXNsYW5kIiwgIlBlYW51dCBJc2xhbmQiLCAiQ2FrZSBMb2FmIiwgIkNhbmR5IElzYW5kIiwgIlRpa2lPdXRwb3N0IiB9CmVuZApwYWdlNDpTZXBlcmF0b3IoIvCfj53vuI8iKQpwYWdlNDpEcm9wZG93bigiU2VsZWN0SXNsYW5kXG7guYDguKXguLfguK3guIHguYDguIHguLLguLAiLFRlbGVwb3J0VGFibGUsIGZ1bmN0aW9uKHZhbHVlKQpfRy5TZWxlY3RMb2NhbFRlbGVwb3J0ID0gdmFsdWUKZW5kKQpwYWdlNDpUb2dnbGUoIlRlbGVwb3J0IFRvIFNlbGVjdGVkXG7guYDguJfguYDguKXguJ7guK3guKPguYzguJXguYTguJvguJfguLXguYjguYDguKXguLfguK3guIHguYTguKfguYkiLCBfRy5UZWxlcG9ydElzbGFuZCxmdW5jdGlvbih2YWx1ZSkKX0cuVGVsZXBvcnRJc2xhbmQgPSB2YWx1ZQppZiBfRy5UZWxlcG9ydElzbGFuZCB0aGVuCmlmIFdvcmxkMyAgdGhlbgppZiBfRy5TZWxlY3RMb2NhbFRlbGVwb3J0ID09ICJQb3J0IFRvd24iIHRoZW4KdG9UYXJnZXQoQ0ZyYW1lLm5ldygtMjc1LjIxNjE1NjAwNTg2LCA0My43NTU3MzczMDQ2ODgsIDU0NTEuMDY1OTE3OTY4OCkpCmVuZAppZiBfRy5TZWxlY3RMb2NhbFRlbGVwb3J0ID09ICJNYW5zaW9uIiB0aGVuCmxvY2FsIGFyZ3MgPSB7ClsxXSA9ICJyZXF1ZXN0RW50cmFuY2UiLApbMl0gPSBWZWN0b3IzLm5ldygtMTI1NDguNTk1NzAzMTI1LCAzMzcuMTcwMDEzNDI3NzMsIC03NTU0LjYxMDM1MTU2MjUpCn0KZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcih1bnBhY2soYXJncykpCmVuZAppZiBfRy5TZWxlY3RMb2NhbFRlbGVwb3J0ID09ICJDYXN0bGUgb24gdGhlIFNlYSIgdGhlbgpsb2NhbCBhcmdzID0gewpbMV0gPSAicmVxdWVzdEVudHJhbmNlIiwKWzJdID0gVmVjdG9yMy5uZXcoLTUwNzkuNDQ2Nzc3MzQzNzUsIDMxMy43MjkzMzk1OTk2MDk0LCAtMzE1MS4wNjUxODU1NDY4NzUpCn0KZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcih1bnBhY2soYXJncykpCmVuZAppZiBfRy5TZWxlY3RMb2NhbFRlbGVwb3J0ID09ICJIeWRyYSBJc2xhbmQiIHRoZW4KdG9UYXJnZXQoQ0ZyYW1lLm5ldyg1NTQxLjI2ODU1NDY4NzUsIDY2OC4zMDQ1NjU0Mjk2OSwgMTk1LjQ4MDY5NzYzMTg0KSkKZW5kCmlmIF9HLlNlbGVjdExvY2FsVGVsZXBvcnQgPT0gIkdhaW50IFRyZWUiIHRoZW4KdG9UYXJnZXQoQ0ZyYW1lLm5ldygyMjc2LjA4NTkzNzUsIDI1Ljg3ODUwMTg5MjA5LCAtNjQ5My4wMzEyNSkpCmVuZAppZiBfRy5TZWxlY3RMb2NhbFRlbGVwb3J0ID09ICJIYXVudGVkIENhc3RsZSIgdGhlbgp0b1RhcmdldChDRnJhbWUubmV3KC05NTE1LjA3MzI0LCAxNDIuMTMwNjE1LCA1NTM3LjU4Mzk4KSkKZW5kCmlmIF9HLlNlbGVjdExvY2FsVGVsZXBvcnQgPT0gIkljZWNyZWFtIElzbGFuZCIgdGhlbgp0b1RhcmdldChDRnJhbWUubmV3KC04ODAuODk0NTMxLCAxMTguMjQ1MzU0LCAtMTEwMzAuNzYwNywgLTAuODY3MTc0OTgzLCAxLjQ4NTAxMjM0ZS0wOSwgMC40OTgwMDM1NzIsCjIuNzA0NTc3ODllLTA4LCAxLCA0LjQxMTI5NTg2ZS0wOCwgLTAuNDk4MDAzNTcyLCA1LjE3MjI1NDhlLTA4LCAtMC44NjcxNzQ5ODMpKQplbmQKaWYgX0cuU2VsZWN0TG9jYWxUZWxlcG9ydCA9PSAiUGVhbnV0IElzbGFuZCIgdGhlbgp0b1RhcmdldChDRnJhbWUubmV3KC0yMTI0LjA2NzM4LCA0NC4wNzIzNDk1LCAtMTAxNzkuODI4MSwgLTAuNjIzMTI1NDk0LCAtMi41NTkwODE5MWUtMDcsIC0wLjc4MjEyMTgzNywKLTEuNDA1MzA1NzRlLTA3LCAxLCAtMi4xNTIzNTAwNWUtMDcsIDAuNzgyMTIxODM3LCAtMi40MjA2MzkzM2UtMDgsIC0wLjYyMzEyNTQ5NCkpCmVuZAppZiBfRy5TZWxlY3RMb2NhbFRlbGVwb3J0ID09ICJMYWIiIHRoZW4KdG9UYXJnZXQoQ0ZyYW1lLm5ldygtNTA1Ny4xNDY0ODQzNzUsIDMxNC41NDEzMjA4MDA3OCwgLTI5MzQuNzk5NTYwNTQ2OSkpCmVuZAppZiBfRy5TZWxlY3RMb2NhbFRlbGVwb3J0ID09ICJDYWtlIExvYWYiIHRoZW4KdG9UYXJnZXQoQ0ZyYW1lLm5ldygtMTk3Ny4zNjc2NzU3ODEyNSwgMjUxLjUwOTUyMTQ4NDM3NSwgLTEyMzgwLjQxODk0NTMxMjUpKQplbmQKaWYgX0cuU2VsZWN0TG9jYWxUZWxlcG9ydCA9PSAiQ2FuZHkgSXNhbmQiIHRoZW4KdG9UYXJnZXQoQ0ZyYW1lLm5ldygtMTA2Ny4wMjI0NiwgMTQuNjQwNDIyOCwgLTE0NDQ4LjE0NTUsIDAuOTA3NjM1MjcyLCAtNy4yOTM0MDQ5OWUtMDgsIDAuNDE5NzU5NzIxLCA2LjczNjY5NjE4ZS0wOCwgMSwgMi44MDg2MTEzZS0wOCwgLTAuNDE5NzU5NzIxLCAyLjc4NTk4OTQ0ZS0wOSwgMC45MDc2MzUyNzIpICogQ0ZyYW1lLm5ldygwLDEwMCwwKSkKZW5kCmlmIF9HLlNlbGVjdExvY2FsVGVsZXBvcnQgPT0gIlRpa2lPdXRwb3N0IiB0aGVuCnRvVGFyZ2V0KENGcmFtZS5uZXcoLTE2NzUzLjU5NzcsIDE4OS41MjgxMDcsIDQ1MS43OTczMzMsIC0wLjc3NzE0NTUwNSwgMCwgLTAuNjI5MzIxMDM5LCAwLCAxLCAwLCAwLjYyOTMyMTAzOSwgMCwgLTAuNzc3MTQ1NTA1KSkKZW5kCmVuZAplbmQKZW5kKQpwYWdlNDpCdXR0b24oIlN0b3AgVGVsZXBvcnRcbuC4q+C4ouC4uOC4lOC4geC4suC4o+C5gOC4l+C5gOC4peC4nuC4reC4o+C5jOC4lSIsIGZ1bmN0aW9uKHZhbHVlKQp0b1RhcmdldChnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lKQplbmQpCnBhZ2UxOlNlcGVyYXRvcigiT2JzZXJ2YXRpb24v4Liu4Liy4LiE4Li04Liq4Lix4LiH4LmA4LiB4LiVIikKbG9jYWwgT2JzZXJ2YXRpb25SYW5nZSA9IHBhZ2UxOkxhYmVsKCIuLi4iKQpzcGF3bihmdW5jdGlvbigpCndoaWxlIHdhaXQoKSBkbwpwY2FsbChmdW5jdGlvbigpCk9ic2VydmF0aW9uUmFuZ2U6U2V0KCJMdk9ic2VydmF0aW9uIDogIi4ubWF0aC5mbG9vcihnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5WaXNpb25SYWRpdXMuVmFsdWUpKQplbmQpCmVuZAplbmQpCnBhZ2UxOlRvZ2dsZSgiQXV0byBPYnNlcnZhdGlvblYyXG7guJfguLPguK7guLLguITguLTguKrguLHguIfguYDguIHguJXguILguLHguYnguJnguKrguK3guIciLF9HLkF1dG9LZW5IYWtpVjIsIGZ1bmN0aW9uKHZhbHVlKQpfRy5BdXRvS2VuSGFraVYyID0gdmFsdWUKaWYgdmFsdWUgPT0gZmFsc2UgdGhlbgp0YXNrLndhaXQoKQp0b1RhcmdldChnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUpCnRhc2sud2FpdCgpCmVuZAplbmQpCnRhc2suc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB0YXNrLndhaXQoKSBkbwpwY2FsbChmdW5jdGlvbigpCmlmIF9HLkF1dG9LZW5IYWtpVjIgdGhlbgppZiBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5QbGF5ZXJHdWkuTWFpbi5RdWVzdC5WaXNpYmxlID09IGZhbHNlIHRoZW4KcmVwZWF0CnRvVGFyZ2V0KENGcmFtZS5uZXcoLTEyNDQ0Ljc4NTE1NjI1LCAzMzIuNDAzOTYxMTgxNjQsIC03NjczLjE4MDY2NDA2MjUpKQp0YXNrLndhaXQoKQp1bnRpbCBub3QgX0cuQXV0b0tlbkhha2lWMiBvciAoZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uIC0gVmVjdG9yMy5uZXcoLTEyNDQ0Ljc4NTE1NjI1LCAzMzIuNDAzOTYxMTgxNjQsIC03NjczLjE4MDY2NDA2MjUpKS5NYWduaXR1ZGUgPD0gMTAKd2FpdCguNSkKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQ2l0aXplblF1ZXN0UHJvZ3Jlc3MiLCJDaXRpemVuIikKd2FpdCgxKQpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJTdGFydFF1ZXN0IiwiQ2l0aXplblF1ZXN0IiwgMSkKZWxzZQppZiBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIkJhbmFuYSIpIGFuZCBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIkFwcGxlIikgYW5kIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiUGluZWFwcGxlIikgdGhlbgpyZXBlYXQKdG9UYXJnZXQoQ0ZyYW1lLm5ldygtMTI0NDQuNzg1MTU2MjUsIDMzMi40MDM5NjExODE2NCwgLTc2NzMuMTgwNjY0MDYyNSkpCnRhc2sud2FpdCgpCnVudGlsIG5vdCBfRy5BdXRvS2VuSGFraVYyIG9yIChnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24gLSBWZWN0b3IzLm5ldygtMTI0NDQuNzg1MTU2MjUsIDMzMi40MDM5NjExODE2NCwgLTc2NzMuMTgwNjY0MDYyNSkpLk1hZ25pdHVkZSA8PSAxMAp3YWl0KC41KQpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJDaXRpemVuUXVlc3RQcm9ncmVzcyIsICJDaXRpemVuIikKZWxzZWlmIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiRnJ1aXQgQm93bCIpIG9yIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkZydWl0IEJvd2wiKSB0aGVuCnJlcGVhdAp0b1RhcmdldChDRnJhbWUubmV3KC0xMDkyMC4xMjUsIDYyNC4yMDI3NTg3ODkwNiwgLTEwMjY2Ljk5NTExNzE4OCkpCnRhc2sud2FpdCgpCnVudGlsIG5vdCBfRy5BdXRvS2VuSGFraVYyIG9yIChnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24gLSBWZWN0b3IzLm5ldygtMTA5MjAuMTI1LCA2MjQuMjAyNzU4Nzg5MDYsIC0xMDI2Ni45OTUxMTcxODgpKS5NYWduaXR1ZGUgPD0gMTAKd2FpdCguNSkKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiS2VuVGFsazIiLCJTdGFydCIpCndhaXQoMSkKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiS2VuVGFsazIiLCJCdXkiKQplbHNlaWYgc3RyaW5nLmZpbmQoZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuUGxheWVyR3VpLk1haW4uUXVlc3QuQ29udGFpbmVyLlF1ZXN0VGl0bGUuVGl0bGUuVGV4dCwgIkRlZmVhdCA1MCBGb3Jlc3QgUGlyYXRlcyIpIHRoZW4KaWYgZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkZpbmRGaXJzdENoaWxkKCJGb3Jlc3QgUGlyYXRlIikgdGhlbgpmb3IgaSwgdiBpbiBwYWlycyhnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLkVuZW1pZXM6R2V0Q2hpbGRyZW4oKSkgZG8KaWYgdi5OYW1lID09ICJGb3Jlc3QgUGlyYXRlIiB0aGVuCnJlcGVhdAp0YXNrLndhaXQoKQpCcmluZ01vYiA9IHRydWUKRmFzdEF0dGFjayA9IHRydWUKaWYgbm90IGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoX0cuU2VsZWN0V2VhcG9uKSB0aGVuCnRhc2sud2FpdCgpCkVxdWlwV2VhcG9uKF9HLlNlbGVjdFdlYXBvbikKZW5kClBvc01vbiA9IHYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUKaWYgbm90IF9HLkZhc3RBdHRhY2sgdGhlbgpnYW1lOkdldFNlcnZpY2UgJ1ZpcnR1YWxVc2VyJzpDYXB0dXJlQ29udHJvbGxlcigpCmdhbWU6R2V0U2VydmljZSAnVmlydHVhbFVzZXInOkJ1dHRvbjFEb3duKFZlY3RvcjIubmV3KDEyODAsIDY3MikpCmVuZAp2Lkh1bWFub2lkUm9vdFBhcnQuU2l6ZSA9IFZlY3RvcjMubmV3KDgwLCA4MCwgODApCnYuSHVtYW5vaWQuSnVtcFBvd2VyID0gMAp2Lkh1bWFub2lkLldhbGtTcGVlZCA9IDAKdi5IdW1hbm9pZFJvb3RQYXJ0LkNhbkNvbGxpZGUgPSBmYWxzZQp2Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDExKQp2Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDE0KQp2Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDE2KQp0b1RhcmdldCh2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lICogTWV0aG9kRmFybSkKdW50aWwgbm90IF9HLkF1dG9LZW5IYWtpVjIgb3Igdi5IdW1hbm9pZC5IZWFsdGggPD0gMApCcmluZ01vYiA9IGZhbHNlCkZhc3RBdHRhY2sgPSBmYWxzZQplbmQKZW5kCmVsc2UKcmVwZWF0CnRvVGFyZ2V0KENGcmFtZS5uZXcoLTEzMjc3LjU2ODM1OTM3NSwgMzcwLjM0MTg1NzkxMDE2LCAtNzgyMS4xNTcyMjY1NjI1KSkKdGFzay53YWl0KCkKdW50aWwgbm90IF9HLkF1dG9LZW5IYWtpVjIgb3IgKGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbiAtIFZlY3RvcjMubmV3KC0xMzI3Ny41NjgzNTkzNzUsIDM3MC4zNDE4NTc5MTAxNiwgLTc4MjEuMTU3MjI2NTYyNSkpLk1hZ25pdHVkZSA8PSAxMAplbmQKZWxzZWlmIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLlBsYXllckd1aS5NYWluLlF1ZXN0LkNvbnRhaW5lci5RdWVzdFRpdGxlLlRpdGxlLlRleHQgPT0gIkRlZmVhdCAgQ2FwdGFpbiBFbGVwaGFudCAoMC8xKSIgdGhlbgppZiBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLkVuZW1pZXM6RmluZEZpcnN0Q2hpbGQoIkNhcHRhaW4gRWxlcGhhbnQiKSB0aGVuCmZvciBpLCB2IGluIHBhaXJzKGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpHZXRDaGlsZHJlbigpKSBkbwppZiB2Lk5hbWUgPT0gIkNhcHRhaW4gRWxlcGhhbnQiIHRoZW4KcmVwZWF0CnRhc2sud2FpdCgpCkJyaW5nTW9iID0gdHJ1ZQpGYXN0QXR0YWNrID0gdHJ1ZQppZiBub3QgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZChfRy5TZWxlY3RXZWFwb24pIHRoZW4KdGFzay53YWl0KCkKRXF1aXBXZWFwb24oX0cuU2VsZWN0V2VhcG9uKQplbmQKUG9zTW9uID0gdi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZQppZiBub3QgX0cuRmFzdEF0dGFjayB0aGVuCmdhbWU6R2V0U2VydmljZSAnVmlydHVhbFVzZXInOkNhcHR1cmVDb250cm9sbGVyKCkKZ2FtZTpHZXRTZXJ2aWNlICdWaXJ0dWFsVXNlcic6QnV0dG9uMURvd24oVmVjdG9yMi5uZXcoMTI4MCwgNjcyKSkKZW5kCnYuSHVtYW5vaWRSb290UGFydC5TaXplID0gVmVjdG9yMy5uZXcoODAsIDgwLCA4MCkKdi5IdW1hbm9pZC5KdW1wUG93ZXIgPSAwCnYuSHVtYW5vaWQuV2Fsa1NwZWVkID0gMAp2Lkh1bWFub2lkUm9vdFBhcnQuQ2FuQ29sbGlkZSA9IGZhbHNlCnYuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTEpCnYuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTQpCnYuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTYpCnRvVGFyZ2V0KHYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgKiBNZXRob2RGYXJtKQp1bnRpbCBub3QgX0cuQXV0b0tlbkhha2lWMiBvciB2Lkh1bWFub2lkLkhlYWx0aCA8PSAwCkJyaW5nTW9iID0gZmFsc2UKRmFzdEF0dGFjayA9IGZhbHNlCmVuZAplbmQKZWxzZQpyZXBlYXQKdG9UYXJnZXQoQ0ZyYW1lLm5ldygtMTM0OTMuMTI4OTA2MjUsIDMxOC44OTU1MzgzMzAwOCwgLTgzNzMuNzkxOTkyMTg3NSkpCnRhc2sud2FpdCgpCnVudGlsIG5vdCBfRy5BdXRvS2VuSGFraVYyIG9yIChnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24gLSBWZWN0b3IzLm5ldygtMTM0OTMuMTI4OTA2MjUsIDMxOC44OTU1MzgzMzAwOCwgLTgzNzMuNzkxOTkyMTg3NSkpLk1hZ25pdHVkZSA8PSAxMAplbmQKZWxzZQpmb3IgaSwgdiBpbiBwYWlycyhnYW1lLldvcmtzcGFjZTpHZXREZXNjZW5kYW50cygpKSBkbwppZiB2Lk5hbWUgPT0gIkFwcGxlIiBvciB2Lk5hbWUgPT0gIkJhbmFuYSIgb3Igdi5OYW1lID09ICJQaW5lYXBwbGUiIHRoZW4Kdi5IYW5kbGUuQ0ZyYW1lID0gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSAqIENGcmFtZS5uZXcoMCwgMSwgMTApCnRhc2sud2FpdCgpCmZpcmV0b3VjaGludGVyZXN0KGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydCx2LkhhbmRsZSwgMCkKdGFzay53YWl0KCkKZW5kCmVuZAplbmQKZW5kCmVuZAplbmQpCmVuZAplbmQpCnBhZ2UxOlRvZ2dsZSgiQXV0byBGYXJtT2JzZXJ2YXRpb25cbuC4n+C4suC4o+C5jOC4oeC4ruC4suC4hOC4tOC4quC4seC4h+C5gOC4geC4lSIsX0cuU2V0dGluZ3MuQXV0b09ic2VydmF0aW9uLGZ1bmN0aW9uKHZhbHVlKQpfRy5BdXRvT2JzZXJ2YXRpb24gPSB2YWx1ZQpfRy5TZXR0aW5ncy5BdXRvT2JzZXJ2YXRpb24gPSB2YWx1ZQpTYXZlU2V0dGluZ3MoKQppZiB2YWx1ZSA9PSBmYWxzZSB0aGVuCnRhc2sud2FpdCgpCnRvVGFyZ2V0KGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSkKdGFzay53YWl0KCkKZW5kCmVuZCkKc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB3YWl0KCkgZG8KcGNhbGwoZnVuY3Rpb24oKQppZiBfRy5TZXR0aW5ncy5BdXRvT2JzZXJ2YXRpb24gdGhlbgpyZXBlYXQKdGFzay53YWl0KCkKaWYgbm90IGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLlBsYXllckd1aS5TY3JlZW5HdWk6RmluZEZpcnN0Q2hpbGQoIkltYWdlTGFiZWwiKSB0aGVuCndhaXQoNSkKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsVXNlciIpOkNhcHR1cmVDb250cm9sbGVyKCkKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsVXNlciIpOlNldEtleURvd24oIjB4NjUiKQp3YWl0KDIpCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbFVzZXIiKTpTZXRLZXlVcCgiMHg2NSIpCmVuZAp1bnRpbCBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5QbGF5ZXJHdWkuU2NyZWVuR3VpOkZpbmRGaXJzdENoaWxkKCJJbWFnZUxhYmVsIikgb3Igbm90IF9HLkF1dG9PYnNlcnZhdGlvbgplbmQKZW5kKQplbmQKZW5kKQpwYWdlMTpUb2dnbGUoIkF1dG8gRmFybU9ic2VydmF0aW9uIEhvcFxu4Lif4Liy4Lij4LmM4Lih4Liu4Liy4LiE4Li04Liq4Lix4LiH4LmA4LiB4LiV4Lii4LmJ4Liy4Lii4LmA4LiL4Li04LifIiwgX0cuQXV0b09ic2VydmF0aW9uX0hvcCwgZnVuY3Rpb24odmFsdWUpCl9HLkF1dG9PYnNlcnZhdGlvbl9Ib3AgPSB2YWx1ZQplbmQpCnNwYXduKGZ1bmN0aW9uKCkKcGNhbGwoZnVuY3Rpb24oKQp3aGlsZSB3YWl0KCkgZG8KaWYgX0cuU2V0dGluZ3MuQXV0b09ic2VydmF0aW9uIHRoZW4KaWYgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuVmlzaW9uUmFkaXVzLlZhbHVlID49IDYwMDAgdGhlbgpnYW1lOkdldFNlcnZpY2UoIlN0YXJ0ZXJHdWkiKTpTZXRDb3JlKCJTZW5kTm90aWZpY2F0aW9uIix7SWNvbiA9ICJyYnhhc3NldGlkOi8vMTYxMjkyMzUwNTQiLFRpdGxlID0gIk9ic2VydmF0aW9uIixUZXh0ID0gIllvdSBIYXZlIE1heCBPYnNlcnZhdGlvbiJ9KQp3YWl0KDIpCmVsc2UKaWYgV29ybGQzIHRoZW4KaWYgZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkZpbmRGaXJzdENoaWxkKCJHaWFudCBJc2xhbmRlciIpIHRoZW4KaWYKZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuUGxheWVyR3VpLlNjcmVlbkd1aTpGaW5kRmlyc3RDaGlsZCgiSW1hZ2VMYWJlbCIpCnRoZW4KcmVwZWF0CnRhc2sud2FpdCgpCmdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSA9CmdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpGaW5kRmlyc3RDaGlsZCgiR2lhbnQgSXNsYW5kZXIiKS5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSAqIENGcmFtZS5uZXcoMywgMCwgMCkKdW50aWwgX0cuQXV0b09ic2VydmF0aW9uID09IGZhbHNlIG9yCm5vdCBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5QbGF5ZXJHdWkuU2NyZWVuR3VpOkZpbmRGaXJzdENoaWxkKCJJbWFnZUxhYmVsIikKZWxzZQpyZXBlYXQKdGFzay53YWl0KCkKZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lID0KZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkZpbmRGaXJzdENoaWxkKCJHaWFudCBJc2xhbmRlciIpLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lICogQ0ZyYW1lLm5ldygwLCA1MCwgMCkKd2FpdCgxKQppZgpub3QgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuUGxheWVyR3VpLlNjcmVlbkd1aTpGaW5kRmlyc3RDaGlsZCgiSW1hZ2VMYWJlbCIpIGFuZCBfRy5BdXRvT2JzZXJ2YXRpb25fSG9wID09IHRydWUKdGhlbgpnYW1lOkdldFNlcnZpY2UoIlRlbGVwb3J0U2VydmljZSIpOlRlbGVwb3J0KGdhbWUuUGxhY2VJZCxnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllcikKZW5kCnVudGlsIF9HLkF1dG9PYnNlcnZhdGlvbiA9PSBmYWxzZSBvcgpnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5QbGF5ZXJHdWkuU2NyZWVuR3VpOkZpbmRGaXJzdENoaWxkKCJJbWFnZUxhYmVsIikKZW5kCmVsc2UKdG9UYXJnZXQoQ0ZyYW1lLm5ldyg0NTMwLjM1NDAwMzkwNjMsIDY1Ni43NTY5NTgwMDc4MSwgLTEzMS42MDk1Mjc1ODc4OSkpCmVuZAplbmQKZW5kCmVuZAplbmQKZW5kKQplbmQpCnBhZ2UxOlNlcGVyYXRvcigiQm9zc1xu4Lia4Lit4LiqIikKbG9jYWwgQm9zcyA9IHt9CmxvY2FsIEJvc3NOYW1lID0gcGFnZTE6RHJvcGRvd24oIlNlbGVjdEJvc3NcbuC5gOC4peC4t+C4reC4geC4muC4reC4qiIsQm9zcywgZnVuY3Rpb24odmFsdWUpCl9HLlNlbGVjdEJvc3MgPSB2YWx1ZQplbmQpCnBhZ2UxOkJ1dHRvbigiUmVmcmVzaFxu4Lij4Li14LmA4Lif4Lij4LiKIixmdW5jdGlvbigpCkJvc3NOYW1lOkNsZWFyKCkKZm9yIGksIHYgaW4gcGFpcnMoZ2FtZS5SZXBsaWNhdGVkU3RvcmFnZTpHZXRDaGlsZHJlbigpKSBkbwppZiB2Lk5hbWUgPT0gIkN5Ym9yZyIgb3Igdi5OYW1lID09ICJUaGUgR29yaWxsYSBLaW5nIiBvciB2Lk5hbWUgPT0gIld5c3BlciIgb3Igdi5OYW1lID09ICJUaHVuZGVyIEdvZCIgb3Igdi5OYW1lID09ICJNb2IgTGVhZGVyIiBvciB2Lk5hbWUgPT0gIkJvYmJ5IiBvciB2Lk5hbWUgPT0gIlNhYmVyIEV4cGVydCIgb3Igdi5OYW1lID09ICJXYXJkZW4iIG9yIHYuTmFtZSA9PSAiQ2hpZWYgV2FyZGVuIiBvciB2Lk5hbWUgPT0gIlN3YW4iIG9yIHYuTmFtZSA9PSAiTWFnbWEgQWRtaXJhbCIgIG9yIHYuTmFtZSA9PSAiRmlzaG1hbiBMb3JkIiBvciB2Lk5hbWUgPT0gIld5c3BlciIgb3Igdi5OYW1lID09ICJJY2UgQWRtaXJhbCIgb3Igdi5OYW1lID09ICJEaWFtb25kIiBvciB2Lk5hbWUgPT0gIkplcmVteSIgb3Igdi5OYW1lID09ICJGYWppdGEiIG9yIHYuTmFtZSA9PSAiRG9uIFN3YW4iIG9yIHYuTmFtZSA9PSAiU21va2UgQWRtaXJhbCIgb3Igdi5OYW1lID09ICJBd2FrZW5lZCBJY2UgQWRtaXJhbCIgb3Igdi5OYW1lID09ICJUaWRlIEtlZXBlciIgb3Igdi5OYW1lID09ICJEYXJrYmVhcmQiIG9yIHYuTmFtZSA9PSAiU3RvbmUiIG9yIHYuTmFtZSA9PSAiSXNsYW5kIEVtcHJlc3MiIG9yIHYuTmFtZSA9PSAiS2lsbyBBZG1pcmFsIiBvciB2Lk5hbWUgPT0gIkNhcHRhaW4gRWxlcGhhbnQiIG9yIHYuTmFtZSA9PSAiQmVhdXRpZnVsIFBpcmF0ZSIgb3Igdi5OYW1lID09ICJMb25nbWEiIG9yIHYuTmFtZSA9PSAiQ2FrZSBRdWVlbiIgb3Igdi5OYW1lID09ICJHcmV5YmVhcmQiIG9yIHYuTmFtZSA9PSAiT3JkZXIiIG9yIHYuTmFtZSA9PSAiQ3Vyc2VkIENhcHRhaW4iIG9yIHYuTmFtZSA9PSAiU291bCBSZWFwZXIiIG9yIHYuTmFtZSA9PSAiUmlwIGluZHJhIiBvciB2Lk5hbWUgPT0gIk1paGF3ayBCb3NzIiBvciB2Lk5hbWUgPT0gIkNha2UgUHJpbmNlIiBvciB2Lk5hbWUgPT0gIkRvdWdoIEtpbmciIG9yIHYuTmFtZSA9PSAiQ3Vyc2VkIFNrZWxldG9uIEJvc3MiIG9yIHYuTmFtZSA9PSAiRmFjdG9yeSIgIHRoZW4KdGFibGUuaW5zZXJ0KEJvc3MsIHYuTmFtZSkKQm9zc05hbWU6QWRkKHYuTmFtZSkKZW5kCmVuZAplbmQpCnBhZ2UxOlRvZ2dsZSgiQXV0byBGYXJtQm9zc1xu4Lif4Liy4Lij4LmM4Lih4Lia4Lit4LiqIiwgX0cuQXV0b0Zhcm1Cb3NzLCBmdW5jdGlvbih2YWx1ZSkKX0cuQXV0b0Zhcm1Cb3NzID0gdmFsdWUKaWYgdmFsdWUgPT0gZmFsc2UgdGhlbgp0YXNrLndhaXQoKQp0b1RhcmdldChnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUpCnRhc2sud2FpdCgpCmVuZAplbmQpCnRhc2suc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB0YXNrLndhaXQoKSBkbwppZiBfRy5BdXRvRmFybUJvc3MgdGhlbgpwY2FsbChmdW5jdGlvbigpCmlmIGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpGaW5kRmlyc3RDaGlsZChfRy5TZWxlY3RCb3NzKSB0aGVuCmZvciBpLCB2IGluIHBhaXJzKGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpHZXRDaGlsZHJlbigpKSBkbwppZiB2Lk5hbWUgPT0gX0cuU2VsZWN0Qm9zcyB0aGVuCmlmIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkIikgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKSBhbmQgdi5IdW1hbm9pZC5IZWFsdGggPiAwIHRoZW4KcmVwZWF0CnRhc2sud2FpdCgpCkVxdWlwV2VhcG9uKF9HLlNlbGVjdFdlYXBvbikKQnJpbmdNb2IgPSB0cnVlCkZhc3RBdHRhY2sgPSB0cnVlCnYuSHVtYW5vaWRSb290UGFydC5DYW5Db2xsaWRlID0gZmFsc2UKdi5IdW1hbm9pZC5XYWxrU3BlZWQgPSAwCnYuSHVtYW5vaWRSb290UGFydC5TaXplID0gVmVjdG9yMy5uZXcoODAsIDgwLCA4MCkKdG9UYXJnZXQodi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSAqIE1ldGhvZEZhcm0pCnNldGhpZGRlbnByb3BlcnR5KGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLCAiU2ltdWxhdGlvblJhZGl1cyIsbWF0aC5odWdlKQp1bnRpbCBub3QgX0cuQXV0b0Zhcm1Cb3NzIG9yIG5vdCB2LlBhcmVudCBvciB2Lkh1bWFub2lkLkhlYWx0aCA8PSAwCmVuZAplbmQKZW5kCmVsc2UKaWYgZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpOkZpbmRGaXJzdENoaWxkKF9HLlNlbGVjdEJvc3MpIHRoZW4KdG9UYXJnZXQoZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpOkZpbmRGaXJzdENoaWxkKF9HLlNlbGVjdEJvc3MpLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lICogQ0ZyYW1lLm5ldygwLCAzNSwgMCkpCmVuZAplbmQKZW5kKQplbmQKZW5kCmVuZCkKcGFnZTE6VG9nZ2xlKCJBdXRvIEZhcm1Cb3NzQWxsXG7guJ/guLLguKPguYzguKHguJrguK3guKrguJfguLHguYnguIfguKvguKHguJQiLCBfRy5BdXRvQWxsQm9zcywgZnVuY3Rpb24odmFsdWUpCl9HLkF1dG9BbGxCb3NzID0gdmFsdWUKaWYgdmFsdWUgPT0gZmFsc2UgdGhlbgp0YXNrLndhaXQoKQp0b1RhcmdldChnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUpCnRhc2sud2FpdCgpCmVuZAplbmQpCnRhc2suc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB0YXNrLndhaXQoKSBkbwppZiBfRy5BdXRvQWxsQm9zcyB0aGVuCnBjYWxsKGZ1bmN0aW9uKCkKZm9yIGksIHYgaW4gcGFpcnMoZ2FtZS5SZXBsaWNhdGVkU3RvcmFnZTpHZXRDaGlsZHJlbigpKSBkbwppZiB2Lk5hbWUgPT0gIkN5Ym9yZyIgb3Igdi5OYW1lID09ICJUaGUgR29yaWxsYSBLaW5nIiBvciB2Lk5hbWUgPT0gIld5c3BlciIgb3Igdi5OYW1lID09ICJUaHVuZGVyIEdvZCIgb3Igdi5OYW1lID09ICJNb2IgTGVhZGVyIiBvciB2Lk5hbWUgPT0gIkJvYmJ5IiBvciB2Lk5hbWUgPT0gIlNhYmVyIEV4cGVydCIgb3Igdi5OYW1lID09ICJXYXJkZW4iIG9yIHYuTmFtZSA9PSAiQ2hpZWYgV2FyZGVuIiBvciB2Lk5hbWUgPT0gIlN3YW4iIG9yIHYuTmFtZSA9PSAiTWFnbWEgQWRtaXJhbCIgIG9yIHYuTmFtZSA9PSAiRmlzaG1hbiBMb3JkIiBvciB2Lk5hbWUgPT0gIld5c3BlciIgb3Igdi5OYW1lID09ICJJY2UgQWRtaXJhbCIgb3Igdi5OYW1lID09ICJEaWFtb25kIiBvciB2Lk5hbWUgPT0gIkplcmVteSIgb3Igdi5OYW1lID09ICJGYWppdGEiIG9yIHYuTmFtZSA9PSAiRG9uIFN3YW4iIG9yIHYuTmFtZSA9PSAiU21va2UgQWRtaXJhbCIgb3Igdi5OYW1lID09ICJBd2FrZW5lZCBJY2UgQWRtaXJhbCIgb3Igdi5OYW1lID09ICJUaWRlIEtlZXBlciIgb3Igdi5OYW1lID09ICJEYXJrYmVhcmQiIG9yIHYuTmFtZSA9PSAiU3RvbmUiIG9yIHYuTmFtZSA9PSAiSXNsYW5kIEVtcHJlc3MiIG9yIHYuTmFtZSA9PSAiS2lsbyBBZG1pcmFsIiBvciB2Lk5hbWUgPT0gIkNhcHRhaW4gRWxlcGhhbnQiIG9yIHYuTmFtZSA9PSAiQmVhdXRpZnVsIFBpcmF0ZSIgb3Igdi5OYW1lID09ICJDYWtlIFF1ZWVuIiBvciB2Lk5hbWUgPT0gIkdyZXliZWFyZCIgb3Igdi5OYW1lID09ICJPcmRlciIgb3Igdi5OYW1lID09ICJDdXJzZWQgQ2FwdGFpbiIgb3Igdi5OYW1lID09ICJTb3VsIFJlYXBlciIgb3Igdi5OYW1lID09ICJSaXAgaW5kcmEiIG9yIHYuTmFtZSA9PSAiTWloYXdrIEJvc3MiIG9yIHYuTmFtZSA9PSAiQ2FrZSBQcmluY2UiIG9yIHYuTmFtZSA9PSAiRG91Z2ggS2luZyIgb3Igdi5OYW1lID09ICJDdXJzZWQgU2tlbGV0b24gQm9zcyIgb3Igdi5OYW1lID09ICJGYWN0b3J5Igp0aGVuCnJlcGVhdAp0YXNrLndhaXQoKQpCcmluZ01vYiA9IHRydWUKRmFzdEF0dGFjayA9IHRydWUKRXF1aXBXZWFwb24oX0cuU2VsZWN0V2VhcG9uKQp2Lkh1bWFub2lkLldhbGtTcGVlZCA9IDAKdi5IdW1hbm9pZFJvb3RQYXJ0LkNhbkNvbGxpZGUgPSBmYWxzZQp2LkhlYWQuQ2FuQ29sbGlkZSA9IGZhbHNlCnYuSHVtYW5vaWRSb290UGFydC5TaXplID0gVmVjdG9yMy5uZXcoODAsIDgwLCA4MCkKdG9UYXJnZXQodi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSAqIE1ldGhvZEZhcm0pCmlmIG5vdCBGYXN0QXR0YWNrIHRoZW4KZ2FtZTpHZXRTZXJ2aWNlICdWaXJ0dWFsVXNlcic6Q2FwdHVyZUNvbnRyb2xsZXIoKQpnYW1lOkdldFNlcnZpY2UgJ1ZpcnR1YWxVc2VyJzpCdXR0b24xRG93bihWZWN0b3IyLm5ldygxMjgwLCA2NzIpKQplbmQKc2V0aGlkZGVucHJvcGVydHkoZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLCAiU2ltdWxhdGlvblJhZGl1cyIsIG1hdGguaHVnZSkKdW50aWwgdi5IdW1hbm9pZC5IZWFsdGggPD0gMCBvciBfRy5BdXRvQWxsQm9zcyA9PSBmYWxzZSBvciBub3Qgdi5QYXJlbnQKZW5kCmVuZAplbmQpCmVuZAplbmQKZW5kKQpsb2NhbCBTdXBDb21wbGV0ZSA9IGZhbHNlCmxvY2FsIEVDbGF3Q29tcGxldGUgPSBmYWxzZQpsb2NhbCBUYWxDb21wbGV0ZSA9IGZhbHNlCmxvY2FsIFNoYXJrQ29tcGxldGUgPSBmYWxzZQpsb2NhbCBEZWF0aENvbXBsZXRlID0gZmFsc2UKbG9jYWwgR29kQ29tcGxldGUgPSBmYWxzZQpwYWdlNTpTZXBlcmF0b3IoIvCfkrwiKQpsb2NhbCBtYXAKbG9jYWwgdHJvcGhpZXMKbG9jYWwgdGFibGV0cwpsb2NhbCB0YXJnZXRDRnJhbWUgPSBDRnJhbWUubmV3KC05NTQ0LjI2ODU1LCA2LjEzMTM2NzIxLCA2MDM1LjM5MjA5LCAtMC45NzQxMjY2OTcsIC04LjAwNjIzNTY3ZS0wOSwgMC4yMjYwMDI2MTksIC0xLjQ4NTQ5NjE3ZS0wOCwgMSwgLTIuODYwMzExNjNlLTA4LCAtMC4yMjYwMDI2MTksIC0zLjEyMjAzMjA2ZS0wOCwgLTAuOTc0MTI2Njk3KQpsb2NhbCB0cm9waHlTZWdtZW50TWFwID0gewp7dHJvcGh5ID0gIlRyb3BoeTEiLCBzZWdtZW50ID0gIlNlZ21lbnQxIn0sCnt0cm9waHkgPSAiVHJvcGh5MiIsIHNlZ21lbnQgPSAiU2VnbWVudDMifSwKe3Ryb3BoeSA9ICJUcm9waHkzIiwgc2VnbWVudCA9ICJTZWdtZW50NCJ9LAp7dHJvcGh5ID0gIlRyb3BoeTQiLCBzZWdtZW50ID0gIlNlZ21lbnQ3In0sCnt0cm9waHkgPSAiVHJvcGh5NSIsIHNlZ21lbnQgPSAiU2VnbWVudDEwIn0KfQpsb2NhbCB0cm9waHlSb3RhdGlvbnMgPSB7fQpsb2NhbCBzZWdtZW50VGFyZ2V0cyA9IHsKU2VnbWVudDEgPSB7dGFyZ2V0ID0gbmlsLCBkb25lID0gZmFsc2V9LApTZWdtZW50MiA9IHt0YXJnZXQgPSBWZWN0b3IzLm5ldygwLCAwLCAwKSwgZG9uZSA9IGZhbHNlfSwKU2VnbWVudDMgPSB7dGFyZ2V0ID0gbmlsLCBkb25lID0gZmFsc2V9LApTZWdtZW50NCA9IHt0YXJnZXQgPSBuaWwsIGRvbmUgPSBmYWxzZX0sClNlZ21lbnQ1ID0ge3RhcmdldCA9IFZlY3RvcjMubmV3KDAsIDAsIDApLCBkb25lID0gZmFsc2V9LApTZWdtZW50NiA9IHt0YXJnZXQgPSBWZWN0b3IzLm5ldygwLCAwLCAwKSwgZG9uZSA9IGZhbHNlfSwKU2VnbWVudDcgPSB7dGFyZ2V0ID0gbmlsLCBkb25lID0gZmFsc2V9LApTZWdtZW50OCA9IHt0YXJnZXQgPSBWZWN0b3IzLm5ldygwLCAwLCAwKSwgZG9uZSA9IGZhbHNlfSwKU2VnbWVudDkgPSB7dGFyZ2V0ID0gVmVjdG9yMy5uZXcoMCwgMCwgMCksIGRvbmUgPSBmYWxzZX0sClNlZ21lbnQxMCA9IHt0YXJnZXQgPSBuaWwsIGRvbmUgPSBmYWxzZX0KfQpsb2NhbCBsYWJUYXJnZXRzID0gewpQYXJ0MyA9IHt0YXJnZXQgPSBDb2xvcjMuZnJvbVJHQigxNjMsIDc1LCA3NSksIGRvbmUgPSBmYWxzZX0sClBhcnQ0ID0ge3RhcmdldCA9IENvbG9yMy5mcm9tUkdCKDUxLCA4OCwgMTMwKSwgZG9uZSA9IGZhbHNlfSwKUGFydDYgPSB7dGFyZ2V0ID0gQ29sb3IzLmZyb21SR0IoNDQsIDEwMSwgMjkpLCBkb25lID0gZmFsc2V9LApQYXJ0OCA9IHt0YXJnZXQgPSBDb2xvcjMuZnJvbVJHQigxNjMsIDc1LCA3NSksIGRvbmUgPSBmYWxzZX0sClBhcnQxMCA9IHt0YXJnZXQgPSBDb2xvcjMuZnJvbVJHQig1MSwgODgsIDEzMCksIGRvbmUgPSBmYWxzZX0KfQpsb2NhbCBmdW5jdGlvbiB3YWl0Rm9ySGF1bnRlZENhc3RsZSgpCmxvY2FsIG1heEF0dGVtcHRzID0gMzAKbG9jYWwgYXR0ZW1wdCA9IDAKd2hpbGUgbm90IFdvcmtzcGFjZS5NYXA6RmluZEZpcnN0Q2hpbGQoIkhhdW50ZWQgQ2FzdGxlIikgYW5kIGF0dGVtcHQgPCBtYXhBdHRlbXB0cyBkbwpwcmludCgiSGF1bnRlZCBDYXN0bGUgbm90IGxvYWRlZCwgbW92aW5nIHRvIHRhcmdldCBwb3NpdGlvbiIpCnRvVGFyZ2V0KHRhcmdldENGcmFtZSkKdGFzay53YWl0KDEpCmF0dGVtcHQgPSBhdHRlbXB0ICsgMQplbmQKbWFwID0gV29ya3NwYWNlLk1hcDpGaW5kRmlyc3RDaGlsZCgiSGF1bnRlZCBDYXN0bGUiKQppZiBub3QgbWFwIHRoZW4Kd2FybigiRmFpbGVkIHRvIGxvYWQgSGF1bnRlZCBDYXN0bGUgYWZ0ZXIgIiAuLiBtYXhBdHRlbXB0cyAuLiAiIGF0dGVtcHRzIikKcmV0dXJuIGZhbHNlCmVuZAp0cm9waGllcyA9IG1hcDpXYWl0Rm9yQ2hpbGQoIlRyb3BoaWVzIiwgNSk6RmluZEZpcnN0Q2hpbGQoIlF1ZXN0IikKdGFibGV0cyA9IG1hcDpXYWl0Rm9yQ2hpbGQoIlRhYmxldCIsIDUpCmlmIG5vdCB0cm9waGllcyBvciBub3QgdGFibGV0cyB0aGVuCndhcm4oIlRyb3BoaWVzIG9yIFRhYmxldHMgbm90IGZvdW5kIGluIEhhdW50ZWQgQ2FzdGxlIikKcmV0dXJuIGZhbHNlCmVuZApwcmludCgiSGF1bnRlZCBDYXN0bGUgbG9hZGVkIHN1Y2Nlc3NmdWxseSIpCnJldHVybiB0cnVlCmVuZApsb2NhbCBmdW5jdGlvbiBpbml0aWFsaXplVHJvcGhpZXMoKQpmb3IgXywgcGFpciBpbiBpcGFpcnModHJvcGh5U2VnbWVudE1hcCkgZG8KbG9jYWwgc3VjY2VzcywgcmVzdWx0ID0gcGNhbGwoZnVuY3Rpb24oKQpsb2NhbCB0cm9waHkgPSB0cm9waGllczpGaW5kRmlyc3RDaGlsZChwYWlyLnRyb3BoeSkKaWYgdHJvcGh5IGFuZCB0cm9waHk6RmluZEZpcnN0Q2hpbGQoIkhhbmRsZSIpIHRoZW4KbG9jYWwgcm90YXRpb24gPSB0cm9waHkuSGFuZGxlLlJvdGF0aW9uCnRyb3BoeVJvdGF0aW9uc1twYWlyLnNlZ21lbnRdID0gcm90YXRpb24KaWYgcm90YXRpb24gPT0gVmVjdG9yMy5uZXcoMCwgLTkwLCAwKSBvciByb3RhdGlvbiA9PSBWZWN0b3IzLm5ldygwLCA5MCwgMCkgdGhlbgpzZWdtZW50VGFyZ2V0c1twYWlyLnNlZ21lbnRdLnRhcmdldCA9IFZlY3RvcjMubmV3KDE4MCwgMCwgMCkKZWxzZWlmIHJvdGF0aW9uID09IFZlY3RvcjMubmV3KDAsIDAsIDApIHRoZW4Kc2VnbWVudFRhcmdldHNbcGFpci5zZWdtZW50XS50YXJnZXQgPSBWZWN0b3IzLm5ldygwLCAwLCAtOTApCmVsc2UKc2VnbWVudFRhcmdldHNbcGFpci5zZWdtZW50XS50YXJnZXQgPSByb3RhdGlvbgplbmQKZWxzZQp3YXJuKHBhaXIudHJvcGh5IC4uICIgb3IgSGFuZGxlIG5vdCBmb3VuZCIpCmVuZAplbmQpCmlmIG5vdCBzdWNjZXNzIHRoZW4Kd2FybigiRXJyb3IgcHJvY2Vzc2luZyB0cm9waHkgIiAuLiBwYWlyLnRyb3BoeSAuLiAiOiAiIC4uIHJlc3VsdCkKZW5kCmVuZAplbmQKbG9jYWwgZnVuY3Rpb24gYWRqdXN0U2VnbWVudChzZWdtZW50TmFtZSwgdGFyZ2V0RGF0YSkKbG9jYWwgc3VjY2VzcywgcmVzdWx0ID0gcGNhbGwoZnVuY3Rpb24oKQpsb2NhbCBzZWdtZW50ID0gdGFibGV0czpGaW5kRmlyc3RDaGlsZChzZWdtZW50TmFtZSkKaWYgc2VnbWVudCBhbmQgc2VnbWVudDpGaW5kRmlyc3RDaGlsZCgiTGluZSIpIHRoZW4KaWYgdGFyZ2V0RGF0YS5kb25lIHRoZW4KcmV0dXJuIHRydWUKZWxzZWlmIHNlZ21lbnQuTGluZS5Sb3RhdGlvbiA9PSB0YXJnZXREYXRhLnRhcmdldCB0aGVuCnByaW50KHNlZ21lbnROYW1lIC4uICI6IOC4quC4s+C5gOC4o+C5h+C4iCIpCnRhcmdldERhdGEuZG9uZSA9IHRydWUKcmV0dXJuIHRydWUKZWxzZQpwcmludChzZWdtZW50TmFtZSAuLiAiOiDguYTguKHguYjguKrguLPguYDguKPguYfguIggRmlyZWNsaWNrZGV0ZWN0b3Ig4Lit4Li14LiB4Lij4Lit4LiaIikKbG9jYWwgY2xpY2tEZXRlY3RvciA9IHNlZ21lbnQ6RmluZEZpcnN0Q2hpbGQoIkNsaWNrRGV0ZWN0b3IiKQppZiBjbGlja0RldGVjdG9yIHRoZW4KZmlyZWNsaWNrZGV0ZWN0b3IoY2xpY2tEZXRlY3RvcikKZWxzZQp3YXJuKHNlZ21lbnROYW1lIC4uICI6IENsaWNrRGV0ZWN0b3Igbm90IGZvdW5kIikKZW5kCnJldHVybiBmYWxzZQplbmQKZWxzZQp3YXJuKHNlZ21lbnROYW1lIC4uICI6IFNlZ21lbnQgb3IgTGluZSBub3QgZm91bmQiKQpyZXR1cm4gZmFsc2UKZW5kCmVuZCkKaWYgbm90IHN1Y2Nlc3MgdGhlbgp3YXJuKCJFcnJvciBhZGp1c3Rpbmcgc2VnbWVudCAiIC4uIHNlZ21lbnROYW1lIC4uICI6ICIgLi4gcmVzdWx0KQpyZXR1cm4gZmFsc2UKZW5kCnJldHVybiByZXN1bHQKZW5kCmxvY2FsIGZ1bmN0aW9uIGFkanVzdExhYlBhcnQocGFydE5hbWUsIHRhcmdldERhdGEpCmxvY2FsIHN1Y2Nlc3MsIHJlc3VsdCA9IHBjYWxsKGZ1bmN0aW9uKCkKbG9jYWwgcGFydCA9IFdvcmtzcGFjZS5NYXBbIkhhdW50ZWQgQ2FzdGxlIl1bIkxhYiBQdXp6bGUiXS5Db2xvckZsb29yLk1vZGVsOkZpbmRGaXJzdENoaWxkKHBhcnROYW1lKQppZiBwYXJ0IHRoZW4KdG9UYXJnZXQocGFydC5DRnJhbWUpCnRhc2sud2FpdCgwLjUpCmlmIHRhcmdldERhdGEuZG9uZSB0aGVuCnJldHVybiB0cnVlCmVsc2VpZiBwYXJ0LkNvbG9yID09IHRhcmdldERhdGEudGFyZ2V0IHRoZW4KcHJpbnQocGFydE5hbWUgLi4gIjog4Liq4Li14Liq4Liz4LmA4Lij4LmH4LiIIikKdGFyZ2V0RGF0YS5kb25lID0gdHJ1ZQpyZXR1cm4gdHJ1ZQplbHNlCnByaW50KHBhcnROYW1lIC4uICI6IOC4quC4teC5hOC4oeC5iOC4quC4s+C5gOC4o+C5h+C4iCBGaXJlY2xpY2tkZXRlY3RvciDguK3guLXguIHguKPguK3guJoiKQpsb2NhbCBjbGlja0RldGVjdG9yID0gcGFydDpGaW5kRmlyc3RDaGlsZCgiQ2xpY2tEZXRlY3RvciIpCmlmIGNsaWNrRGV0ZWN0b3IgdGhlbgpmaXJlY2xpY2tkZXRlY3RvcihjbGlja0RldGVjdG9yKQplbHNlCndhcm4ocGFydE5hbWUgLi4gIjogQ2xpY2tEZXRlY3RvciBub3QgZm91bmQiKQplbmQKcmV0dXJuIGZhbHNlCmVuZAplbHNlCndhcm4ocGFydE5hbWUgLi4gIjogUGFydCBub3QgZm91bmQiKQpyZXR1cm4gZmFsc2UKZW5kCmVuZCkKaWYgbm90IHN1Y2Nlc3MgdGhlbgp3YXJuKCJFcnJvciBhZGp1c3RpbmcgbGFiIHBhcnQgIiAuLiBwYXJ0TmFtZSAuLiAiOiAiIC4uIHJlc3VsdCkKcmV0dXJuIGZhbHNlCmVuZApyZXR1cm4gcmVzdWx0CmVuZApwYWdlNTpUb2dnbGUoIkF1dG9Tb3VsR3VpdGFyXG7guK3guK3guYLguJXguYnguKvguLLguIHguLXguJXguYnguLLguKPguYzguJrguKPguLnguYrguIQiLCBfRy5BdXRvU291bEd1aXRhciwgZnVuY3Rpb24odmFsdWUpCl9HLkF1dG9Tb3VsR3VpdGFyID0gdmFsdWUKc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB0YXNrLndhaXQoMC41KSBkbwppZiBub3QgX0cuQXV0b1NvdWxHdWl0YXIgdGhlbiBicmVhayBlbmQKcGNhbGwoZnVuY3Rpb24oKQpsb2NhbCBwbGF5ZXIgPSBQbGF5ZXJzLkxvY2FsUGxheWVyCmxvY2FsIHJvb3RQYXJ0ID0gcGxheWVyLkNoYXJhY3RlciBhbmQgcGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpCmlmIG5vdCByb290UGFydCB0aGVuIHJldHVybiBlbmQKbG9jYWwgZGlzdGFuY2VUb0Nhc3RsZSA9IChDRnJhbWUubmV3KC05NjgxLjQ2LCA2LjE0LCA2MzQxLjM3KS5Qb3NpdGlvbiAtIHJvb3RQYXJ0LlBvc2l0aW9uKS5NYWduaXR1ZGUKaWYgZGlzdGFuY2VUb0Nhc3RsZSA+IDUwMDAgdGhlbgpwcmludCgiVG9vIGZhciBmcm9tIEhhdW50ZWQgQ2FzdGxlLCBtb3ZpbmcgdG8gcG9zaXRpb24iKQp0b1RhcmdldChDRnJhbWUubmV3KC05NjgxLjQ2LCA2LjE0LCA2MzQxLjM3KSkKcmV0dXJuCmVuZAppZiBub3QgbWFwIGFuZCBub3Qgd2FpdEZvckhhdW50ZWRDYXN0bGUoKSB0aGVuCnByaW50KCJDYW5ub3QgcHJvY2VlZDogSGF1bnRlZCBDYXN0bGUgZmFpbGVkIHRvIGxvYWQiKQpyZXR1cm4KZW5kCmlmIG5vdCBHbG9iYWxFbnYudHJvcGhpZXNJbml0aWFsaXplZCB0aGVuCmluaXRpYWxpemVUcm9waGllcygpCkdsb2JhbEVudi50cm9waGllc0luaXRpYWxpemVkID0gdHJ1ZQplbmQKaWYgV29ya3NwYWNlLk5QQ3M6RmluZEZpcnN0Q2hpbGQoIlNrZWxldG9uIE1hY2hpbmUiKSB0aGVuClJlcGxpY2F0ZWRTdG9yYWdlLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigic291bEd1aXRhckJ1eSIsIHRydWUpCnJldHVybgplbmQKbG9jYWwgZ3JhdmVSZXN1bHQgPSBSZXBsaWNhdGVkU3RvcmFnZS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoImdyYXZlc3RvbmVFdmVudCIsIDIpCmlmIGdyYXZlUmVzdWx0IGFuZCBncmF2ZVJlc3VsdDpmaW5kKCJOb3RoaW5nIikgdGhlbgpwcmludCgiV2FpdCBOZXh0IE5pZ2h0IikKZWxzZWlmIGdyYXZlUmVzdWx0IHRoZW4KcHJpbnQoIkdvIHRvIEdyYXZlIikKdG9UYXJnZXQoQ0ZyYW1lLm5ldygtODY1My4yMSwgMTQwLjk4LCA2MTYwLjAzKSkKZWxzZQpSZXBsaWNhdGVkU3RvcmFnZS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoImdyYXZlc3RvbmVFdmVudCIsIDIsIHRydWUpCmVuZAppZiBXb3Jrc3BhY2UuTlBDczpGaW5kRmlyc3RDaGlsZCgiR2hvc3QiKSB0aGVuClJlcGxpY2F0ZWRTdG9yYWdlLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiR3VpdGFyUHV6emxlUHJvZ3Jlc3MiLCAiR2hvc3QiKQplbHNlaWYgV29ya3NwYWNlLkVuZW1pZXM6RmluZEZpcnN0Q2hpbGQoIkxpdmluZyBab21iaWUiKSB0aGVuCmZvciBfLCB2IGluIHBhaXJzKFdvcmtzcGFjZS5FbmVtaWVzOkdldENoaWxkcmVuKCkpIGRvCmlmIHYuTmFtZSA9PSAiTGl2aW5nIFpvbWJpZSIgYW5kIHYuSHVtYW5vaWQuSGVhbHRoID4gMCB0aGVuCnYuSHVtYW5vaWRSb290UGFydC5TaXplID0gVmVjdG9yMy5uZXcoNjAsIDYwLCA2MCkKdi5IdW1hbm9pZFJvb3RQYXJ0LlRyYW5zcGFyZW5jeSA9IDEKdi5IdW1hbm9pZC5KdW1wUG93ZXIgPSAwCnYuSHVtYW5vaWQuV2Fsa1NwZWVkID0gMAp2Lkh1bWFub2lkUm9vdFBhcnQuQ2FuQ29sbGlkZSA9IGZhbHNlCnRvVGFyZ2V0KHYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgKiBDRnJhbWUubmV3KDAsIDIwLCAwKSkKVmlydHVhbFVzZXI6QnV0dG9uMURvd24oVmVjdG9yMi5uZXcoMTI4MCwgNjcyKSkKZW5kCmVuZAplbHNlCnRvVGFyZ2V0KENGcmFtZS5uZXcoLTEwMTYwLjc5LCAxMzguNjYsIDU5NTUuMDMpKQplbmQKbG9jYWwgc3VjY2VzcywgcmVzdWx0ID0gcGNhbGwoZnVuY3Rpb24oKQppZiBtYXAuQ2FuZGxlcy5DYW5kbGUxLlRyYW5zcGFyZW5jeSA9PSAwIHRoZW4KaWYgbWFwLlBsYWNhcmQxLkxlZnQuUGFydC5UcmFuc3BhcmVuY3kgPT0gMCB0aGVuCmxvY2FsIHBsYWNhcmRPcmRlciA9IHsiUGxhY2FyZDcuTGVmdCIsICJQbGFjYXJkNi5MZWZ0IiwgIlBsYWNhcmQ1LkxlZnQiLCAiUGxhY2FyZDQuUmlnaHQiLCAiUGxhY2FyZDMuTGVmdCIsICJQbGFjYXJkMi5SaWdodCIsICJQbGFjYXJkMS5SaWdodCJ9CnRvVGFyZ2V0KENGcmFtZS5uZXcoLTg3NjIuNjksIDE3Ni44NSwgNjE3MS4zMSkpCmlmIChyb290UGFydC5Qb3NpdGlvbiAtIFZlY3RvcjMubmV3KC04NzYyLjY5LCAxNzYuODUsIDYxNzEuMzEpKS5NYWduaXR1ZGUgPD0gMyB0aGVuCmZvciBfLCBwbGFjYXJkIGluIGlwYWlycyhwbGFjYXJkT3JkZXIpIGRvCmxvY2FsIHBhcnRzID0gcGxhY2FyZDpzcGxpdCgiLiIpCmxvY2FsIG9iaiA9IG1hcFtwYXJ0c1sxXV1bcGFydHNbMl1dCmlmIG9iajpGaW5kRmlyc3RDaGlsZCgiQ2xpY2tEZXRlY3RvciIpIHRoZW4KZmlyZWNsaWNrZGV0ZWN0b3Iob2JqLkNsaWNrRGV0ZWN0b3IpCnRhc2sud2FpdCgxKQplbmQKZW5kCmVuZAplbmQKaWYgbWFwLlRhYmxldC5TZWdtZW50MTpGaW5kRmlyc3RDaGlsZCgiQ2xpY2tEZXRlY3RvciIpIHRoZW4KdG9UYXJnZXQodGFyZ2V0Q0ZyYW1lKQpsb2NhbCBhbGxTZWdtZW50c0RvbmUgPSB0cnVlCmZvciBzZWdtZW50TmFtZSwgdGFyZ2V0RGF0YSBpbiBwYWlycyhzZWdtZW50VGFyZ2V0cykgZG8KaWYgbm90IGFkanVzdFNlZ21lbnQoc2VnbWVudE5hbWUsIHRhcmdldERhdGEpIHRoZW4KYWxsU2VnbWVudHNEb25lID0gZmFsc2UKZW5kCnRhc2sud2FpdCgwLjUpCmVuZAppZiBhbGxTZWdtZW50c0RvbmUgdGhlbgpwcmludCgi4LiX4Li44LiBIFNlZ21lbnQg4Liq4Liz4LmA4Lij4LmH4LiIISIpCmVuZAppZiBhbGxTZWdtZW50c0RvbmUgYW5kIG1hcFsiTGFiIFB1enpsZSJdLkNvbG9yRmxvb3IuTW9kZWwuUGFydDE6RmluZEZpcnN0Q2hpbGQoIkNsaWNrRGV0ZWN0b3IiKSB0aGVuCmxvY2FsIGFsbExhYkRvbmUgPSB0cnVlCmZvciBwYXJ0TmFtZSwgdGFyZ2V0RGF0YSBpbiBwYWlycyhsYWJUYXJnZXRzKSBkbwppZiBub3QgYWRqdXN0TGFiUGFydChwYXJ0TmFtZSwgdGFyZ2V0RGF0YSkgdGhlbgphbGxMYWJEb25lID0gZmFsc2UKZW5kCmVuZAppZiBhbGxMYWJEb25lIHRoZW4KcHJpbnQoIuC4l+C4uOC4gSBMYWIgUHV6emxlIOC4quC4teC4quC4s+C5gOC4o+C5h+C4iCEiKQplbmQKZW5kCmVuZAplbmQKZW5kKQppZiBub3Qgc3VjY2VzcyB0aGVuCndhcm4oIkVycm9yIGluIEhhdW50ZWQgQ2FzdGxlIHB1enpsZSBzZWN0aW9uOiAiIC4uIHJlc3VsdCkKdG9UYXJnZXQodGFyZ2V0Q0ZyYW1lKQplbmQKZW5kKQplbmQKZW5kKQplbmQpCnBhZ2U1OlRvZ2dsZSgiQXV0byBIYWxsb3cgU2N5dGhlXG7guK3guK3guYLguJXguYnguKvguLLguYDguITguLXguKLguKfguJzguLUiLCBfRy5BdXRvRmFybUJvc3NIYWxsb3csIGZ1bmN0aW9uKHZhbHVlKQpfRy5BdXRvRmFybUJvc3NIYWxsb3cgPSB2YWx1ZQppZiB2YWx1ZSA9PSBmYWxzZSB0aGVuCnRhc2sud2FpdCgpCnRvVGFyZ2V0KGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSkKdGFzay53YWl0KCkKdGFzay5zcGF3bihmdW5jdGlvbigpCndoaWxlIHRhc2sud2FpdCgpIGRvCnBjYWxsKGZ1bmN0aW9uKCkKaWYgX0cuQXV0b0Zhcm1Cb3NzSGFsbG93IHRoZW4KaWYgZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkZpbmRGaXJzdENoaWxkKCJTb3VsIFJlYXBlciIpIHRoZW4KZm9yIGksdiBpbiBwYWlycyhnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLkVuZW1pZXM6R2V0Q2hpbGRyZW4oKSkgZG8KaWYgc3RyaW5nLmZpbmQodi5OYW1lICwgIlNvdWwgUmVhcGVyIikgdGhlbgpyZXBlYXQgdGFzay53YWl0KCkKQnJpbmdNb2IgPSB0cnVlCkZhc3RBdHRhY2sgPSB0cnVlCkVxdWlwV2VhcG9uKF9HLlNlbGVjdFdlYXBvbikKUG9zTW9uID0gdi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZQppZiBub3QgX0cuRmFzdEF0dGFjayB0aGVuCmdhbWU6R2V0U2VydmljZSdWaXJ0dWFsVXNlcic6Q2FwdHVyZUNvbnRyb2xsZXIoKQpnYW1lOkdldFNlcnZpY2UnVmlydHVhbFVzZXInOkJ1dHRvbjFEb3duKFZlY3RvcjIubmV3KDEyODAsIDY3MikpCmVuZAp2Lkh1bWFub2lkUm9vdFBhcnQuU2l6ZSA9IFZlY3RvcjMubmV3KDYwLDYwLDYwKQp2Lkh1bWFub2lkLkp1bXBQb3dlciA9IDAKdi5IdW1hbm9pZC5XYWxrU3BlZWQgPSAwCnYuSHVtYW5vaWRSb290UGFydC5DYW5Db2xsaWRlID0gZmFsc2UKdi5IdW1hbm9pZDpDaGFuZ2VTdGF0ZSgxMSkKdi5IdW1hbm9pZDpDaGFuZ2VTdGF0ZSgxNCkKdi5IdW1hbm9pZDpDaGFuZ2VTdGF0ZSgxNikKdG9UYXJnZXQodi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSAqIE1ldGhvZEZhcm0pCnVudGlsIHYuSHVtYW5vaWQuSGVhbHRoIDw9IDAgb3Igbm90IF9HLkF1dG9GYXJtQm9zc0hhbGxvdwpCcmluZ01vYiA9IGZhbHNlCkZhc3RBdHRhY2sgPSBmYWxzZQplbmQKZW5kCmVsc2UKdG9UYXJnZXQoQ0ZyYW1lLm5ldygtOTUyNC43ODkwNjI1LCAzMTUuODA0MjkwNzcxNDgsIDY2NTUuNzE5MjM4MjgxMykpCmVuZAplbmQKZW5kKQplbmQKZW5kKQplbmQKZW5kKQpwYWdlNTpUb2dnbGUoIkF1dG8gQnVkZHkgU3dvcmRzXG7guK3guK3guYLguJXguYnguKvguLLguJTguLLguJrguJrguLTguYrguIHguKHguLHguKEiLCBfRy5BdXRvQnVkZHlTd29yZHMsIGZ1bmN0aW9uKHZhbHVlKQpfRy5BdXRvQnVkZHlTd29yZHMgPSB2YWx1ZQppZiB2YWx1ZSA9PSBmYWxzZSB0aGVuCnRvVGFyZ2V0KGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSkKZW5kCnRhc2suc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB0YXNrLndhaXQoKSBkbwpwY2FsbChmdW5jdGlvbigpCmlmIF9HLkF1dG9CdWRkeVN3b3JkcyB0aGVuCmlmIGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpGaW5kRmlyc3RDaGlsZCgiQ2FrZSBRdWVlbiIpIHRoZW4KZm9yIGksIHYgaW4gcGFpcnMoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkdldENoaWxkcmVuKCkpIGRvCmlmIHYuTmFtZSA9PSAoIkNha2UgUXVlZW4iIG9yIHYuTmFtZSA9PSAiQ2FrZSBRdWVlbiIpIGFuZCB2Lkh1bWFub2lkLkhlYWx0aCA+IDAgYW5kIHY6SXNBKCJNb2RlbCIpIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZCIpIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikgdGhlbgpyZXBlYXQKdGFzay53YWl0KCkKQnJpbmdNb2IgPSB0cnVlCkZhc3RBdHRhY2sgPSB0cnVlCmlmIG5vdCBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKF9HLlNlbGVjdFdlYXBvbikgdGhlbgp0YXNrLndhaXQoKQpFcXVpcFdlYXBvbihfRy5TZWxlY3RXZWFwb24pCmVuZApQb3NNb24gPSB2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lCmlmIG5vdCBfRy5GYXN0QXR0YWNrIHRoZW4KZ2FtZTpHZXRTZXJ2aWNlICdWaXJ0dWFsVXNlcic6Q2FwdHVyZUNvbnRyb2xsZXIoKQpnYW1lOkdldFNlcnZpY2UgJ1ZpcnR1YWxVc2VyJzpCdXR0b24xRG93bihWZWN0b3IyLm5ldygxMjgwLCA2NzIpKQplbmQKdi5IdW1hbm9pZFJvb3RQYXJ0LlNpemUgPSBWZWN0b3IzLm5ldyg4MCwgODAsIDgwKQp2Lkh1bWFub2lkLkp1bXBQb3dlciA9IDAKdi5IdW1hbm9pZC5XYWxrU3BlZWQgPSAwCnYuSHVtYW5vaWRSb290UGFydC5DYW5Db2xsaWRlID0gZmFsc2UKdi5IdW1hbm9pZDpDaGFuZ2VTdGF0ZSgxMSkKdi5IdW1hbm9pZDpDaGFuZ2VTdGF0ZSgxNCkKdi5IdW1hbm9pZDpDaGFuZ2VTdGF0ZSgxNikKdG9UYXJnZXQodi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSAqIE1ldGhvZEZhcm0pCnVudGlsIG5vdCBfRy5BdXRvQnVkZHlTd29yZHMgb3Igdi5IdW1hbm9pZC5IZWFsdGggPD0gMApCcmluZ01vYiA9IGZhbHNlCkZhc3RBdHRhY2sgPSBmYWxzZQplbmQKZW5kCmVuZAplbmQKZW5kKQplbmQKZW5kKQplbmQpCnBhZ2U1OlRvZ2dsZSgiQXV0byBNdXNrZXRlZXJIYXRcbuC4reC4reC5guC4leC5ieC4q+C4suC4q+C4oeC4p+C4geC4oeC4seC4quC5gOC4geC5h+C4leC5gOC4leC4teC4ouC4o+C5jCIsIF9HLkF1dG9NdXNrZXRlZXJIYXQsIGZ1bmN0aW9uKHZhbHVlKQpfRy5BdXRvTXVza2V0ZWVySGF0ID0gdmFsdWUKaWYgdmFsdWUgPT0gZmFsc2UgdGhlbgp0YXNrLndhaXQoKQp0b1RhcmdldChnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUpCnRhc2sud2FpdCgpCmVuZAp0YXNrLnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgdGFzay53YWl0KCkgZG8KcGNhbGwoZnVuY3Rpb24oKQppZiBfRy5BdXRvTXVza2V0ZWVySGF0IHRoZW4KaWYgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuRGF0YS5MZXZlbC5WYWx1ZSA+PSAxODAwIGFuZCBnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJDaXRpemVuUXVlc3RQcm9ncmVzcyIpLktpbGxlZEJhbmRpdHMgPT0gZmFsc2UgdGhlbgppZiBzdHJpbmcuZmluZChnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5QbGF5ZXJHdWkuTWFpbi5RdWVzdC5Db250YWluZXIuUXVlc3RUaXRsZS5UaXRsZS5UZXh0LCAiRm9yZXN0IFBpcmF0ZSIpIGFuZCBzdHJpbmcuZmluZChnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5QbGF5ZXJHdWkuTWFpbi5RdWVzdC5Db250YWluZXIuUXVlc3RUaXRsZS5UaXRsZS5UZXh0LCAiNTAiKSBhbmQgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuUGxheWVyR3VpLk1haW4uUXVlc3QuVmlzaWJsZSA9PSB0cnVlIHRoZW4KaWYgZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkZpbmRGaXJzdENoaWxkKCJGb3Jlc3QgUGlyYXRlIikgdGhlbgpmb3IgaSwgdiBpbiBwYWlycyhnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLkVuZW1pZXM6R2V0Q2hpbGRyZW4oKSkgZG8KaWYgdi5OYW1lID09ICJGb3Jlc3QgUGlyYXRlIiB0aGVuCnJlcGVhdAp0YXNrLndhaXQoKQpCcmluZ01vYiA9IHRydWUKRmFzdEF0dGFjayA9IHRydWUKaWYgbm90IGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoX0cuU2VsZWN0V2VhcG9uKSB0aGVuCnRhc2sud2FpdCgpCkVxdWlwV2VhcG9uKF9HLlNlbGVjdFdlYXBvbikKZW5kClBvc01vbiA9IHYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUKaWYgbm90IF9HLkZhc3RBdHRhY2sgdGhlbgpnYW1lOkdldFNlcnZpY2UgJ1ZpcnR1YWxVc2VyJzpDYXB0dXJlQ29udHJvbGxlcigpCmdhbWU6R2V0U2VydmljZSAnVmlydHVhbFVzZXInOkJ1dHRvbjFEb3duKFZlY3RvcjIubmV3KDEyODAsIDY3MikpCmVuZAp2Lkh1bWFub2lkUm9vdFBhcnQuU2l6ZSA9IFZlY3RvcjMubmV3KDgwLCA4MCwgODApCnYuSHVtYW5vaWQuSnVtcFBvd2VyID0gMAp2Lkh1bWFub2lkLldhbGtTcGVlZCA9IDAKdi5IdW1hbm9pZFJvb3RQYXJ0LkNhbkNvbGxpZGUgPSBmYWxzZQp2Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDExKQp2Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDE0KQp2Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDE2KQp0b1RhcmdldCh2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lICogTWV0aG9kRmFybSkKdW50aWwgbm90IF9HLkF1dG9NdXNrZXRlZXJIYXQgb3Igdi5IdW1hbm9pZC5IZWFsdGggPD0gMCBvciBub3Qgdi5QYXJlbnQgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuUGxheWVyR3VpLk1haW4uUXVlc3QuVmlzaWJsZSA9PSBmYWxzZQpCcmluZ01vYiA9IGZhbHNlCkZhc3RBdHRhY2sgPSBmYWxzZQplbmQKZW5kCmVsc2UKdG9UYXJnZXQoQ0ZyYW1lLm5ldygtMTMyMDYuNDUyMTQ4NDM4LCA0MjUuODkxOTk4MjkxMDIsIC03OTY0LjU1MzcxMDkzNzUpKQplbmQKZWxzZQp0b1RhcmdldChDRnJhbWUubmV3KC0xMjQ0My44NjcxODc1LCAzMzIuNDAzOTYxMTgxNjQsIC03Njc1LjQ4OTI1NzgxMjUpKQppZiAoVmVjdG9yMy5uZXcoLTEyNDQzLjg2NzE4NzUsIDMzMi40MDM5NjExODE2NCwgLTc2NzUuNDg5MjU3ODEyNSkgLSBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikuTWFnbml0dWRlIDw9IDMwIHRoZW4Kd2FpdCgxLjUpCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIlN0YXJ0UXVlc3QiLCJDaXRpemVuUXVlc3QiLCAxKQplbmQKZW5kCmVsc2VpZiBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5EYXRhLkxldmVsLlZhbHVlID49IDE4MDAgYW5kIGdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkNpdGl6ZW5RdWVzdFByb2dyZXNzIikuS2lsbGVkQm9zcyA9PSBmYWxzZSB0aGVuCmlmIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLlBsYXllckd1aS5NYWluLlF1ZXN0LlZpc2libGUgYW5kIHN0cmluZy5maW5kKGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLlBsYXllckd1aS5NYWluLlF1ZXN0LkNvbnRhaW5lci5RdWVzdFRpdGxlLlRpdGxlLlRleHQsICJDYXB0YWluIEVsZXBoYW50IikgYW5kIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLlBsYXllckd1aS5NYWluLlF1ZXN0LlZpc2libGUgPT0gdHJ1ZSB0aGVuCmlmIGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpGaW5kRmlyc3RDaGlsZCgiQ2FwdGFpbiBFbGVwaGFudCIpIHRoZW4KZm9yIGksIHYgaW4gcGFpcnMoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkdldENoaWxkcmVuKCkpIGRvCmlmIHYuTmFtZSA9PSAiQ2FwdGFpbiBFbGVwaGFudCIgdGhlbgpPbGRDRnJhbWVFbGVwaGFudCA9IHYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUKcmVwZWF0CnRhc2sud2FpdCgpCkJyaW5nTW9iID0gdHJ1ZQpGYXN0QXR0YWNrID0gdHJ1ZQppZiBub3QgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZChfRy5TZWxlY3RXZWFwb24pIHRoZW4KdGFzay53YWl0KCkKRXF1aXBXZWFwb24oX0cuU2VsZWN0V2VhcG9uKQplbmQKUG9zTW9uID0gdi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZQppZiBub3QgX0cuRmFzdEF0dGFjayB0aGVuCmdhbWU6R2V0U2VydmljZSAnVmlydHVhbFVzZXInOkNhcHR1cmVDb250cm9sbGVyKCkKZ2FtZTpHZXRTZXJ2aWNlICdWaXJ0dWFsVXNlcic6QnV0dG9uMURvd24oVmVjdG9yMi5uZXcoMTI4MCwgNjcyKSkKZW5kCnYuSHVtYW5vaWRSb290UGFydC5TaXplID0gVmVjdG9yMy5uZXcoODAsIDgwLCA4MCkKdi5IdW1hbm9pZC5KdW1wUG93ZXIgPSAwCnYuSHVtYW5vaWQuV2Fsa1NwZWVkID0gMAp2Lkh1bWFub2lkUm9vdFBhcnQuQ2FuQ29sbGlkZSA9IGZhbHNlCnYuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTEpCnYuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTQpCnYuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTYpCnRvVGFyZ2V0KHYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgKiBNZXRob2RGYXJtKQp1bnRpbCBub3QgX0cuQXV0b011c2tldGVlckhhdCBvciB2Lkh1bWFub2lkLkhlYWx0aCA8PSAwIG9yIG5vdCB2LlBhcmVudCBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5QbGF5ZXJHdWkuTWFpbi5RdWVzdC5WaXNpYmxlID09IGZhbHNlCkJyaW5nTW9iID0gZmFsc2UKRmFzdEF0dGFjayA9IGZhbHNlCmVuZAplbmQKZWxzZQp0b1RhcmdldChDRnJhbWUubmV3KC0xMzM3NC44ODk2NDg0MzgsIDQyMS4yNzc1MjY4NTU0NywgLTgyMjUuMjA4OTg0Mzc1KSkKZW5kCmVsc2UKdG9UYXJnZXQoQ0ZyYW1lLm5ldygtMTI0NDMuODY3MTg3NSwgMzMyLjQwMzk2MTE4MTY0LCAtNzY3NS40ODkyNTc4MTI1KSkKaWYgKENGcmFtZS5uZXcoLTEyNDQzLjg2NzE4NzUsIDMzMi40MDM5NjExODE2NCwgLTc2NzUuNDg5MjU3ODEyNSkuUG9zaXRpb24gLSBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikuTWFnbml0dWRlIDw9IDQgdGhlbgp3YWl0KDEuNSkKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQ2l0aXplblF1ZXN0UHJvZ3Jlc3MiLCAiQ2l0aXplbiIpCmVuZAplbmQKZWxzZWlmIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkRhdGEuTGV2ZWwuVmFsdWUgPj0gMTgwMCBhbmQgZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQ2l0aXplblF1ZXN0UHJvZ3Jlc3MiLCAiQ2l0aXplbiIpID09IDIgdGhlbgp0b1RhcmdldChDRnJhbWUubmV3KC0xMjUxMi4xMzg2NzE4NzUsIDM0MC4zOTI3OTE3NDgwNSwgLTk4NzIuODIwMzEyNSkpCmVuZAplbmQKZW5kKQplbmQKZW5kKQplbmQpCnBhZ2U1OlRvZ2dsZSgiQXV0byBDYXZhbmRlclxu4Lit4Lit4LmC4LiV4LmJ4Lir4Liy4LiU4Liy4Lia4LiE4Liy4LmA4Lin4LiZ4LmA4LiU4Lit4Lij4LmMIiwgX0cuQXV0b0NhdmFuZGVyLCBmdW5jdGlvbih2YWx1ZSkKX0cuQXV0b0NhdmFuZGVyID0gdmFsdWUKaWYgdmFsdWUgPT0gZmFsc2UgdGhlbgp0YXNrLndhaXQoKQp0b1RhcmdldChnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUpCnRhc2sud2FpdCgpCmVuZAp0YXNrLnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgdGFzay53YWl0KCkgZG8KcGNhbGwoZnVuY3Rpb24oKQppZiBfRy5BdXRvQ2F2YW5kZXIgdGhlbgppZiBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLkVuZW1pZXM6RmluZEZpcnN0Q2hpbGQoIkJlYXV0aWZ1bCBQaXJhdGUiKSB0aGVuCmZvciBpLCB2IGluIHBhaXJzKGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpHZXRDaGlsZHJlbigpKSBkbwppZiB2Lk5hbWUgPT0gKCJCZWF1dGlmdWwgUGlyYXRlIikgYW5kIHYuSHVtYW5vaWQuSGVhbHRoID4gMCBhbmQgdjpJc0EoIk1vZGVsIikgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkIikgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKSB0aGVuCnJlcGVhdAp0YXNrLndhaXQoKQpCcmluZ01vYiA9IHRydWUKRmFzdEF0dGFjayA9IHRydWUKaWYgbm90IGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoX0cuU2VsZWN0V2VhcG9uKSB0aGVuCnRhc2sud2FpdCgpCkVxdWlwV2VhcG9uKF9HLlNlbGVjdFdlYXBvbikKZW5kClBvc01vbiA9IHYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUKaWYgbm90IF9HLkZhc3RBdHRhY2sgdGhlbgpnYW1lOkdldFNlcnZpY2UgJ1ZpcnR1YWxVc2VyJzpDYXB0dXJlQ29udHJvbGxlcigpCmdhbWU6R2V0U2VydmljZSAnVmlydHVhbFVzZXInOkJ1dHRvbjFEb3duKFZlY3RvcjIubmV3KDEyODAsIDY3MikpCmVuZAp2Lkh1bWFub2lkUm9vdFBhcnQuU2l6ZSA9IFZlY3RvcjMubmV3KDgwLCA4MCwgODApCnYuSHVtYW5vaWQuSnVtcFBvd2VyID0gMAp2Lkh1bWFub2lkLldhbGtTcGVlZCA9IDAKdi5IdW1hbm9pZFJvb3RQYXJ0LkNhbkNvbGxpZGUgPSBmYWxzZQp2Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDExKQp2Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDE0KQp2Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDE2KQp0b1RhcmdldCh2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lICogTWV0aG9kRmFybSkKdW50aWwgbm90IF9HLkF1dG9DYXZhbmRlciBvciB2Lkh1bWFub2lkLkhlYWx0aCA8PSAwCkJyaW5nTW9iID0gZmFsc2UKRmFzdEF0dGFjayA9IGZhbHNlCmVuZAplbmQKZWxzZQp0b1RhcmdldChDRnJhbWUubmV3KDUyODMuNjA5Mzc1LCAyMi41NjIyMzQ4Nzg1NCwgLTExMC43ODI4NTIxNzI4NSkpCmVuZAplbmQKZW5kKQplbmQKZW5kKQplbmQpCnBhZ2U1OlRvZ2dsZSgiQXV0byBZYW1hIFN3b3JkXG7guK3guK3guYLguJXguYnguKvguLLguJTguLLguJrguKLguLLguKHguLAiLCBfRy5BdXRvWWFtYVN3b3JkLCBmdW5jdGlvbih2YWx1ZSkKX0cuQXV0b1lhbWFTd29yZCA9IHZhbHVlCnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgdGFzay53YWl0KCkgZG8KaWYgX0cuQXV0b1lhbWFTd29yZCB0aGVuCmlmIGdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkVsaXRlSHVudGVyIiwgIlByb2dyZXNzIikgPj0gMzAgdGhlbgpyZXBlYXQKdGFzay53YWl0KCkKZmlyZWNsaWNrZGV0ZWN0b3IoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5NYXAuV2F0ZXJmYWxsLlNlYWxlZEthdGFuYS5IYW5kbGUuQ2xpY2tEZXRlY3RvcikKdW50aWwgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJZYW1hIikgb3Igbm90IEF1dG9ZYW1hCmVuZAplbmQKZW5kCmVuZCkKZW5kKQpwYWdlNTpUb2dnbGUoIkF1dG8gVHVzaGl0YSBTd29yZFxu4Lit4Lit4LmC4LiV4LmJ4Lir4Liy4LiU4Liy4Lia4LiX4Li54LiK4Li04LiV4LiwIiwgX0cuQXV0b1R1c2hpdGFTd29yZCwgZnVuY3Rpb24odmFsdWUpCl9HLkF1dG9UdXNoaXRhU3dvcmQgPSB2YWx1ZQppZiB2YWx1ZSA9PSBmYWxzZSB0aGVuCnRhc2sud2FpdCgpCnRvVGFyZ2V0KGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSkKdGFzay53YWl0KCkKZW5kCnRhc2suc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB0YXNrLndhaXQoKSBkbwppZiBfRy5BdXRvVHVzaGl0YVN3b3JkIHRoZW4KaWYgZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkZpbmRGaXJzdENoaWxkKCJMb25nbWEiKSB0aGVuCmZvciBpLCB2IGluIHBhaXJzKGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpHZXRDaGlsZHJlbigpKSBkbwppZiB2Lk5hbWUgPT0gKCJMb25nbWEiIG9yIHYuTmFtZSA9PSAiTG9uZ21hIikgYW5kIHYuSHVtYW5vaWQuSGVhbHRoID4gMCBhbmQgdjpJc0EoIk1vZGVsIikgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkIikgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKSB0aGVuCnJlcGVhdAp0YXNrLndhaXQoKQpCcmluZ01vYiA9IHRydWUKRmFzdEF0dGFjayA9IHRydWUKaWYgbm90IGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoX0cuU2VsZWN0V2VhcG9uKSB0aGVuCnRhc2sud2FpdCgpCkVxdWlwV2VhcG9uKF9HLlNlbGVjdFdlYXBvbikKZW5kClBvc01vbiA9IHYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUKaWYgbm90IF9HLkZhc3RBdHRhY2sgdGhlbgpnYW1lOkdldFNlcnZpY2UgJ1ZpcnR1YWxVc2VyJzpDYXB0dXJlQ29udHJvbGxlcigpCmdhbWU6R2V0U2VydmljZSAnVmlydHVhbFVzZXInOkJ1dHRvbjFEb3duKFZlY3RvcjIubmV3KDEyODAsIDY3MikpCmVuZAp2Lkh1bWFub2lkUm9vdFBhcnQuU2l6ZSA9IFZlY3RvcjMubmV3KDgwLCA4MCwgODApCnYuSHVtYW5vaWQuSnVtcFBvd2VyID0gMAp2Lkh1bWFub2lkLldhbGtTcGVlZCA9IDAKdi5IdW1hbm9pZFJvb3RQYXJ0LkNhbkNvbGxpZGUgPSBmYWxzZQp2Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDExKQp2Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDE0KQp2Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDE2KQp0b1RhcmdldCh2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lICogTWV0aG9kRmFybSkKdW50aWwgbm90IF9HLkF1dG9UdXNoaXRhU3dvcmQgb3Igbm90IHYuUGFyZW50IG9yIHYuSHVtYW5vaWQuSGVhbHRoIDw9IDAKQnJpbmdNb2IgPSBmYWxzZQpGYXN0QXR0YWNrID0gZmFsc2UKZW5kCmVuZAplbHNlCnRvVGFyZ2V0KENGcmFtZS5uZXcoLTEwMjM4Ljg3NTk3NjU2MywgMzg5Ljc5MTI5MDI4MzIsIC05NTQ5Ljc5Mzk0NTMxMjUpKQplbmQKZW5kCmVuZAplbmQpCmVuZCkKcGFnZTU6VG9nZ2xlKCJBdXRvIFNlcnBlbnQgQm93XG7guK3guK3guYLguJXguYnguKvguLLguJjguJnguLnguIfguLnguJ7guLTguKkiLCBfRy5BdXRvU2VycGVudEJvdywgZnVuY3Rpb24odmFsdWUpCl9HLkF1dG9TZXJwZW50Qm93ID0gdmFsdWUKaWYgdmFsdWUgPT0gZmFsc2UgdGhlbgp0YXNrLndhaXQoKQp0b1RhcmdldChnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUpCnRhc2sud2FpdCgpCmVuZAp0YXNrLnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgdGFzay53YWl0KCkgZG8KaWYgX0cuQXV0b1NlcnBlbnRCb3cgdGhlbgppZiBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLkVuZW1pZXM6RmluZEZpcnN0Q2hpbGQoIklzbGFuZCBFbXByZXNzIikgdGhlbgpmb3IgaSwgdiBpbiBwYWlycyhnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLkVuZW1pZXM6R2V0Q2hpbGRyZW4oKSkgZG8KaWYgdi5OYW1lID09ICgiSXNsYW5kIEVtcHJlc3MiIG9yIHYuTmFtZSA9PSAiSXNsYW5kIEVtcHJlc3MiKSBhbmQgdi5IdW1hbm9pZC5IZWFsdGggPiAwIGFuZCB2OklzQSgiTW9kZWwiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpIHRoZW4KcmVwZWF0CnRhc2sud2FpdCgpCkJyaW5nTW9iID0gdHJ1ZQpGYXN0QXR0YWNrID0gdHJ1ZQppZiBub3QgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZChfRy5TZWxlY3RXZWFwb24pIHRoZW4KdGFzay53YWl0KCkKRXF1aXBXZWFwb24oX0cuU2VsZWN0V2VhcG9uKQplbmQKUG9zTW9uID0gdi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZQppZiBub3QgX0cuRmFzdEF0dGFjayB0aGVuCmdhbWU6R2V0U2VydmljZSAnVmlydHVhbFVzZXInOkNhcHR1cmVDb250cm9sbGVyKCkKZ2FtZTpHZXRTZXJ2aWNlICdWaXJ0dWFsVXNlcic6QnV0dG9uMURvd24oVmVjdG9yMi5uZXcoMTI4MCwgNjcyKSkKZW5kCnYuSHVtYW5vaWRSb290UGFydC5TaXplID0gVmVjdG9yMy5uZXcoODAsIDgwLCA4MCkKdi5IdW1hbm9pZC5KdW1wUG93ZXIgPSAwCnYuSHVtYW5vaWQuV2Fsa1NwZWVkID0gMAp2Lkh1bWFub2lkUm9vdFBhcnQuQ2FuQ29sbGlkZSA9IGZhbHNlCnYuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTEpCnYuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTQpCnYuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTYpCnRvVGFyZ2V0KHYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgKiBNZXRob2RGYXJtKQp1bnRpbCBub3QgX0cuQXV0b1NlcnBlbnRCb3cgb3Igbm90IHYuUGFyZW50IG9yIHYuSHVtYW5vaWQuSGVhbHRoIDw9IDAKQnJpbmdNb2IgPSBmYWxzZQpGYXN0QXR0YWNrID0gZmFsc2UKZW5kCmVuZAplbHNlCnRvVGFyZ2V0KENGcmFtZS5uZXcoNTU0My44NjMyODEyNSwgNjY4Ljk3Mzk5OTAyMzQ0LCAxOTkuMDM0MTc5Njg3NSkpCmVuZAplbmQKZW5kCmVuZCkKZW5kKQpwYWdlNTpUb2dnbGUoIkF1dG8gRGFyayBEYWdnZXJcbuC4reC4reC5guC4leC5ieC4q+C4suC5guC4ouC4o+C4uOC4iOC4tOC5i+C4pyIsIF9HLkF1dG9EYXJrRGFnZ2VyLCBmdW5jdGlvbih2YWx1ZSkKX0cuQXV0b0RhcmtEYWdnZXIgPSB2YWx1ZQppZiB2YWx1ZSA9PSBmYWxzZSB0aGVuCnRhc2sud2FpdCgpCnRvVGFyZ2V0KGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSkKdGFzay53YWl0KCkKZW5kCnRhc2suc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB0YXNrLndhaXQoKSBkbwpwY2FsbChmdW5jdGlvbigpCmlmIF9HLkF1dG9EYXJrRGFnZ2VyIHRoZW4KaWYgZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkZpbmRGaXJzdENoaWxkKCJyaXBfaW5kcmEgVHJ1ZSBGb3JtIikgdGhlbgpmb3IgaSwgdiBpbiBwYWlycyhnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLkVuZW1pZXM6R2V0Q2hpbGRyZW4oKSkgZG8KaWYgdi5OYW1lID09ICgicmlwX2luZHJhIFRydWUgRm9ybSIgb3Igdi5OYW1lID09ICJyaXBfaW5kcmEgVHJ1ZSBGb3JtIikgYW5kIHYuSHVtYW5vaWQuSGVhbHRoID4gMCBhbmQgdjpJc0EoIk1vZGVsIikgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkIikgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKSB0aGVuCnJlcGVhdAp0YXNrLndhaXQoKQpCcmluZ01vYiA9IHRydWUKRmFzdEF0dGFjayA9IHRydWUKaWYgbm90IGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoX0cuU2VsZWN0V2VhcG9uKSB0aGVuCnRhc2sud2FpdCgpCkVxdWlwV2VhcG9uKF9HLlNlbGVjdFdlYXBvbikKZW5kClBvc01vbiA9IHYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUKaWYgbm90IF9HLkZhc3RBdHRhY2sgdGhlbgpnYW1lOkdldFNlcnZpY2UgJ1ZpcnR1YWxVc2VyJzpDYXB0dXJlQ29udHJvbGxlcigpCmdhbWU6R2V0U2VydmljZSAnVmlydHVhbFVzZXInOkJ1dHRvbjFEb3duKFZlY3RvcjIubmV3KDEyODAsIDY3MikpCmVuZAp2Lkh1bWFub2lkUm9vdFBhcnQuU2l6ZSA9IFZlY3RvcjMubmV3KDgwLCA4MCwgODApCnYuSHVtYW5vaWQuSnVtcFBvd2VyID0gMAp2Lkh1bWFub2lkLldhbGtTcGVlZCA9IDAKdi5IdW1hbm9pZFJvb3RQYXJ0LkNhbkNvbGxpZGUgPSBmYWxzZQp2Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDExKQp2Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDE0KQp2Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDE2KQp0b1RhcmdldCh2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lICogTWV0aG9kRmFybSkKdW50aWwgbm90IF9HLkF1dG9EYXJrRGFnZ2VyIG9yIG5vdCB2LlBhcmVudCBvciB2Lkh1bWFub2lkLkhlYWx0aCA8PSAwCkJyaW5nTW9iID0gZmFsc2UKRmFzdEF0dGFjayA9IGZhbHNlCmVuZAplbmQKZWxzZQp0b1RhcmdldChDRnJhbWUubmV3KC01MzQ0LjgyMjI2NTYyNSwgNDIzLjk4NTQxMjU5NzY2LCAtMjcyNS4wOTMwMTc1NzgxKSkKZW5kCmVuZAplbmQpCmVuZAplbmQpCmVuZCkKc3Bhd24oZnVuY3Rpb24oKQpsb2NhbCBnZyA9IGdldHJhd21ldGF0YWJsZShnYW1lKQpsb2NhbCBvbGQgPSBnZy5fX25hbWVjYWxsCnNldHJlYWRvbmx5KGdnLGZhbHNlKQpnZy5fX25hbWVjYWxsID0gbmV3Y2Nsb3N1cmUoZnVuY3Rpb24oLi4uKQpsb2NhbCBtZXRob2QgPSBnZXRuYW1lY2FsbG1ldGhvZCgpCmxvY2FsIGFyZ3MgPSB7Li4ufQppZiB0b3N0cmluZyhtZXRob2QpID09ICJGaXJlU2VydmVyIiB0aGVuCmlmIHRvc3RyaW5nKGFyZ3NbMV0pID09ICJSZW1vdGVFdmVudCIgdGhlbgppZiB0b3N0cmluZyhhcmdzWzJdKSB+PSAidHJ1ZSIgYW5kIHRvc3RyaW5nKGFyZ3NbMl0pIH49ICJmYWxzZSIgdGhlbgppZiBfRy5Vc2VTa2lsbCBhbmQgX0cuQXV0b0Zhcm1GcnVpdE1hc3RlcnkgdGhlbgppZiB0eXBlKGFyZ3NbMl0pID09ICJ2ZWN0b3IiIHRoZW4KYXJnc1syXSA9IFBvc2l0aW9uU2tpbGxNYXN0ZXJ5RGV2aWxGcnVpdAplbHNlCmFyZ3NbMl0gPSBDRnJhbWUubmV3KFBvc2l0aW9uU2tpbGxNYXN0ZXJ5RGV2aWxGcnVpdCkKZW5kCnJldHVybiBvbGQodW5wYWNrKGFyZ3MpKQplbmQKZW5kCmVuZAplbmQKcmV0dXJuIG9sZCguLi4pCmVuZCkKZW5kKQpzcGF3bihmdW5jdGlvbigpCmxvY2FsIGd0ID0gZ2V0cmF3bWV0YXRhYmxlKGdhbWUpCmxvY2FsIG9sZCA9IGd0Ll9fbmFtZWNhbGwKc2V0cmVhZG9ubHkoZ3QsZmFsc2UpCmd0Ll9fbmFtZWNhbGwgPSBuZXdjY2xvc3VyZShmdW5jdGlvbiguLi4pCmxvY2FsIGFyZ3MgPSB7Li4ufQppZiBnZXRuYW1lY2FsbG1ldGhvZCgpID09ICJJbnZva2VTZXJ2ZXIiIHRoZW4KaWYgX0cuU2VsZWN0V2VhcG9uR3VuIHRoZW4KaWYgX0cuU2VsZWN0V2VhcG9uR3VuID09ICJTb3VsIEd1aXRhciIgdGhlbgppZiB0b3N0cmluZyhhcmdzWzJdKSA9PSAiVEFQIiB0aGVuCmlmIEF1dG9GYXJtR3VuTWFzdGVyeSBhbmQgX0cuVXNlU2tpbGwgdGhlbgphcmdzWzNdID0gUG9zaXRpb25Ta2lsbE1hc3RlcnlHdW4KZW5kCmVuZAplbmQKZW5kCmVuZApyZXR1cm4gb2xkKHVucGFjayhhcmdzKSkKZW5kKQpzZXRyZWFkb25seShndCx0cnVlKQplbmQpCnRhc2suc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB3YWl0KCkgZG8KZm9yIGksdiBpbiBwYWlycyhnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQmFja3BhY2s6R2V0Q2hpbGRyZW4oKSkgZG8KaWYgdjpJc0EoIlRvb2wiKSB0aGVuCmlmIHY6RmluZEZpcnN0Q2hpbGQoIlJlbW90ZUZ1bmN0aW9uU2hvb3QiKSB0aGVuCl9HLlNlbGVjdFdlYXBvbkd1biA9IHYuTmFtZQplbmQKZW5kCmVuZAplbmQKZW5kKQpzcGF3bihmdW5jdGlvbigpCndoaWxlIHdhaXQoKSBkbwpmb3IgaSx2IGluIHBhaXJzKGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5CYWNrcGFjazpHZXRDaGlsZHJlbigpKSBkbwppZiB2OklzQSgiVG9vbCIpIHRoZW4KaWYgdi5Ub29sVGlwID09ICJHdW4iIHRoZW4KX0cuU2VsZWN0V2VhcG9uR3VuID0gdi5OYW1lCmVuZAplbmQKZW5kCmZvciBpLHYgaW4gcGFpcnMoZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpHZXRDaGlsZHJlbigpKSBkbwppZiB2OklzQSgiVG9vbCIpIHRoZW4KaWYgdi5Ub29sVGlwID09ICJHdW4iIHRoZW4KX0cuU2VsZWN0V2VhcG9uR3VuID0gdi5OYW1lCmVuZAplbmQKZW5kCmVuZAplbmQpCmxvY2FsIENhbSA9IHdvcmtzcGFjZS5DdXJyZW50Q2FtZXJhCmxvY2FsIGhvdGtleSA9IHRydWUKZnVuY3Rpb24gbG9va0F0KHRhcmdldCwgZXllKQpDYW0uQ0ZyYW1lID0gQ0ZyYW1lLm5ldyh0YXJnZXQsIGV5ZSkKZW5kCmZ1bmN0aW9uIENoZWNrTW9uRkYodHJnX3BhcnQpCmxvY2FsIG5lYXJlc3QgPSBuaWwKbG9jYWwgbGFzdCA9IG1hdGguaHVnZQpmb3IgaSx2IGluIHBhaXJzKGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpHZXRDaGlsZHJlbigpKSBkbwppZiB2Lk5hbWUgPT0gUXVlc3RDaGVjaygpWzNdIHRoZW4KbG9jYWwgZVBvcywgdmlzc3NzID0gd29ya3NwYWNlLkN1cnJlbnRDYW1lcmE6V29ybGRUb1ZpZXdwb3J0UG9pbnQodlt0cmdfcGFydF0uUG9zaXRpb24pCmxvY2FsIEFjY1BvcyA9IFZlY3RvcjIubmV3KGVQb3MueCwgZVBvcy55KQpsb2NhbCBtb3VzZVBvcyA9IFZlY3RvcjIubmV3KHdvcmtzcGFjZS5DdXJyZW50Q2FtZXJhLlZpZXdwb3J0U2l6ZS54IC8gMiwgd29ya3NwYWNlLkN1cnJlbnRDYW1lcmEuVmlld3BvcnRTaXplLnkgLyAyKQpsb2NhbCBkaXN0YW5jZSA9IChBY2NQb3MgLSBtb3VzZVBvcykubWFnbml0dWRlCmlmIGRpc3RhbmNlIDwgbGFzdCBhbmQgdmlzc3NzIGFuZCBob3RrZXkgPT0gdHJ1ZSBhbmQgZGlzdGFuY2UgPCAxNTAwIHRoZW4KbGFzdCA9IGRpc3RhbmNlCm5lYXJlc3QgPSB2CmVuZAplbmQKZW5kCnJldHVybiBuZWFyZXN0CmVuZApzcGF3bihmdW5jdGlvbigpCndoaWxlIHdhaXQoKSBkbwppZiBfRy5BdXRvRmFybUd1bk1hc3RlcnkgYW5kIF9HLlVzZVNraWxsID09IHRydWUgdGhlbgpsb2NhbCBjbG9zZXN0ID0gQ2hlY2tNb25GRigiSHVtYW5vaWRSb290UGFydCIpCmxvb2tBdChDYW0uQ0ZyYW1lLnAsIGNsb3Nlc3Q6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKS5Qb3NpdGlvbikKbG9jYWwgYXJncyA9IHsKWzFdID0gUG9zaXRpb25Ta2lsbE1hc3RlcnlHdW4KfQpnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXJbX0cuU2VsZWN0V2VhcG9uR3VuXS5SZW1vdGVwYWdlMTQ6RmlyZVNlcnZlcih1bnBhY2soYXJncykpCmlmIG5vdCBzdHJpbmcuZmluZChnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5QbGF5ZXJHdWkuTWFpbi5RdWVzdC5Db250YWluZXIuUXVlc3RUaXRsZS5UaXRsZS5UZXh0LCBRdWVzdENoZWNrKClbNl0pIHRoZW4KZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQWJhbmRvblF1ZXN0IikKZW5kCmVuZAplbmQKZW5kKQpzcGF3bihmdW5jdGlvbigpCndoaWxlIHdhaXQoKSBkbwppZiBfRy5BdXRvRmFybUd1bk1hc3RlcnkgYW5kIF9HLlVzZVNraWxsID09IHRydWUgdGhlbgpsb2NhbCBhcmdzID0gewpbMV0gPSBQb3NpdGlvblNraWxsTWFzdGVyeUd1biwKWzJdID0gTW9uSHVtYW5vaWRSb290UGFydAp9CmdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcltfRy5TZWxlY3RXZWFwb25HdW5dLlJlbW90ZUZ1bmN0aW9uU2hvb3Q6SW52b2tlU2VydmVyKHVucGFjayhhcmdzKSkKZW5kCmVuZAplbmQpCnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgd2FpdCgpIGRvCmlmIF9HLkF1dG9GYXJtR3VuTWFzdGVyeSB0aGVuCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbFVzZXIiKTpDYXB0dXJlQ29udHJvbGxlcigpCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbFVzZXIiKTpCdXR0b24xRG93bihWZWN0b3IyLm5ldygxMjgwLCA2NzIpKQplbmQKZW5kCmVuZCkKcGFnZTY6U2VwZXJhdG9yKCLinKgiKQpfRy5IZWFsdGhNcyA9IDI1CnBhZ2U2OlRvZ2dsZSgiQXV0byBGYXJtR3VuTWFzdGVyeVxu4Lif4Liy4Lij4LmM4Lih4Lih4Liy4Liq4LmA4LiV4Lit4Lij4Li14LmI4Lib4Li34LiZIiwgX0cuU2V0dGluZ3MuQXV0b0Zhcm1HdW5NYXN0ZXJ5LCBmdW5jdGlvbih2YWx1ZSkKX0cuQXV0b0Zhcm1HdW5NYXN0ZXJ5ID0gdmFsdWUKX0cuU2V0dGluZ3MuQXV0b0Zhcm1HdW5NYXN0ZXJ5ID0gdmFsdWUKU2F2ZVNldHRpbmdzKCkKaWYgdmFsdWUgPT0gZmFsc2UgdGhlbgp0b1RhcmdldChnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUpCmVuZApzcGF3bihmdW5jdGlvbigpCndoaWxlIHdhaXQoKSBkbwpsb2NhbCBNeUxldmVsID0gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkRhdGEuTGV2ZWwuVmFsdWUKbG9jYWwgUXVlc3RDID0gZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuUGxheWVyR3VpLk1haW4uUXVlc3QKcGNhbGwoZnVuY3Rpb24oKQppZiBfRy5BdXRvRmFybUd1bk1hc3RlcnkgdGhlbgppZiBub3Qgc3RyaW5nLmZpbmQoZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuUGxheWVyR3VpLk1haW4uUXVlc3QuQ29udGFpbmVyLlF1ZXN0VGl0bGUuVGl0bGUuVGV4dCwgUXVlc3RDaGVjaygpWzZdKSB0aGVuCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkFiYW5kb25RdWVzdCIpCmVuZAppZiBRdWVzdEMuVmlzaWJsZSA9PSB0cnVlIHRoZW4KaWYgZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkZpbmRGaXJzdENoaWxkKFF1ZXN0Q2hlY2soKVszXSkgdGhlbgpmb3IgaSx2IGluIHBhaXJzKGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpHZXRDaGlsZHJlbigpKSBkbwppZiB2Lk5hbWUgPT0gUXVlc3RDaGVjaygpWzNdIHRoZW4KaWYgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpIGFuZCB2Lkh1bWFub2lkLkhlYWx0aCA+IDAgdGhlbgpQb3NNb24gPSB2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lCk1vbkh1bWFub2lkUm9vdFBhcnQgPSB2Lkh1bWFub2lkUm9vdFBhcnQKUG9zaXRpb25Ta2lsbE1hc3RlcnlHdW4gPSB2Lkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24KcmVwZWF0IHRhc2sud2FpdCgpCnYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgPSBQb3NNb24KaWYgdi5IdW1hbm9pZC5IZWFsdGggPD0gdi5IdW1hbm9pZC5NYXhIZWFsdGggKiBfRy5IZWFsdGhNcy8xMDAgdGhlbgpfRy5Vc2VTa2lsbCA9IHRydWUKdG9UYXJnZXQodi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSAqIE1ldGhvZEZhcm0pCnYuSHVtYW5vaWRSb290UGFydC5TaXplID0gVmVjdG9yMy5uZXcoMTIwLDEyMCwxMjApCnYuSHVtYW5vaWRSb290UGFydC5DYW5Db2xsaWRlID0gZmFsc2UKdi5IZWFkLkNhbkNvbGxpZGUgPSBmYWxzZQpCcmluZ01vYiA9IHRydWUKdi5IdW1hbm9pZFJvb3RQYXJ0LlRyYW5zcGFyZW5jeSA9IDEKRXF1aXBXZWFwb24oX0cuU2VsZWN0V2VhcG9uR3VuKQppZiBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoX0cuU2VsZWN0V2VhcG9uR3VuKSBhbmQgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKF9HLlNlbGVjdFdlYXBvbkd1bik6RmluZEZpcnN0Q2hpbGQoIlJlbW90ZUZ1bmN0aW9uU2hvb3QiKSB0aGVuCm1vdXNlMWNsaWNrKCkKbG9jYWwgYXJncyA9IHsKWzFdID0gdi5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uLApbMl0gPSB2Lkh1bWFub2lkUm9vdFBhcnQKfQpnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXJbX0cuU2VsZWN0V2VhcG9uR3VuXS5SZW1vdGVGdW5jdGlvblNob290Okludm9rZVNlcnZlcih1bnBhY2soYXJncykpCmVuZAppZiBfRy5Ta2lsbFogYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgdi5IdW1hbm9pZC5IZWFsdGggPiAwIHRoZW4KZ2FtZTpzZXJ2aWNlKCdWaXJ0dWFsSW5wdXRNYW5hZ2VyJyk6U2VuZEtleUV2ZW50KHRydWUsICJaIiwgZmFsc2UsIGdhbWUpCndhaXQoLjEpCmdhbWU6c2VydmljZSgnVmlydHVhbElucHV0TWFuYWdlcicpOlNlbmRLZXlFdmVudChmYWxzZSwgIloiLCBmYWxzZSwgZ2FtZSkKZW5kCmlmIF9HLlNraWxsWCBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZCIpIGFuZCB2Lkh1bWFub2lkLkhlYWx0aCA+IDAgdGhlbgpnYW1lOnNlcnZpY2UoJ1ZpcnR1YWxJbnB1dE1hbmFnZXInKTpTZW5kS2V5RXZlbnQodHJ1ZSwgIlgiLCBmYWxzZSwgZ2FtZSkKd2FpdCguMSkKZ2FtZTpzZXJ2aWNlKCdWaXJ0dWFsSW5wdXRNYW5hZ2VyJyk6U2VuZEtleUV2ZW50KGZhbHNlLCAiWCIsIGZhbHNlLCBnYW1lKQplbmQKZWxzZQpfRy5Vc2VTa2lsbCA9IGZhbHNlCnYuSHVtYW5vaWRSb290UGFydC5TaXplID0gVmVjdG9yMy5uZXcoMTIwLDEyMCwxMjApCnYuSHVtYW5vaWRSb290UGFydC5DYW5Db2xsaWRlID0gZmFsc2UKdi5IZWFkLkNhbkNvbGxpZGUgPSBmYWxzZQpCcmluZ01vYiA9IHRydWUKRmFzdEF0dGFjayA9IHRydWUKRXF1aXBXZWFwb24oX0cuU2VsZWN0V2VhcG9uKQp2Lkh1bWFub2lkUm9vdFBhcnQuVHJhbnNwYXJlbmN5ID0gMQp0b1RhcmdldCh2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lICogTWV0aG9kRmFybSkKaWYgKHYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUuUG9zaXRpb24gLSBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikuTWFnbml0dWRlIDw9IDUwIHRoZW4KZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsVXNlciIpOkNhcHR1cmVDb250cm9sbGVyKCkKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsVXNlciIpOkJ1dHRvbjFEb3duKFZlY3RvcjIubmV3KDEyODAsNjcyKSkKZW5kCmVuZAp1bnRpbCBub3QgX0cuQXV0b0Zhcm1HdW5NYXN0ZXJ5IG9yIG5vdCB2LlBhcmVudCBvciB2Lkh1bWFub2lkLkhlYWx0aCA8PSAwIG9yIFF1ZXN0Qy5WaXNpYmxlID09IGZhbHNlIG9yIG5vdCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikKZW5kCmVuZAplbmQKZWxzZQpfRy5Vc2VTa2lsbCA9IGZhbHNlCmlmIF9HLkF1dG9fQ0ZyYW1lIHRoZW4KdG9UYXJnZXQoUXVlc3RDaGVjaygpWzddW1NldENGYXJtZV0gKiBDRnJhbWUubmV3KDAsMzAsNSkpCmlmIChRdWVzdENoZWNrKClbN11bU2V0Q0Zhcm1lXS5Qb3NpdGlvbiAtIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKS5NYWduaXR1ZGUgPD0gNTAgdGhlbgppZiBTZXRDRmFybWUgPT0gbmlsIG9yIFNldENGYXJtZSA9PSAnJyB0aGVuClNldENGYXJtZSA9IDEKcHJpbnQoU2V0Q0Zhcm1lKQplbHNlaWYgU2V0Q0Zhcm1lID49ICNRdWVzdENoZWNrKClbN10gdGhlbgpTZXRDRmFybWUgPSAxCnByaW50KFNldENGYXJtZSkKZW5kClNldENGYXJtZSA9ICBTZXRDRmFybWUgKyAxCnByaW50KFNldENGYXJtZSkKd2FpdCgwLjUpCmVuZAplbHNlCmlmIEF0dGFja1JhbmRvbVR5cGVfTW9uQ0ZyYW1lID09IDEgdGhlbgp0b1RhcmdldChRdWVzdENoZWNrKClbN11bMV0gKiBDRnJhbWUubmV3KDAsMzAsMjApKQplbHNlaWYgQXR0YWNrUmFuZG9tVHlwZV9Nb25DRnJhbWUgPT0gMiB0aGVuCnRvVGFyZ2V0KFF1ZXN0Q2hlY2soKVs3XVsxXSAqIENGcmFtZS5uZXcoMCwzMCwtMjApKQplbHNlaWYgQXR0YWNrUmFuZG9tVHlwZV9Nb25DRnJhbWUgPT0gMyB0aGVuCnRvVGFyZ2V0KFF1ZXN0Q2hlY2soKVs3XVsxXSAqIENGcmFtZS5uZXcoMjAsMzAsMCkpCmVsc2VpZiBBdHRhY2tSYW5kb21UeXBlX01vbkNGcmFtZSA9PSA0IHRoZW4KdG9UYXJnZXQoUXVlc3RDaGVjaygpWzddWzFdICogQ0ZyYW1lLm5ldygwLDMwLC0yMCkpCmVsc2VpZiBBdHRhY2tSYW5kb21UeXBlX01vbkNGcmFtZSA9PSA1IHRoZW4KdG9UYXJnZXQoUXVlc3RDaGVjaygpWzddWzFdICogQ0ZyYW1lLm5ldygtMjAsMzAsMCkpCmVsc2UKdG9UYXJnZXQoUXVlc3RDaGVjaygpWzddWzFdICogQ0ZyYW1lLm5ldygwLDMwLDIwKSkKZW5kCmVuZAplbmQKZWxzZQp0b1RhcmdldChRdWVzdENoZWNrKClbMl0pCmlmIChRdWVzdENoZWNrKClbMl0uUG9zaXRpb24gLSBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikuTWFnbml0dWRlIDw9IDEgdGhlbgpCcmluZ01vYiA9IGZhbHNlCndhaXQoMC4yKQpnYW1lOkdldFNlcnZpY2UoJ1JlcGxpY2F0ZWRTdG9yYWdlJykuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJTdGFydFF1ZXN0IiwgUXVlc3RDaGVjaygpWzRdLCBRdWVzdENoZWNrKClbMV0pIHdhaXQoMC41KQp0b1RhcmdldChRdWVzdENoZWNrKClbN11bMV0gKiBDRnJhbWUubmV3KDAsMzAsNSkpCmVuZAplbmQKZW5kCmVuZCkKZW5kCmVuZCkKZW5kKQpwYWdlNjpUb2dnbGUoIkF1dG8gRmFybUZydWl0TWFzdGVyeVxu4Lif4Liy4Lij4LmM4Lih4Lih4Liy4Liq4LmA4LiV4Lit4Lij4Li14LmI4Lic4Lil4Lib4Li14Lio4Liy4LiIIiwgX0cuU2V0dGluZ3MuQXV0b0Zhcm1GcnVpdE1hc3RlcnksIGZ1bmN0aW9uKHZhbHVlKQpfRy5BdXRvRmFybUZydWl0TWFzdGVyeSA9IHZhbHVlCl9HLlNldHRpbmdzLkF1dG9GYXJtRnJ1aXRNYXN0ZXJ5ID0gdmFsdWUKU2F2ZVNldHRpbmdzKCkKaWYgdmFsdWUgPT0gZmFsc2UgdGhlbgp0b1RhcmdldChnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUpCmVuZApzcGF3bihmdW5jdGlvbigpCndoaWxlIHdhaXQoKSBkbwpsb2NhbCBNeUxldmVsID0gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkRhdGEuTGV2ZWwuVmFsdWUKbG9jYWwgUXVlc3RDID0gZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuUGxheWVyR3VpLk1haW4uUXVlc3QKcGNhbGwoZnVuY3Rpb24oKQppZiBfRy5BdXRvRmFybUZydWl0TWFzdGVyeSB0aGVuCmlmIG5vdCBzdHJpbmcuZmluZChnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5QbGF5ZXJHdWkuTWFpbi5RdWVzdC5Db250YWluZXIuUXVlc3RUaXRsZS5UaXRsZS5UZXh0LCBRdWVzdENoZWNrKClbNl0pIHRoZW4KZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQWJhbmRvblF1ZXN0IikKZW5kCmlmIFF1ZXN0Qy5WaXNpYmxlID09IHRydWUgdGhlbgppZiBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLkVuZW1pZXM6RmluZEZpcnN0Q2hpbGQoUXVlc3RDaGVjaygpWzNdKSB0aGVuCmZvciBpLHYgaW4gcGFpcnMoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkdldENoaWxkcmVuKCkpIGRvCmlmIHYuTmFtZSA9PSBRdWVzdENoZWNrKClbM10gdGhlbgppZiB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZCIpIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikgYW5kIHYuSHVtYW5vaWQuSGVhbHRoID4gMCB0aGVuClBvc2l0aW9uU2tpbGxNYXN0ZXJ5RGV2aWxGcnVpdCA9IHYuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbgpyZXBlYXQgdGFzay53YWl0KCkKaWYgbm90IHN0cmluZy5maW5kKGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLlBsYXllckd1aS5NYWluLlF1ZXN0LkNvbnRhaW5lci5RdWVzdFRpdGxlLlRpdGxlLlRleHQsIFF1ZXN0Q2hlY2soKVs2XSkgdGhlbgpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJBYmFuZG9uUXVlc3QiKQplbHNlCmlmIHYuSHVtYW5vaWQuSGVhbHRoIDw9IHYuSHVtYW5vaWQuTWF4SGVhbHRoICogX0cuSGVhbHRoTXMvMTAwIHRoZW4KX0cuVXNlU2tpbGwgPSB0cnVlCkVxdWlwQmxveEZydWl0KCkKdG9UYXJnZXQodi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSAqIE1ldGhvZEZhcm0pClBvc01vbiA9IHYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUKdi5IdW1hbm9pZFJvb3RQYXJ0LlNpemUgPSBWZWN0b3IzLm5ldyg2MCw2MCw2MCkKdi5IdW1hbm9pZFJvb3RQYXJ0LkNhbkNvbGxpZGUgPSBmYWxzZQp2Lkh1bWFub2lkLldhbGtTcGVlZCA9IDAKdi5IZWFkLkNhbkNvbGxpZGUgPSBmYWxzZQpCcmluZ01vYiA9IHRydWUKdi5IdW1hbm9pZFJvb3RQYXJ0LlRyYW5zcGFyZW5jeSA9IDEKaWYgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5EYXRhLkRldmlsRnJ1aXQuVmFsdWUpIHRoZW4KTWFzdGVyeURldmlsRnJ1aXQgPSByZXF1aXJlKGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcltnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuRGF0YS5EZXZpbEZydWl0LlZhbHVlXS5EYXRhKQpEZXZpbEZydWl0TWFzdGVyeSA9IGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcltnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuRGF0YS5EZXZpbEZydWl0LlZhbHVlXS5MZXZlbC5WYWx1ZQplbHNlaWYgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkRhdGEuRGV2aWxGcnVpdC5WYWx1ZSkgdGhlbgpNYXN0ZXJ5RGV2aWxGcnVpdCA9IHJlcXVpcmUoZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQmFja3BhY2tbZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkRhdGEuRGV2aWxGcnVpdC5WYWx1ZV0uRGF0YSkKRGV2aWxGcnVpdE1hc3RlcnkgPSBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFja1tnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuRGF0YS5EZXZpbEZydWl0LlZhbHVlXS5MZXZlbC5WYWx1ZQplbmQKaWYgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJEcmFnb24tRHJhZ29uIikgdGhlbgppZiBfRy5Ta2lsbFogYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgdi5IdW1hbm9pZC5IZWFsdGggPiAwIGFuZCBEZXZpbEZydWl0TWFzdGVyeSA+PSBNYXN0ZXJ5RGV2aWxGcnVpdC5MdmwuWiB0aGVuCmdhbWU6c2VydmljZSgnVmlydHVhbElucHV0TWFuYWdlcicpOlNlbmRLZXlFdmVudCh0cnVlLCAiWiIsIGZhbHNlLCBnYW1lKQp3YWl0KC4xKQpnYW1lOnNlcnZpY2UoJ1ZpcnR1YWxJbnB1dE1hbmFnZXInKTpTZW5kS2V5RXZlbnQoZmFsc2UsICJaIiwgZmFsc2UsIGdhbWUpCmVuZAppZiBfRy5Ta2lsbFogYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgdi5IdW1hbm9pZC5IZWFsdGggPiAwIGFuZCBEZXZpbEZydWl0TWFzdGVyeSA+PSBNYXN0ZXJ5RGV2aWxGcnVpdC5MdmwuWCB0aGVuCmdhbWU6c2VydmljZSgnVmlydHVhbElucHV0TWFuYWdlcicpOlNlbmRLZXlFdmVudCh0cnVlLCAiWCIsIGZhbHNlLCBnYW1lKQp3YWl0KC4xKQpnYW1lOnNlcnZpY2UoJ1ZpcnR1YWxJbnB1dE1hbmFnZXInKTpTZW5kS2V5RXZlbnQoZmFsc2UsICJYIiwgZmFsc2UsIGdhbWUpCmVuZAplbHNlaWYgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJIdW1hbi1IdW1hbjogQnVkZGhhIikgdGhlbgppZiBfRy5Ta2lsbFogYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgdi5IdW1hbm9pZC5IZWFsdGggPiAwIGFuZCBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuU2l6ZSA9PSBWZWN0b3IzLm5ldyg3LjYsIDcuNjc2LCAzLjY4NikgYW5kIERldmlsRnJ1aXRNYXN0ZXJ5ID49IE1hc3RlcnlEZXZpbEZydWl0Lkx2bC5aIHRoZW4KcHJpbnQoMSkKZWxzZQpnYW1lOnNlcnZpY2UoJ1ZpcnR1YWxJbnB1dE1hbmFnZXInKTpTZW5kS2V5RXZlbnQodHJ1ZSwgIloiLCBmYWxzZSwgZ2FtZSkKd2FpdCguMSkKZ2FtZTpzZXJ2aWNlKCdWaXJ0dWFsSW5wdXRNYW5hZ2VyJyk6U2VuZEtleUV2ZW50KGZhbHNlLCAiWiIsIGZhbHNlLCBnYW1lKQplbmQKaWYgX0cuU2tpbGxYIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkIikgYW5kIHYuSHVtYW5vaWQuSGVhbHRoID4gMCBhbmQgRGV2aWxGcnVpdE1hc3RlcnkgPj0gTWFzdGVyeURldmlsRnJ1aXQuTHZsLlggdGhlbgpnYW1lOnNlcnZpY2UoJ1ZpcnR1YWxJbnB1dE1hbmFnZXInKTpTZW5kS2V5RXZlbnQodHJ1ZSwgIlgiLCBmYWxzZSwgZ2FtZSkKd2FpdCguMSkKZ2FtZTpzZXJ2aWNlKCdWaXJ0dWFsSW5wdXRNYW5hZ2VyJyk6U2VuZEtleUV2ZW50KGZhbHNlLCAiWCIsIGZhbHNlLCBnYW1lKQplbmQKaWYgX0cuU2tpbGxDIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkIikgYW5kIHYuSHVtYW5vaWQuSGVhbHRoID4gMCBhbmQgRGV2aWxGcnVpdE1hc3RlcnkgPj0gTWFzdGVyeURldmlsRnJ1aXQuTHZsLkMgdGhlbgpnYW1lOnNlcnZpY2UoJ1ZpcnR1YWxJbnB1dE1hbmFnZXInKTpTZW5kS2V5RXZlbnQodHJ1ZSwgIkMiLCBmYWxzZSwgZ2FtZSkKd2FpdCguMSkKZ2FtZTpzZXJ2aWNlKCdWaXJ0dWFsSW5wdXRNYW5hZ2VyJyk6U2VuZEtleUV2ZW50KGZhbHNlLCAiQyIsIGZhbHNlLCBnYW1lKQplbmQKZWxzZWlmIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiVmVub20tVmVub20iKSB0aGVuCmlmIF9HLlNraWxsWiBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZCIpIGFuZCB2Lkh1bWFub2lkLkhlYWx0aCA+IDAgYW5kIERldmlsRnJ1aXRNYXN0ZXJ5ID49IE1hc3RlcnlEZXZpbEZydWl0Lkx2bC5aIHRoZW4KZ2FtZTpzZXJ2aWNlKCdWaXJ0dWFsSW5wdXRNYW5hZ2VyJyk6U2VuZEtleUV2ZW50KHRydWUsICJaIiwgZmFsc2UsIGdhbWUpCndhaXQoNCkKZ2FtZTpzZXJ2aWNlKCdWaXJ0dWFsSW5wdXRNYW5hZ2VyJyk6U2VuZEtleUV2ZW50KGZhbHNlLCAiWiIsIGZhbHNlLCBnYW1lKQplbmQKaWYgX0cuU2tpbGxYIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkIikgYW5kIHYuSHVtYW5vaWQuSGVhbHRoID4gMCBhbmQgRGV2aWxGcnVpdE1hc3RlcnkgPj0gTWFzdGVyeURldmlsRnJ1aXQuTHZsLlggdGhlbgpnYW1lOnNlcnZpY2UoJ1ZpcnR1YWxJbnB1dE1hbmFnZXInKTpTZW5kS2V5RXZlbnQodHJ1ZSwgIlgiLCBmYWxzZSwgZ2FtZSkKd2FpdCguMSkKZ2FtZTpzZXJ2aWNlKCdWaXJ0dWFsSW5wdXRNYW5hZ2VyJyk6U2VuZEtleUV2ZW50KGZhbHNlLCAiWCIsIGZhbHNlLCBnYW1lKQplbmQKaWYgX0cuU2tpbGxDIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkIikgYW5kIHYuSHVtYW5vaWQuSGVhbHRoID4gMCBhbmQgRGV2aWxGcnVpdE1hc3RlcnkgPj0gTWFzdGVyeURldmlsRnJ1aXQuTHZsLkMgdGhlbgpnYW1lOnNlcnZpY2UoJ1ZpcnR1YWxJbnB1dE1hbmFnZXInKTpTZW5kS2V5RXZlbnQodHJ1ZSwgIkMiLCBmYWxzZSwgZ2FtZSkKd2FpdCguMSkKZ2FtZTpzZXJ2aWNlKCdWaXJ0dWFsSW5wdXRNYW5hZ2VyJyk6U2VuZEtleUV2ZW50KGZhbHNlLCAiQyIsIGZhbHNlLCBnYW1lKQplbmQKZWxzZWlmIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZChnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuRGF0YS5EZXZpbEZydWl0LlZhbHVlKSB0aGVuCmdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZChnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuRGF0YS5EZXZpbEZydWl0LlZhbHVlKS5Nb3VzZVBvcy5WYWx1ZSA9IHYuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbgppZiBfRy5Ta2lsbFogYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgdi5IdW1hbm9pZC5IZWFsdGggPiAwIGFuZCBEZXZpbEZydWl0TWFzdGVyeSA+PSBNYXN0ZXJ5RGV2aWxGcnVpdC5MdmwuWiB0aGVuCmdhbWU6c2VydmljZSgnVmlydHVhbElucHV0TWFuYWdlcicpOlNlbmRLZXlFdmVudCh0cnVlLCAiWiIsIGZhbHNlLCBnYW1lKQp3YWl0KC4xKQpnYW1lOnNlcnZpY2UoJ1ZpcnR1YWxJbnB1dE1hbmFnZXInKTpTZW5kS2V5RXZlbnQoZmFsc2UsICJaIiwgZmFsc2UsIGdhbWUpCmVuZAppZiBfRy5Ta2lsbFggYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgdi5IdW1hbm9pZC5IZWFsdGggPiAwIGFuZCBEZXZpbEZydWl0TWFzdGVyeSA+PSBNYXN0ZXJ5RGV2aWxGcnVpdC5MdmwuWCB0aGVuCmdhbWU6c2VydmljZSgnVmlydHVhbElucHV0TWFuYWdlcicpOlNlbmRLZXlFdmVudCh0cnVlLCAiWCIsIGZhbHNlLCBnYW1lKQp3YWl0KC4xKQpnYW1lOnNlcnZpY2UoJ1ZpcnR1YWxJbnB1dE1hbmFnZXInKTpTZW5kS2V5RXZlbnQoZmFsc2UsICJYIiwgZmFsc2UsIGdhbWUpCmVuZAppZiBfRy5Ta2lsbEMgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgdi5IdW1hbm9pZC5IZWFsdGggPiAwIGFuZCBEZXZpbEZydWl0TWFzdGVyeSA+PSBNYXN0ZXJ5RGV2aWxGcnVpdC5MdmwuQyB0aGVuCmdhbWU6c2VydmljZSgnVmlydHVhbElucHV0TWFuYWdlcicpOlNlbmRLZXlFdmVudCh0cnVlLCAiQyIsIGZhbHNlLCBnYW1lKQp3YWl0KC4xKQpnYW1lOnNlcnZpY2UoJ1ZpcnR1YWxJbnB1dE1hbmFnZXInKTpTZW5kS2V5RXZlbnQoZmFsc2UsICJDIiwgZmFsc2UsIGdhbWUpCmVuZAppZiBfRy5Ta2lsbFYgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgdi5IdW1hbm9pZC5IZWFsdGggPiAwIGFuZCBEZXZpbEZydWl0TWFzdGVyeSA+PSBNYXN0ZXJ5RGV2aWxGcnVpdC5MdmwuViB0aGVuCmdhbWU6c2VydmljZSgnVmlydHVhbElucHV0TWFuYWdlcicpOlNlbmRLZXlFdmVudCh0cnVlLCAiViIsIGZhbHNlLCBnYW1lKQp3YWl0KC4xKQpnYW1lOnNlcnZpY2UoJ1ZpcnR1YWxJbnB1dE1hbmFnZXInKTpTZW5kS2V5RXZlbnQoZmFsc2UsICJWIiwgZmFsc2UsIGdhbWUpCmVuZAppZiBfRy5Ta2lsbEYgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgdi5IdW1hbm9pZC5IZWFsdGggPiAwIGFuZCBEZXZpbEZydWl0TWFzdGVyeSA+PSBNYXN0ZXJ5RGV2aWxGcnVpdC5MdmwuRiB0aGVuCmdhbWU6c2VydmljZSgnVmlydHVhbElucHV0TWFuYWdlcicpOlNlbmRLZXlFdmVudCh0cnVlLCAiRiIsIGZhbHNlLCBnYW1lKQp3YWl0KC4xKQpnYW1lOnNlcnZpY2UoJ1ZpcnR1YWxJbnB1dE1hbmFnZXInKTpTZW5kS2V5RXZlbnQoZmFsc2UsICJGIiwgZmFsc2UsIGdhbWUpCmVuZAplbmQKZWxzZQpfRy5Vc2VTa2lsbCA9IGZhbHNlClBvc01vbiA9IHYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUKdi5IdW1hbm9pZFJvb3RQYXJ0LlNpemUgPSBWZWN0b3IzLm5ldyg2MCw2MCw2MCkKdi5IdW1hbm9pZFJvb3RQYXJ0LkNhbkNvbGxpZGUgPSBmYWxzZQp2LkhlYWQuQ2FuQ29sbGlkZSA9IGZhbHNlCkJyaW5nTW9iID0gdHJ1ZQpGYXN0QXR0YWNrID0gdHJ1ZQpFcXVpcFdlYXBvbihfRy5TZWxlY3RXZWFwb24pCnYuSHVtYW5vaWRSb290UGFydC5UcmFuc3BhcmVuY3kgPSAxCnRvVGFyZ2V0KHYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgKiBNZXRob2RGYXJtKQppZiAodi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZS5Qb3NpdGlvbiAtIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKS5NYWduaXR1ZGUgPD0gNTAgdGhlbgpnYW1lOkdldFNlcnZpY2UoIlZpcnR1YWxVc2VyIik6Q2FwdHVyZUNvbnRyb2xsZXIoKQpnYW1lOkdldFNlcnZpY2UoIlZpcnR1YWxVc2VyIik6QnV0dG9uMURvd24oVmVjdG9yMi5uZXcoMTI4MCw2NzIpKQplbmQKZW5kCmVuZAp1bnRpbCBub3QgX0cuQXV0b0Zhcm1GcnVpdE1hc3Rlcnkgb3Igbm90IHYuUGFyZW50IG9yIHYuSHVtYW5vaWQuSGVhbHRoIDw9IDAgb3IgUXVlc3RDLlZpc2libGUgPT0gZmFsc2Ugb3Igbm90IHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKQplbmQKZW5kCmVuZAplbHNlCl9HLlVzZVNraWxsID0gZmFsc2UKaWYgX0cuQXV0b19DRnJhbWUgdGhlbgp0b1RhcmdldChRdWVzdENoZWNrKClbN11bU2V0Q0Zhcm1lXSAqIENGcmFtZS5uZXcoMCwzMCw1KSkKaWYgKFF1ZXN0Q2hlY2soKVs3XVtTZXRDRmFybWVdLlBvc2l0aW9uIC0gZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLk1hZ25pdHVkZSA8PSA1MCB0aGVuCmlmIFNldENGYXJtZSA9PSBuaWwgb3IgU2V0Q0Zhcm1lID09ICcnIHRoZW4KU2V0Q0Zhcm1lID0gMQpwcmludChTZXRDRmFybWUpCmVsc2VpZiBTZXRDRmFybWUgPj0gI1F1ZXN0Q2hlY2soKVs3XSB0aGVuClNldENGYXJtZSA9IDEKcHJpbnQoU2V0Q0Zhcm1lKQplbmQKU2V0Q0Zhcm1lID0gIFNldENGYXJtZSArIDEKcHJpbnQoU2V0Q0Zhcm1lKQp3YWl0KDAuNSkKZW5kCmVsc2UKaWYgQXR0YWNrUmFuZG9tVHlwZV9Nb25DRnJhbWUgPT0gMSB0aGVuCnRvVGFyZ2V0KFF1ZXN0Q2hlY2soKVs3XVsxXSAqIENGcmFtZS5uZXcoMCwzMCwyMCkpCmVsc2VpZiBBdHRhY2tSYW5kb21UeXBlX01vbkNGcmFtZSA9PSAyIHRoZW4KdG9UYXJnZXQoUXVlc3RDaGVjaygpWzddWzFdICogQ0ZyYW1lLm5ldygwLDMwLC0yMCkpCmVsc2VpZiBBdHRhY2tSYW5kb21UeXBlX01vbkNGcmFtZSA9PSAzIHRoZW4KdG9UYXJnZXQoUXVlc3RDaGVjaygpWzddWzFdICogQ0ZyYW1lLm5ldygyMCwzMCwwKSkKZWxzZWlmIEF0dGFja1JhbmRvbVR5cGVfTW9uQ0ZyYW1lID09IDQgdGhlbgp0b1RhcmdldChRdWVzdENoZWNrKClbN11bMV0gKiBDRnJhbWUubmV3KDAsMzAsLTIwKSkKZWxzZWlmIEF0dGFja1JhbmRvbVR5cGVfTW9uQ0ZyYW1lID09IDUgdGhlbgp0b1RhcmdldChRdWVzdENoZWNrKClbN11bMV0gKiBDRnJhbWUubmV3KC0yMCwzMCwwKSkKZWxzZQp0b1RhcmdldChRdWVzdENoZWNrKClbN11bMV0gKiBDRnJhbWUubmV3KDAsMzAsMjApKQplbmQKZW5kCmVuZAplbHNlCnRvVGFyZ2V0KFF1ZXN0Q2hlY2soKVsyXSkKaWYgKFF1ZXN0Q2hlY2soKVsyXS5Qb3NpdGlvbiAtIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKS5NYWduaXR1ZGUgPD0gMSB0aGVuCkJyaW5nTW9iID0gZmFsc2UKd2FpdCgwLjIpCmdhbWU6R2V0U2VydmljZSgnUmVwbGljYXRlZFN0b3JhZ2UnKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIlN0YXJ0UXVlc3QiLCBRdWVzdENoZWNrKClbNF0sIFF1ZXN0Q2hlY2soKVsxXSkgd2FpdCgwLjUpCnRvVGFyZ2V0KFF1ZXN0Q2hlY2soKVs3XVsxXSAqIENGcmFtZS5uZXcoMCwzMCw1KSkKZW5kCmVuZAplbmQKZW5kKQplbmQKZW5kKQplbmQpCnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgdGFzay53YWl0KCkgZG8KcGNhbGwoZnVuY3Rpb24oKQppZiBfRy5BdXRvRmFybUZydWl0TWFzdGVyeSB0aGVuCmxvY2FsIE9uID0gewpbMV0gPSBGcnVpdFBvcy5Qb3NpdGlvbgp9CmdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcltnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5EYXRhLkRldmlsRnJ1aXQuVmFsdWVdLlJlbW90ZXBhZ2UxNDpGaXJlU2VydmVyKHVucGFjayhPbikpCmVsc2UKbG9jYWwgT2ZmID0gewpbMV0gPSBuaWwKfQpnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXJbZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuRGF0YS5EZXZpbEZydWl0LlZhbHVlXS5SZW1vdGVwYWdlMTQ6RmlyZVNlcnZlcih1bnBhY2soT2ZmKSkKZW5kCmVuZCkKZW5kCmVuZCkKcGFnZTY6U2xpZGVyKCJLaWxsIEF0ICglKVxu4LiG4LmI4Liy4LmA4Lih4Li34LmI4LitICglKSIsMSwxMDAsMjUsZnVuY3Rpb24odmFsdWUpCl9HLkhlYWx0aE1zID0gdmFsdWUKZW5kKQpwYWdlNjpTZXBlcmF0b3IoIlNraWxsXG7guKPguLLguKLguIHguLLguKPguKrguIHguLTguKUiKQpwYWdlNjpUb2dnbGUoIlNraWxsIFpcbuC4quC4geC4tOC4pSBaIiwgX0cuU2tpbGxaLCBmdW5jdGlvbih2YWx1ZSkKX0cuU2tpbGxaID0gdmFsdWUKZW5kKQpwYWdlNjpUb2dnbGUoIlNraWxsIFhcbuC4quC4geC4tOC4pSBYIiwgX0cuU2tpbGxYLCBmdW5jdGlvbih2YWx1ZSkKX0cuU2tpbGxYID0gdmFsdWUKZW5kKQpwYWdlNjpUb2dnbGUoIlNraWxsIENcbuC4quC4geC4tOC4pSBDIiwgX0cuU2tpbGxDLCBmdW5jdGlvbih2YWx1ZSkKX0cuU2tpbGxDID0gdmFsdWUKZW5kKQpwYWdlNjpUb2dnbGUoIlNraWxsIFZcbuC4quC4geC4tOC4pSBWIiwgX0cuU2tpbGxWLCBmdW5jdGlvbih2YWx1ZSkKX0cuU2tpbGxWID0gdmFsdWUKZW5kKQpwYWdlNjpUb2dnbGUoIlNraWxsIEZcbuC4quC4geC4tOC4pSBGIiwgX0cuU2tpbGxGLCBmdW5jdGlvbih2YWx1ZSkKX0cuU2tpbGxGID0gdmFsdWUKZW5kKQppZiBfRy5BdXRvRmFybUd1bk1hc3Rlcnkgb3IgX0cuQXV0b0Zhcm1GcnVpdE1hc3RlcnkgdGhlbgpfRy5GYXN0VHlwZSA9ICJTbG93IgplbHNlCl9HLkZhc3RUeXBlID0gIkZhc3QiCmVuZApwYWdlNzpTZXBlcmF0b3IoIvCfjYgiKQpwYWdlNzpUb2dnbGUoIkF1dG8gQnJpbmdGcnVpdFxu4LiU4Li24LiH4Lic4Lil4LmE4Lih4LmJ4Lib4Li14Lio4Liy4LiIIixfRy5BdXRvX0JyaW5nX0ZydWl0ICwgZnVuY3Rpb24odmFsdWUpCl9HLkF1dG9fQnJpbmdfRnJ1aXQgID0gdmFsdWUKZW5kKQpwYWdlNzpUb2dnbGUoIkF1dG8gUmFuZG9tRnJ1aXRzXG7guKrguLjguYjguKHguJzguKXguYTguKHguYnguJvguLXguKjguLLguIgiLCBfRy5BdXRvQnV5UmFuZG9tRnJ1aXRzLCBmdW5jdGlvbih2YWx1ZSkKX0cuQXV0b0J1eVJhbmRvbUZydWl0cyA9IHZhbHVlCmVuZCkKc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB0YXNrLndhaXQoKSBkbwppZiBfRy5BdXRvQnV5UmFuZG9tRnJ1aXRzIHRoZW4KZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQ291c2luIiwgIkJ1eSIpCmVuZAplbmQKZW5kKQpwYWdlNzpUb2dnbGUoIkF1dG8gU3RvcmVGcnVpdHNcbuC5gOC4geC5h+C4muC4nOC4peC5hOC4oeC5ieC4m+C4teC4qOC4suC4iOC5gOC4guC5ieC4suC4geC4o+C4sOC5gOC4m+C5i+C4siIsIF9HLkF1dG9TdG9yZUZydWl0cywgZnVuY3Rpb24odmFsdWUpCl9HLkF1dG9TdG9yZUZydWl0cyA9IHZhbHVlCmVuZCkKc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB3YWl0KCkgZG8KaWYgX0cuQXV0b19CcmluZ19GcnVpdCB0aGVuCnBjYWxsKGZ1bmN0aW9uKCkKZm9yIGksdiBpbiBwYWlycyhnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpOkdldENoaWxkcmVuKCkpIGRvCmlmIHY6SXNBKCJUb29sIikgYW5kIHN0cmluZy5maW5kKHYuTmFtZSwiRnJ1aXQiKSB0aGVuCmdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgPSB2LkhhbmRsZS5DRnJhbWUKZW5kCmVuZAplbmQpCmVuZAplbmQKZW5kKQpzcGF3bihmdW5jdGlvbigpCndoaWxlIHRhc2sud2FpdCgpIGRvCmlmIF9HLkF1dG9TdG9yZUZydWl0cyB0aGVuCnBjYWxsKGZ1bmN0aW9uKCkKdGFzay53YWl0KCkKaWYgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJCb21iIEZydWl0Iikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIkJvbWIgRnJ1aXQiKSB0aGVuCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIlN0b3JlRnJ1aXQiLCAiQm9tYi1Cb21iIiwKZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJCb21iIEZydWl0Iikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIkJvbWIgRnJ1aXQiKSkKZW5kCmlmIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiU3Bpa2UgRnJ1aXQiKSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiU3Bpa2UgRnJ1aXQiKSB0aGVuCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIlN0b3JlRnJ1aXQiLCAiU3Bpa2UtU3Bpa2UiLApnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIlNwaWtlIEZydWl0Iikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIlNwaWtlIEZydWl0IikpCmVuZAppZiBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkNob3AgRnJ1aXQiKSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiQ2hvcCBGcnVpdCIpIHRoZW4KZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiU3RvcmVGcnVpdCIsICJDaG9wLUNob3AiLApnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkNob3AgRnJ1aXQiKSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiQ2hvcCBGcnVpdCIpKQplbmQKaWYgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJTcHJpbmcgRnJ1aXQiKSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiU3ByaW5nIEZydWl0IikgdGhlbgpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJTdG9yZUZydWl0IiwgIlNwcmluZy1TcHJpbmciLApnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIlNwcmluZyBGcnVpdCIpIG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJTcHJpbmcgRnJ1aXQiKSkKZW5kCmlmIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiS2lsbyBGcnVpdCIpIG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJLaWxvIEZydWl0IikgdGhlbgpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJTdG9yZUZydWl0IiwgIktpbG8tS2lsbyIsCmdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiS2lsbyBGcnVpdCIpIG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJLaWxvIEZydWl0IikpCmVuZAppZiBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIlNtb2tlIEZydWl0Iikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIlNtb2tlIEZydWl0IikgdGhlbgpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJTdG9yZUZydWl0IiwgIlNtb2tlLVNtb2tlIiwKZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJTbW9rZSBGcnVpdCIpIG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJTbW9rZSBGcnVpdCIpKQplbmQKaWYgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJTcGluIEZydWl0Iikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIlNwaW4gRnJ1aXQiKSB0aGVuCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIlN0b3JlRnJ1aXQiLCAiU3Bpbi1TcGluIiwKZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJTcGluIEZydWl0Iikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIlNwaW4gRnJ1aXQiKSkKZW5kCmlmIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiRmxhbWUgRnJ1aXQiKSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiRmxhbWUgRnJ1aXQiKSB0aGVuCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIlN0b3JlRnJ1aXQiLCAiRmxhbWUtRmxhbWUiLApnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkZsYW1lIEZydWl0Iikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIkZsYW1lIEZydWl0IikpCmVuZAppZiBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkJpcmQ6IEZhbGNvbiBGcnVpdCIpIG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJCaXJkOiBGYWxjb24gRnJ1aXQiKSB0aGVuCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIlN0b3JlRnJ1aXQiLCAiQmlyZC1CaXJkOiBGYWxjb24iLApnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkJpcmQ6IEZhbGNvbiBGcnVpdCIpIG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJCaXJkOiBGYWxjb24gRnJ1aXQiKSkKZW5kCmlmIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiSWNlIEZydWl0Iikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIkljZSBGcnVpdCIpIHRoZW4KZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiU3RvcmVGcnVpdCIsICJJY2UtSWNlIiwKZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJJY2UgRnJ1aXQiKSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiSWNlIEZydWl0IikpCmVuZAppZiBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIlNhbmQgRnJ1aXQiKSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiU2FuZCBGcnVpdCIpIHRoZW4KZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiU3RvcmVGcnVpdCIsICJTYW5kLVNhbmQiLApnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIlNhbmQgRnJ1aXQiKSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiU2FuZCBGcnVpdCIpKQplbmQKaWYgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJEYXJrIEZydWl0Iikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIkRhcmsgRnJ1aXQiKSB0aGVuCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIlN0b3JlRnJ1aXQiLCAiRGFyay1EYXJrIiwKZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJEYXJrIEZydWl0Iikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIkRhcmsgRnJ1aXQiKSkKZW5kCmlmIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiUmV2aXZlIEZydWl0Iikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIlJldml2ZSBGcnVpdCIpIHRoZW4KZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiU3RvcmVGcnVpdCIsICJSZXZpdmUtUmV2aXZlIiwKZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJSZXZpdmUgRnJ1aXQiKSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiUmV2aXZlIEZydWl0IikpCmVuZAppZiBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkRpYW1vbmQgRnJ1aXQiKSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiRGlhbW9uZCBGcnVpdCIpIHRoZW4KZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiU3RvcmVGcnVpdCIsICJEaWFtb25kLURpYW1vbmQiLApnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkRpYW1vbmQgRnJ1aXQiKSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiRGlhbW9uZCBGcnVpdCIpKQplbmQKaWYgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJMaWdodCBGcnVpdCIpIG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJMaWdodCBGcnVpdCIpIHRoZW4KZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiU3RvcmVGcnVpdCIsICJMaWdodC1MaWdodCIsCmdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiTGlnaHQgRnJ1aXQiKSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiTGlnaHQgRnJ1aXQiKSkKZW5kCmlmIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiTG92ZSBGcnVpdCIpIG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJMb3ZlIEZydWl0IikgdGhlbgpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJTdG9yZUZydWl0IiwgIkxvdmUtTG92ZSIsCmdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiTG92ZSBGcnVpdCIpIG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJMb3ZlIEZydWl0IikpCmVuZAppZiBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIlJ1YmJlciBGcnVpdCIpIG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJSdWJiZXIgRnJ1aXQiKSB0aGVuCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIlN0b3JlRnJ1aXQiLCAiUnViYmVyLVJ1YmJlciIsCmdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiUnViYmVyIEZydWl0Iikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIlJ1YmJlciBGcnVpdCIpKQplbmQKaWYgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJCYXJyaWVyIEZydWl0Iikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIkJhcnJpZXIgRnJ1aXQiKSB0aGVuCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIlN0b3JlRnJ1aXQiLCAiQmFycmllci1CYXJyaWVyIiwKZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJCYXJyaWVyIEZydWl0Iikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIkJhcnJpZXIgRnJ1aXQiKSkKZW5kCmlmIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiTWFnbWEgRnJ1aXQiKSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiTWFnbWEgRnJ1aXQiKSB0aGVuCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIlN0b3JlRnJ1aXQiLCAiTWFnbWEtTWFnbWEiLApnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIk1hZ21hIEZydWl0Iikgb3IKZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIk1hZ21hIEZydWl0IikpCmVuZAppZiBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkRvb3IgRnJ1aXQiKSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiRG9vciBGcnVpdCIpIHRoZW4KZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiU3RvcmVGcnVpdCIsICJEb29yLURvb3IiLApnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkRvb3IgRnJ1aXQiKSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiRG9vciBGcnVpdCIpKQplbmQKaWYgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJRdWFrZSBGcnVpdCIpIG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJRdWFrZSBGcnVpdCIpIHRoZW4KZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiU3RvcmVGcnVpdCIsICJRdWFrZS1RdWFrZSIsCmdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiUXVha2UgRnJ1aXQiKSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiUXVha2UgRnJ1aXQiKSkKZW5kCmlmIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiSHVtYW4tSHVtYW46IEJ1ZGRoYSBGcnVpdCIpIG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJIdW1hbi1IdW1hbjogQnVkZGhhIEZydWl0IikgdGhlbgpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJTdG9yZUZydWl0IiwgIkh1bWFuLUh1bWFuOiBCdWRkaGEiLApnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkh1bWFuLUh1bWFuOiBCdWRkaGEgRnJ1aXQiKSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiSHVtYW4tSHVtYW46IEJ1ZGRoYSBGcnVpdCIpKQplbmQKaWYgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJTdHJpbmcgRnJ1aXQiKSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiU3RyaW5nIEZydWl0IikgdGhlbgpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJTdG9yZUZydWl0IiwgIlN0cmluZy1TdHJpbmciLApnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIlN0cmluZyBGcnVpdCIpIG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJTdHJpbmcgRnJ1aXQiKSkKZW5kCmlmIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiQmlyZDogUGhvZW5peCBGcnVpdCIpIG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJCaXJkOiBQaG9lbml4IEZydWl0IikgdGhlbgpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJTdG9yZUZydWl0IiwgIkJpcmQtQmlyZDogUGhvZW5peCIsCmdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiQmlyZDogUGhvZW5peCBGcnVpdCIpIG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJCaXJkOiBQaG9lbml4IEZydWl0IikpCmVuZAppZiBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIlJ1bWJsZSBGcnVpdCIpIG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJSdW1ibGUgRnJ1aXQiKSB0aGVuCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIlN0b3JlRnJ1aXQiLCAiUnVtYmxlLVJ1bWJsZSIsCmdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiUnVtYmxlIEZydWl0Iikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIlJ1bWJsZSBGcnVpdCIpKQplbmQKaWYgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJQYXcgRnJ1aXQiKSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiUGF3IEZydWl0IikgdGhlbgpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJTdG9yZUZydWl0IiwgIlBhdy1QYXciLApnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIlBhdyBGcnVpdCIpIG9yCmdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJQYXcgRnJ1aXQiKSkKZW5kCmlmIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiR3Jhdml0eSBGcnVpdCIpIG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJHcmF2aXR5IEZydWl0IikgdGhlbgpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJTdG9yZUZydWl0IiwgIkdyYXZpdHktR3Jhdml0eSIsCmdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiR3Jhdml0eSBGcnVpdCIpIG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJHcmF2aXR5IEZydWl0IikpCmVuZAppZiBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkRvdWdoIEZydWl0Iikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIkRvdWdoIEZydWl0IikgdGhlbgpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJTdG9yZUZydWl0IiwgIkRvdWdoLURvdWdoIiwKZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJEb3VnaCBGcnVpdCIpIG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJEb3VnaCBGcnVpdCIpKQplbmQKaWYgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJTaGFkb3cgRnJ1aXQiKSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiU2hhZG93IEZydWl0IikgdGhlbgpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJTdG9yZUZydWl0IiwgIlNoYWRvdy1TaGFkb3ciLApnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIlNoYWRvdyBGcnVpdCIpIG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJTaGFkb3cgRnJ1aXQiKSkKZW5kCmlmIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiVmVub20gRnJ1aXQiKSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiVmVub20gRnJ1aXQiKSB0aGVuCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIlN0b3JlRnJ1aXQiLCAiVmVub20tVmVub20iLApnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIlZlbm9tIEZydWl0Iikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIlZlbm9tIEZydWl0IikpCmVuZAppZiBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkNvbnRyb2wgRnJ1aXQiKSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiQ29udHJvbCBGcnVpdCIpIHRoZW4KZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiU3RvcmVGcnVpdCIsICJDb250cm9sLUNvbnRyb2wiLApnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkNvbnRyb2wgRnJ1aXQiKSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiQ29udHJvbCBGcnVpdCIpKQplbmQKaWYgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJEcmFnb24gRnJ1aXQiKSBvciBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5CYWNrcGFjazpGaW5kRmlyc3RDaGlsZCgiRHJhZ29uIEZydWl0IikgdGhlbgpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJTdG9yZUZydWl0IiwgIkRyYWdvbi1EcmFnb24iLApnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkRyYWdvbiBGcnVpdCIpIG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJEcmFnb24gRnJ1aXQiKSkKZW5kCmlmIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiTGVvcGFyZCBGcnVpdCIpIG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJMZW9wYXJkIEZydWl0IikgdGhlbgpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJTdG9yZUZydWl0IiwgIkxlb3BhcmQtTGVvcGFyZCIsCmdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiTGVvcGFyZCBGcnVpdCIpIG9yIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJMZW9wYXJkIEZydWl0IikpCmVuZAplbmQpCmVuZAplbmQKZW5kKQpsb2NhbCBSZW1vdGVfR2V0RnJ1aXRzID0gZ2FtZS5SZXBsaWNhdGVkU3RvcmFnZTpGaW5kRmlyc3RDaGlsZCgiUmVtb3RlcyIpLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkdldEZydWl0cyIpOwpUYWJsZV9EZXZpbEZydWl0U25pcGVyID0ge30KU2hvcERldmlsU2VsbCA9IHt9CmZvciBpLHYgaW4gbmV4dCxSZW1vdGVfR2V0RnJ1aXRzIGRvCnRhYmxlLmluc2VydChUYWJsZV9EZXZpbEZydWl0U25pcGVyLHYuTmFtZSkKaWYgdi5PblNhbGUgdGhlbgp0YWJsZS5pbnNlcnQoU2hvcERldmlsU2VsbCx2Lk5hbWUpCmVuZAplbmQKcGFnZTc6RHJvcGRvd24oIlNlbGVjdCBEZXZpbEZydWl0c1xu4LmA4Lil4Li34Lit4LiB4Lic4Lil4LmE4Lih4LmJ4Lib4Li14Lio4Liy4LiIIixUYWJsZV9EZXZpbEZydWl0U25pcGVyLGZ1bmN0aW9uKHZhbHVlKQpfRy5TZWxlY3RfRGV2aWxfRnJ1aXQgPSB2YWx1ZQplbmQpCnBhZ2U3OlRvZ2dsZSgiQXV0byBCdXkgRGV2aWxGcnVpdHMgU2VsZWN0ZWRcbuC4reC4reC5guC4leC5ieC4i+C4t+C5ieC4reC4nOC4peC5hOC4oeC5ieC4m+C4teC4qOC4suC4iOC4l+C4teC5iOC5gOC4peC4t+C4reC4gSIsX0cuQXV0b19CdXlfRGV2aWxfRnJ1aXQsZnVuY3Rpb24odmFsdWUpCl9HLkF1dG9fQnV5X0RldmlsX0ZydWl0ID0gdmFsdWUKZW5kKQpzcGF3bihmdW5jdGlvbigpCndoaWxlIHdhaXQoKSBkbwppZiBfRy5BdXRvX0J1eV9EZXZpbF9GcnVpdCB0aGVuCnBjYWxsKGZ1bmN0aW9uKCkKbG9jYWwgc3RyaW5nXzEgPSAiUHVyY2hhc2VSYXdGcnVpdCI7CmxvY2FsIHN0cmluZ18yID0gX0cuU2VsZWN0X0RldmlsX0ZydWl0Owpsb2NhbCBUYXJnZXQgPSBnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlc1siQ29tbUZfIl07ClRhcmdldDpJbnZva2VTZXJ2ZXIoc3RyaW5nXzEsIHN0cmluZ18yKTsKZW5kKQplbmQKZW5kCmVuZCkKcGFnZTg6U2VwZXJhdG9yKCLwn5uh77iPIikKbG9jYWwgUmFpZHNsaXN0ID0geyJGbGFtZSIsIkljZSIsIlF1YWtlIiwiTGlnaHQiLCJEYXJrIiwiU3RyaW5nIiwiUnVtYmxlIiwiTWFnbWEiLCJIdW1hbjogQnVkZGhhIiwiU2FuZCIsIkJpcmQ6IFBob2VuaXgiLCJEb3VnaCJ9CnBhZ2U4OkRyb3Bkb3duKCJTZWxlY3QgUmFpZHNcbuC5gOC4peC4t+C4reC4geC4lOC4seC4meC5gOC4iOC4teC5ieC4ouC4mSIsIFJhaWRzbGlzdCwgZnVuY3Rpb24odmFsdWUpCl9HLlNlbGVjdFJhaWRzID0gdmFsdWUKZW5kKQpwYWdlODpUb2dnbGUoIkF1dG8gUmFpZHNcbuC4peC4h+C4lOC4seC4meC5gOC4iOC4teC5ieC4ouC4mSIsIF9HLkF1dG9SYWlkcywgZnVuY3Rpb24odmFsdWUpCl9HLkF1dG9SYWlkcyA9IHZhbHVlCmlmIHZhbHVlID09IGZhbHNlIHRoZW4KdGFzay53YWl0KCkKdG9UYXJnZXQoZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lKQp0YXNrLndhaXQoKQplbmQKZW5kKQpwYWdlODpUb2dnbGUoIktpbGxBdXJhKG5vIHJlY29tbWVuZClcbuC4reC4reC4o+C5iOC4suC4huC5iOC4suC4oeC4reC4meC4o+C4reC4muC4leC4seC4pyjguYTguKHguYjguYHguJnguLDguJnguLMpIiwgX0cuS2lsbEF1cmEsIGZ1bmN0aW9uKHZhbHVlKQpfRy5LaWxsQXVyYSA9IHZhbHVlCmVuZCkKcGFnZTg6VG9nZ2xlKCJBdXRvIE5leHRJc2xhbmRcbuC4reC4reC5guC4leC5ieC5hOC4m+C5gOC4geC4suC4sOC4luC4seC4lOC5hOC4myIsIF9HLkF1dG9OZXh0UGxhY2UsIGZ1bmN0aW9uKHZhbHVlKQpfRy5BdXRvTmV4dFBsYWNlID0gdmFsdWUKaWYgdmFsdWUgPT0gZmFsc2UgdGhlbgp0b1RhcmdldChnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUpCmVuZAplbmQpCnBhZ2U4OlRvZ2dsZSgiQnV5IEF3YWtlbmVkU2tpbGxcbuC4i+C4t+C5ieC4reC4quC4geC4tOC4peC4leC4t+C5iOC4mSIsIF9HLkF1dG9Bd2FrZW5lZCwgZnVuY3Rpb24odmFsdWUpCl9HLkF1dG9Bd2FrZW5lZCA9IHZhbHVlCmVuZCkKdGFzay5zcGF3bihmdW5jdGlvbigpCndoaWxlIHRhc2sud2FpdCgpIGRvCmlmIF9HLkF1dG9SYWlkcyB0aGVuCnBjYWxsKGZ1bmN0aW9uKCkKaWYgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkJhY2twYWNrOkZpbmRGaXJzdENoaWxkKCJTcGVjaWFsIE1pY3JvY2hpcCIpIG9yCmdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIlNwZWNpYWwgTWljcm9jaGlwIikgb3IKZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKVsiX1dvcmxkT3JpZ2luIl0uTG9jYXRpb25zOkZpbmRGaXJzdENoaWxkKCJJc2xhbmQgNSIpIG9yCmdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIilbIl9Xb3JsZE9yaWdpbiJdLkxvY2F0aW9uczpGaW5kRmlyc3RDaGlsZCgiSXNsYW5kIDQiKSBvcgpnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpWyJfV29ybGRPcmlnaW4iXS5Mb2NhdGlvbnM6RmluZEZpcnN0Q2hpbGQoIklzbGFuZCAzIikgb3IKZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKVsiX1dvcmxkT3JpZ2luIl0uTG9jYXRpb25zOkZpbmRGaXJzdENoaWxkKCJJc2xhbmQgMiIpIG9yCmdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIilbIl9Xb3JsZE9yaWdpbiJdLkxvY2F0aW9uczpGaW5kRmlyc3RDaGlsZCgiSXNsYW5kIDEiKSB0aGVuCmlmIChnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQmFja3BhY2s6RmluZEZpcnN0Q2hpbGQoIlNwZWNpYWwgTWljcm9jaGlwIikgb3IKZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiU3BlY2lhbCBNaWNyb2NoaXAiKSkgYW5kCmdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLlBsYXllckd1aS5NYWluLlRvcEhVRExpc3QuUmFpZFRpbWVyLlZpc2libGUgPT0gZmFsc2UgdGhlbgppZiBXb3JsZDMgdGhlbgppZiBub3Qgd29ya3NwYWNlLk1hcFsiQm9hdCBDYXN0bGUiXS5SYWlkU3VtbW9uMi5CdXR0b24uTWFpbi5DbGlja0RldGVjdG9yIHRoZW4KdG9UYXJnZXQoQ0ZyYW1lLm5ldygtNTA1OC4wNzcxNSwgMzE0LjQ5NDM1NCwgLTI5NTYuMjY3NTgsIDAuOTU0NDM3MDc3LCAxLjM1NzQwMjc1ZS0wOSwgMC4yOTg0MTIzMjMsIC0yLjU1MjA0OTllLTA5LCAxLCAzLjYxMzY4NTM1ZS0wOSwgLTAuMjk4NDEyMzIzLCAtNC4yMTA1OTg1NGUtMDksIDAuOTU0NDM3MDc3KSkKZWxzZQpmaXJlY2xpY2tkZXRlY3Rvcih3b3Jrc3BhY2UuTWFwWyJCb2F0IENhc3RsZSJdLlJhaWRTdW1tb24yLkJ1dHRvbi5NYWluLkNsaWNrRGV0ZWN0b3IpCmVuZAplbmQKdGFzay53YWl0KDApCmVsc2VpZiBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5QbGF5ZXJHdWkuTWFpbi5Ub3BIVURMaXN0LlJhaWRUaW1lci5WaXNpYmxlID09IHRydWUgdGhlbgpwY2FsbChmdW5jdGlvbigpCnJlcGVhdAp0YXNrLndhaXQoKQpsb2NhbCBjaGFyYWN0ZXIgPSBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyCmlmIG5vdCBjaGFyYWN0ZXIgb3Igbm90IGNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBvciBub3QgY2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikgdGhlbgpyZXBlYXQKdGFzay53YWl0KCkKY2hhcmFjdGVyID0gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlcgp1bnRpbCBjaGFyYWN0ZXIgYW5kIGNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgY2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikKZW5kCmxvY2FsIHRhcmdldElzbGFuZCA9IG5pbApsb2NhbCBpc2xhbmRDRnJhbWUgPSBuaWwKbG9jYWwgaXNsYW5kTmFtZSA9IG5pbApmb3IgaSA9IDUsIDEsIC0xIGRvCmxvY2FsIGlzbGFuZCA9IGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIilbIl9Xb3JsZE9yaWdpbiJdLkxvY2F0aW9uczpGaW5kRmlyc3RDaGlsZCgiSXNsYW5kICIgLi4gaSkKaWYgaXNsYW5kIHRoZW4KdGFyZ2V0SXNsYW5kID0gaXNsYW5kCmlzbGFuZE5hbWUgPSAiSXNsYW5kICIgLi4gaQppc2xhbmRDRnJhbWUgPSBDRnJhbWUubmV3KGlzbGFuZC5DRnJhbWUuWCwgNjAsIGlzbGFuZC5DRnJhbWUuWikKYnJlYWsKZW5kCmVuZAppZiB0YXJnZXRJc2xhbmQgdGhlbgpsb2NhbCBkaXN0YW5jZSA9ICh0YXJnZXRJc2xhbmQuUG9zaXRpb24gLSBjaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikuTWFnbml0dWRlCmlmIGRpc3RhbmNlID4gMzUwIHRoZW4KRmFybXR3ZWVuID0gdG9UYXJnZXQoaXNsYW5kQ0ZyYW1lKQplbHNlaWYgZGlzdGFuY2UgPD0gMTAgdGhlbgppZiBGYXJtdHdlZW4gdGhlbgpGYXJtdHdlZW46U3RvcCgpCmVuZAplbmQKZW5kCmZvciBpLCB2IGluIHBhaXJzKGdhbWUuV29ya3NwYWNlLkVuZW1pZXM6R2V0Q2hpbGRyZW4oKSkgZG8KaWYgX0cuQXV0b1JhaWRzIGFuZCBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5QbGF5ZXJHdWkuTWFpbi5Ub3BIVURMaXN0LlJhaWRUaW1lci5WaXNpYmxlID09IHRydWUgYW5kCnY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkIikgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKSBhbmQKKHYuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbiAtIGNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKS5NYWduaXR1ZGUgPD0gNDAwIHRoZW4KcmVwZWF0CnRhc2sud2FpdCguMSkKdG9UYXJnZXQodi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSAqIE1ldGhvZEZhcm0pCkVxdWlwV2VhcG9uKF9HLlNlbGVjdFdlYXBvbikKQnJpbmdNb2IgPSB0cnVlCnVudGlsIHYuSHVtYW5vaWQuSGVhbHRoIDw9IDEgb3Igbm90IHYuUGFyZW50IG9yIG5vdCBfRy5BdXRvUmFpZHMKdjpEZXN0cm95KCkKZW5kCmVuZAppZiBfRy5BdXRvQXdha2VuZWQgdGhlbgpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJBd2FrZW5lciIsICJBd2FrZW4iKQplbmQKdW50aWwgbm90IGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIilbIl9Xb3JsZE9yaWdpbiJdLkxvY2F0aW9uczpGaW5kRmlyc3RDaGlsZCgiSXNsYW5kIDUiKSBhbmQKbm90IGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIilbIl9Xb3JsZE9yaWdpbiJdLkxvY2F0aW9uczpGaW5kRmlyc3RDaGlsZCgiSXNsYW5kIDQiKSBhbmQKbm90IGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIilbIl9Xb3JsZE9yaWdpbiJdLkxvY2F0aW9uczpGaW5kRmlyc3RDaGlsZCgiSXNsYW5kIDMiKSBhbmQKbm90IGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIilbIl9Xb3JsZE9yaWdpbiJdLkxvY2F0aW9uczpGaW5kRmlyc3RDaGlsZCgiSXNsYW5kIDIiKSBhbmQKbm90IGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIilbIl9Xb3JsZE9yaWdpbiJdLkxvY2F0aW9uczpGaW5kRmlyc3RDaGlsZCgiSXNsYW5kIDEiKSBvcgpnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5QbGF5ZXJHdWkuTWFpbi5Ub3BIVURMaXN0LlJhaWRUaW1lci5WaXNpYmxlID09IGZhbHNlCmlmIF9HLkF1dG9Bd2FrZW5lZCB0aGVuCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkF3YWtlbmVyIiwgIkF3YWtlbiIpCmVuZAplbmQpCmVuZAplbHNlCmlmIF9HLkF1dG9Bd2FrZW5lZCB0aGVuCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkF3YWtlbmVyIiwgIkF3YWtlbiIpCmVuZApnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJSYWlkc05wYyIsIlNlbGVjdCIsX0cuU2VsZWN0UmFpZHMpCmVuZAplbmQpCmVuZAplbmQKZW5kKQpzcGF3bihmdW5jdGlvbigpCndoaWxlIHRhc2sud2FpdCgwKSBkbwppZiBfRy5LaWxsQXVyYSB0aGVuCmZvciBpLHYgaW4gcGFpcnMoZ2FtZS5Xb3Jrc3BhY2UuRW5lbWllczpHZXRDaGlsZHJlbigpKSBkbwppZiAgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpICB0aGVuCnBjYWxsKGZ1bmN0aW9uKCkKcmVwZWF0IHRhc2sud2FpdCguMSkKc2V0aGlkZGVucHJvcGVydHkoZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLCAiU2ltdWxhdGlvblJhZGl1cyIsIG1hdGguaHVnZSkKdi5IdW1hbm9pZC5IZWFsdGggPSAwCnVudGlsIG5vdCBfRy5LaWxsQXVyYSBvciB2Lkh1bWFub2lkLkhlYWx0aCA8PSAwIG9yIG5vdCB2LlBhcmVudAplbmQpCmVuZAplbmQKZW5kCmVuZAplbmQpCnNwYXduKGZ1bmN0aW9uKCkKcGNhbGwoZnVuY3Rpb24oKQp3aGlsZSB0YXNrLndhaXQoKSBkbwppZiBfRy5BdXRvTmV4dFBsYWNlIHRoZW4KaWYgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIilbIkxvY2FsUGxheWVyIl0uUGxheWVyR3VpLk1haW4uVGltZXIuVmlzaWJsZSA9PSB0cnVlIGFuZCBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpWyJfV29ybGRPcmlnaW4iXS5Mb2NhdGlvbnM6RmluZEZpcnN0Q2hpbGQoIklzbGFuZCA1Iikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKVsiX1dvcmxkT3JpZ2luIl0uTG9jYXRpb25zOkZpbmRGaXJzdENoaWxkKCJJc2xhbmQgNCIpIG9yIGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIilbIl9Xb3JsZE9yaWdpbiJdLkxvY2F0aW9uczpGaW5kRmlyc3RDaGlsZCgiSXNsYW5kIDMiKSBvciBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpWyJfV29ybGRPcmlnaW4iXS5Mb2NhdGlvbnM6RmluZEZpcnN0Q2hpbGQoIklzbGFuZCAyIikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKVsiX1dvcmxkT3JpZ2luIl0uTG9jYXRpb25zOkZpbmRGaXJzdENoaWxkKCJJc2xhbmQgMSIpIHRoZW4KaWYgZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKVsiX1dvcmxkT3JpZ2luIl0uTG9jYXRpb25zOkZpbmRGaXJzdENoaWxkKCJJc2xhbmQgNSIpIHRoZW4KdG9UYXJnZXQoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKVsiX1dvcmxkT3JpZ2luIl0uTG9jYXRpb25zWyJJc2xhbmQgNSJdLkNGcmFtZSAqIENGcmFtZS5uZXcoNCwgNjUsIDEwKSkKZWxzZWlmIGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIilbIl9Xb3JsZE9yaWdpbiJdLkxvY2F0aW9uczpGaW5kRmlyc3RDaGlsZCgiSXNsYW5kIDQiKSB0aGVuCnRvVGFyZ2V0KGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIilbIl9Xb3JsZE9yaWdpbiJdLkxvY2F0aW9uc1siSXNsYW5kIDQiXS5DRnJhbWUgKiAgQ0ZyYW1lLm5ldyg0LCA2NSwgMTApKQplbHNlaWYgZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKVsiX1dvcmxkT3JpZ2luIl0uTG9jYXRpb25zOkZpbmRGaXJzdENoaWxkKCJJc2xhbmQgMyIpIHRoZW4KdG9UYXJnZXQoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKVsiX1dvcmxkT3JpZ2luIl0uTG9jYXRpb25zWyJJc2xhbmQgMyJdLkNGcmFtZSAqIENGcmFtZS5uZXcoNCwgNjUsIDEwKSkKZWxzZWlmIGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIilbIl9Xb3JsZE9yaWdpbiJdLkxvY2F0aW9uczpGaW5kRmlyc3RDaGlsZCgiSXNsYW5kIDIiKSB0aGVuCnRvVGFyZ2V0KGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIilbIl9Xb3JsZE9yaWdpbiJdLkxvY2F0aW9uc1siSXNsYW5kIDIiXS5DRnJhbWUgKiBDRnJhbWUubmV3KDQsIDY1LCAxMCkpCmVsc2VpZiBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpWyJfV29ybGRPcmlnaW4iXS5Mb2NhdGlvbnM6RmluZEZpcnN0Q2hpbGQoIklzbGFuZCAxIikgdGhlbgp0b1RhcmdldChnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpWyJfV29ybGRPcmlnaW4iXS5Mb2NhdGlvbnNbIklzbGFuZCAxIl0uQ0ZyYW1lICogQ0ZyYW1lLm5ldyg0LCA2NSwgMTApKQplbmQKZWxzZWlmIFdvcmxkMiB0aGVuCnRvVGFyZ2V0KENGcmFtZS5uZXcoLTY0MzguNzM1MzUsIDI1MC42NDUzNTUsIC00NTAxLjUwNjg0KSkKZWxzZWlmIFdvcmxkMyB0aGVuCnRvVGFyZ2V0KENGcmFtZS5uZXcoLTUwNTcuMTQ2NDg0Mzc1LCAzMTQuNTQxMzIwODAwNzgsIC0yOTM0Ljc5OTU2MDU0NjkpKQplbmQKZW5kCmVuZAplbmQpCmVuZCkKbG9jYWwgcGxyID0gZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXI7CmxvY2FsIGdldHBsYXllcnMgPSB7fQpsb2NhbCBnZXRpdGVtcyA9IHt9CmxvY2FsIGdldHdlYiA9IHt9CnBhZ2UxMzpTZXBlcmF0b3IoIuKalO+4jyIpCmRvCmZvciBpLCB2IGluIHBhaXJzKGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuQ2hhcmFjdGVyczpHZXRDaGlsZHJlbigpKSBkbwppZiB2Lk5hbWUgfj0gcGxyLk5hbWUgdGhlbgp0YWJsZS5pbnNlcnQoZ2V0cGxheWVycywgdi5OYW1lKQplbmQKZW5kCmZvciBpLCB2IGluIHBhaXJzKHBsci5CYWNrcGFjazpHZXRDaGlsZHJlbigpKSBkbwppZiB2OklzQSgiVG9vbCIpIHRoZW4KdGFibGUuaW5zZXJ0KGdldHdlYiwgdi5OYW1lKQplbmQKZW5kCmVuZApsb2NhbCBQbGF5ZXJEcm9wID0gcGFnZTEzOkRyb3Bkb3duKCJTZWxlY3QgUGxheWVyc1xu4LmA4Lil4Li34Lit4LiB4LmA4Lie4Lil4Lii4LmM4LmA4Lii4Lit4Lij4LmMIixnZXRwbGF5ZXJzLCBmdW5jdGlvbih2YWx1ZSkKU2VsZWN0UGxheWVyID0gdmFsdWUKZW5kKQpwYWdlMTM6QnV0dG9uKCJSZWZyZXNoXG7guKPguLXguYDguJ/guIrguKMiLCBmdW5jdGlvbigpClBsYXllckRyb3A6Q2xlYXIoKQpmb3IgaSwgdiBpbiBuZXh0LCBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLkNoYXJhY3RlcnM6R2V0Q2hpbGRyZW4oKSBkbwppZiB2Lk5hbWUgfj0gcGxyLk5hbWUgdGhlbgppZiB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikgdGhlbgpQbGF5ZXJEcm9wOkFkZCh2Lk5hbWUpCmVuZAplbmQKZW5kCmVuZCkKcGFnZTEzOlRvZ2dsZSgiVGVsZXBvcnQgVG8gUGxheWVyc1xu4LmA4LiX4LmA4Lil4Lie4Lit4Lij4LmM4LiV4LmE4Lib4Lir4Liy4LmA4Lie4Lil4Lii4LmM4LmA4Lii4Lit4Lij4LmMIiwgdGVsZXBvcnR0b3AsIGZ1bmN0aW9uKHZhbHVlKQp0ZWxlcG9ydHRvcCA9IHZhbHVlCmlmIHZhbHVlID09IGZhbHNlIHRoZW4KdGFzay53YWl0KCkKdG9UYXJnZXQoZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lKQp0YXNrLndhaXQoKQplbmQKZW5kKQpwYWdlMTM6VG9nZ2xlKCJTcGVjdGF0ZSBQbGF5ZXJcbuC5geC4reC4muC4lOC4ueC5gOC4nuC4peC4ouC5jOC5gOC4ouC4reC4o+C5jCIsIFNwZWN0YXRlUGx5cywgZnVuY3Rpb24odmFsdWUpClNwZWN0YXRlUGx5cyA9IHZhbHVlCmxvY2FsIHBscjEgPSBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWQKbG9jYWwgcGxyMiA9IGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpOkZpbmRGaXJzdENoaWxkKFNlbGVjdFBsYXllcikKcmVwZWF0CndhaXQoLjEpCmdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuQ2FtZXJhLkNhbWVyYVN1YmplY3QgPSBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKTpGaW5kRmlyc3RDaGlsZChTZWxlY3RQbGF5ZXIpCi5DaGFyYWN0ZXIuSHVtYW5vaWQKdW50aWwgU3BlY3RhdGVQbHlzID09IGZhbHNlCmdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuQ2FtZXJhLkNhbWVyYVN1YmplY3QgPSBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWQKZW5kKQpzcGF3bihmdW5jdGlvbigpCndoaWxlIHRhc2sud2FpdCgpIGRvCmlmIHRlbGVwb3J0dG9wIHRoZW4KcGNhbGwoZnVuY3Rpb24oKQppZiBnYW1lLlBsYXllcnM6RmluZEZpcnN0Q2hpbGQoU2VsZWN0UGxheWVyKSB0aGVuCnRvVGFyZ2V0KGdhbWUuUGxheWVyc1tTZWxlY3RQbGF5ZXJdLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSkKZW5kCmVuZCkKZW5kCmVuZAplbmQpCnBhZ2UxMzpUb2dnbGUoIkFpbWJvdCBHdW5cbuC4reC4tOC4oeC4muC4reC4l+C4m+C4t+C4mSIsIGZhbHNlLCBmdW5jdGlvbih2YWx1ZSkKQWltYm90R3VuID0gdmFsdWUKZW5kKQpwYWdlMTM6VG9nZ2xlKCJBaW1ib3QgU2tpbGxcbuC4reC4tOC4oeC4muC4reC4l+C4quC4geC4tOC4pSIsIGZhbHNlLCBmdW5jdGlvbih2YWx1ZSkKU2tpbGxhaW1ib3QgPSB2YWx1ZQplbmQpCmxvY2FsIGdnID0gZ2V0cmF3bWV0YXRhYmxlKGdhbWUpCmxvY2FsIG9sZCA9IGdnLl9fbmFtZWNhbGwKc2V0cmVhZG9ubHkoZ2csIGZhbHNlKQpnZy5fX25hbWVjYWxsID0gbmV3Y2Nsb3N1cmUoZnVuY3Rpb24oLi4uKQpsb2NhbCBtZXRob2QgPSBnZXRuYW1lY2FsbG1ldGhvZCgpCmxvY2FsIGFyZ3MgPSB7IC4uLiB9CmlmIHRvc3RyaW5nKG1ldGhvZCkgPT0gIkZpcmVTZXJ2ZXIiIHRoZW4KaWYgdG9zdHJpbmcoYXJnc1sxXSkgPT0gIlJlbW90ZUV2ZW50IiB0aGVuCmlmIHRvc3RyaW5nKGFyZ3NbMl0pIH49ICJ0cnVlIiBhbmQgdG9zdHJpbmcoYXJnc1syXSkgfj0gImZhbHNlIiB0aGVuCmlmIFNraWxsYWltYm90IHRoZW4KYXJnc1syXSA9IEFpbUJvdFNraWxsUG9zaXRpb24KcmV0dXJuIG9sZCh1bnBhY2soYXJncykpCmVuZAplbmQKZW5kCmVuZApyZXR1cm4gb2xkKC4uLikKZW5kKQpzcGF3bihmdW5jdGlvbigpCndoaWxlIHRhc2sud2FpdCgpIGRvCmZvciBpLCB2IGluIHBhaXJzKGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5CYWNrcGFjazpHZXRDaGlsZHJlbigpKSBkbwppZiB2OklzQSgiVG9vbCIpIHRoZW4KaWYgdjpGaW5kRmlyc3RDaGlsZCgiUmVtb3RlRnVuY3Rpb25TaG9vdCIpIHRoZW4KU2VsZWN0VG9vbFdlYXBvbkd1biA9IHYuTmFtZQplbmQKZW5kCmVuZApmb3IgaSwgdiBpbiBwYWlycyhnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkdldENoaWxkcmVuKCkpIGRvCmlmIHY6SXNBKCJUb29sIikgdGhlbgppZiB2OkZpbmRGaXJzdENoaWxkKCJSZW1vdGVGdW5jdGlvblNob290IikgdGhlbgpTZWxlY3RUb29sV2VhcG9uR3VuID0gdi5OYW1lCmVuZAplbmQKZW5kCmVuZAplbmQpCnRhc2suc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB0YXNrLndhaXQoKSBkbwppZiBTa2lsbGFpbWJvdCBhbmQgU2VsZWN0UGxheWVyIHRoZW4KaWYgZ2FtZS5QbGF5ZXJzOkZpbmRGaXJzdENoaWxkKFNlbGVjdFBsYXllcikgYW5kIGdhbWUuUGxheWVyczpGaW5kRmlyc3RDaGlsZChTZWxlY3RQbGF5ZXIpLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpIGFuZCBnYW1lLlBsYXllcnM6RmluZEZpcnN0Q2hpbGQoU2VsZWN0UGxheWVyKS5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkIikgYW5kIGdhbWUuUGxheWVyczpGaW5kRmlyc3RDaGlsZChTZWxlY3RQbGF5ZXIpLkNoYXJhY3Rlci5IdW1hbm9pZC5IZWFsdGggPiAwIHRoZW4KQWltQm90U2tpbGxQb3NpdGlvbiA9IGdhbWUuUGxheWVyczpGaW5kRmlyc3RDaGlsZChTZWxlY3RQbGF5ZXIpLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpLlBvc2l0aW9uCmVuZAplbmQKZW5kCmVuZCkKdGFzay5zcGF3bihmdW5jdGlvbigpCndoaWxlIHRhc2sud2FpdCgpIGRvCmlmIFNraWxsYWltYm90IGFuZCBBbGxQbGF5ZXJzVGFibGVTa2lwRmFybSAgdGhlbgppZiBnYW1lLlBsYXllcnM6RmluZEZpcnN0Q2hpbGQoQWxsUGxheWVyc1RhYmxlU2tpcEZhcm0pIGFuZCBnYW1lLlBsYXllcnM6RmluZEZpcnN0Q2hpbGQoQWxsUGxheWVyc1RhYmxlU2tpcEZhcm0pLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpIGFuZCBnYW1lLlBsYXllcnM6RmluZEZpcnN0Q2hpbGQoQWxsUGxheWVyc1RhYmxlU2tpcEZhcm0pLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgZ2FtZS5QbGF5ZXJzOkZpbmRGaXJzdENoaWxkKEFsbFBsYXllcnNUYWJsZVNraXBGYXJtKS5DaGFyYWN0ZXIuSHVtYW5vaWQuSGVhbHRoID4gMCB0aGVuCkFpbUJvdFNraWxsUG9zaXRpb24gPSBnYW1lLlBsYXllcnM6RmluZEZpcnN0Q2hpbGQoQWxsUGxheWVyc1RhYmxlU2tpcEZhcm0pLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpLlBvc2l0aW9uCmVuZAplbmQKZW5kCmVuZCkKbG9jYWwgbHAgPSBnYW1lOkdldFNlcnZpY2UoJ1BsYXllcnMnKS5Mb2NhbFBsYXllcgpsb2NhbCBtb3VzZSA9IGxwOkdldE1vdXNlKCkKbW91c2UuQnV0dG9uMURvd246Q29ubmVjdChmdW5jdGlvbigpCmlmIEFpbWJvdEd1biB0aGVuCmxvY2FsIGFyZ3MgPSB7ClsxXSA9IGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpOkZpbmRGaXJzdENoaWxkKFNlbGVjdFBsYXllcikuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24sClsyXSA9IHtbMV0gPSBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKTpGaW5kRmlyc3RDaGlsZChTZWxlY3RQbGF5ZXIpLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0fQp9CmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKTpXYWl0Rm9yQ2hpbGQoIk1vZHVsZXMiKTpXYWl0Rm9yQ2hpbGQoIk5ldCIpOldhaXRGb3JDaGlsZCgiUkUvU2hvb3RHdW5FdmVudCIpOkZpcmVTZXJ2ZXIodW5wYWNrKGFyZ3MpKQplbmQKZW5kKQpsb2NhbCBFU1BPYmplY3RzID0ge30KbG9jYWwgTnVtYmVyID0gbWF0aC5yYW5kb20oMSwgMTAwMDAwMCkKbG9jYWwgZnVuY3Rpb24gaXNuaWwodGhpbmcpCnJldHVybiB0aGluZyA9PSBuaWwKZW5kCmxvY2FsIGZ1bmN0aW9uIHJvdW5kKG4pCnJldHVybiBtYXRoLmZsb29yKHRvbnVtYmVyKG4pICsgMC41KQplbmQKbG9jYWwgZnVuY3Rpb24gQ3JlYXRlRVNQKHRhcmdldCwgYWRvcm5lZSwgbmFtZSwgY29sb3IsIGRpc3RhbmNlRnVuYywgZXh0cmFUZXh0RnVuYykKaWYgRVNQT2JqZWN0c1t0YXJnZXRdIHRoZW4gcmV0dXJuIGVuZApsb2NhbCBiaWxsID0gSW5zdGFuY2UubmV3KCJCaWxsYm9hcmRHdWkiKQpiaWxsLk5hbWUgPSAiTmFtZUVzcCIgLi4gTnVtYmVyCmJpbGwuRXh0ZW50c09mZnNldCA9IFZlY3RvcjMubmV3KDAsIDEsIDApCmJpbGwuU2l6ZSA9IFVEaW0yLm5ldygxLCAyMDAsIDEsIDMwKQpiaWxsLkFkb3JuZWUgPSBhZG9ybmVlCmJpbGwuQWx3YXlzT25Ub3AgPSB0cnVlCmJpbGwuRW5hYmxlZCA9IGZhbHNlCmxvY2FsIG5hbWVMYWJlbCA9IEluc3RhbmNlLm5ldygiVGV4dExhYmVsIiwgYmlsbCkKbmFtZUxhYmVsLkZvbnQgPSAiQ29kZSIKbmFtZUxhYmVsLkZvbnRTaXplID0gIlNpemUxNCIKbmFtZUxhYmVsLlRleHRXcmFwcGVkID0gdHJ1ZQpuYW1lTGFiZWwuU2l6ZSA9IFVEaW0yLm5ldygxLCAwLCAxLCAwKQpuYW1lTGFiZWwuVGV4dFlBbGlnbm1lbnQgPSAiVG9wIgpuYW1lTGFiZWwuQmFja2dyb3VuZFRyYW5zcGFyZW5jeSA9IDEKbmFtZUxhYmVsLlRleHRTdHJva2VUcmFuc3BhcmVuY3kgPSAwLjUKbmFtZUxhYmVsLlRleHRDb2xvcjMgPSBjb2xvcgpFU1BPYmplY3RzW3RhcmdldF0gPSB7CkJpbGxib2FyZCA9IGJpbGwsCkxhYmVsID0gbmFtZUxhYmVsLApEaXN0YW5jZUZ1bmMgPSBkaXN0YW5jZUZ1bmMsCkV4dHJhVGV4dEZ1bmMgPSBleHRyYVRleHRGdW5jLApUYXJnZXQgPSB0YXJnZXQKfQpiaWxsLlBhcmVudCA9IGFkb3JuZWUKZW5kCmxvY2FsIGZ1bmN0aW9uIFJlbW92ZUVTUCh0YXJnZXQpCmlmIEVTUE9iamVjdHNbdGFyZ2V0XSB0aGVuCmlmIEVTUE9iamVjdHNbdGFyZ2V0XS5CaWxsYm9hcmQgdGhlbgpFU1BPYmplY3RzW3RhcmdldF0uQmlsbGJvYXJkOkRlc3Ryb3koKQplbmQKRVNQT2JqZWN0c1t0YXJnZXRdID0gbmlsCmVuZAplbmQKbG9jYWwgZnVuY3Rpb24gVXBkYXRlQWxsRVNQKCkKZm9yIHRhcmdldCwgZXNwIGluIHBhaXJzKEVTUE9iamVjdHMpIGRvCmlmIG5vdCB0YXJnZXQgb3Igbm90IHRhcmdldC5QYXJlbnQgdGhlbgpSZW1vdmVFU1AodGFyZ2V0KQplbHNlCmlmIG5vdCBlc3AuQmlsbGJvYXJkLkFkb3JuZWUgdGhlbgpSZW1vdmVFU1AodGFyZ2V0KQplbmQKbG9jYWwgZW5hYmxlZCA9IGZhbHNlCmxvY2FsIGxhYmVsVGV4dCA9ICIiCmlmIHRhcmdldDpJc0EoIlBsYXllciIpIGFuZCBFU1BQbGF5ZXIgdGhlbgplbmFibGVkID0gdHJ1ZQpsb2NhbCBkaXN0YW5jZSA9ICJOL0EiCmxvY2FsIGhlYWx0aFBlcmNlbnQgPSAiTi9BIgpwY2FsbChmdW5jdGlvbigpCmRpc3RhbmNlID0gZXNwLkRpc3RhbmNlRnVuYygpCmlmIHRhcmdldC5DaGFyYWN0ZXIgYW5kIHRhcmdldC5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkIikgdGhlbgpsb2NhbCBodW1hbm9pZCA9IHRhcmdldC5DaGFyYWN0ZXIuSHVtYW5vaWQKaGVhbHRoUGVyY2VudCA9IHJvdW5kKGh1bWFub2lkLkhlYWx0aCAqIDEwMCAvIGh1bWFub2lkLk1heEhlYWx0aCkKZW5kCmVuZCkKbGFiZWxUZXh0ID0gdGFyZ2V0Lk5hbWUgLi4gIiB8ICIgLi4gZGlzdGFuY2UgLi4gIiBNXG5IZWFsdGg6ICIgLi4gaGVhbHRoUGVyY2VudCAuLiAiJSIKZWxzZWlmIHRhcmdldC5QYXJlbnQgPT0gV29ya3NwYWNlLkNoZXN0TW9kZWxzIGFuZCBDaGVzdEVTUCB0aGVuCmVuYWJsZWQgPSB0cnVlCmxvY2FsIGRpc3RhbmNlID0gIk4vQSIKcGNhbGwoZnVuY3Rpb24oKQpkaXN0YW5jZSA9IGVzcC5EaXN0YW5jZUZ1bmMoKQplbmQpCmxhYmVsVGV4dCA9IHRhcmdldC5OYW1lIC4uICJcbiIgLi4gZGlzdGFuY2UgLi4gIiBNIgplc3AuTGFiZWwuRm9udCA9ICJBcmlhbCIKZXNwLkxhYmVsLkZvbnRTaXplID0gIlNpemUxOCIKZXNwLkxhYmVsLlRleHRTY2FsZWQgPSB0cnVlCmVsc2VpZiBzdHJpbmcuZmluZCh0YXJnZXQuTmFtZSwgIkZydWl0IikgYW5kIERldmlsRnJ1aXRFU1AgdGhlbgplbmFibGVkID0gdHJ1ZQpsb2NhbCBkaXN0YW5jZSA9ICJOL0EiCnBjYWxsKGZ1bmN0aW9uKCkKZGlzdGFuY2UgPSBlc3AuRGlzdGFuY2VGdW5jKCkKZW5kKQpsYWJlbFRleHQgPSB0YXJnZXQuTmFtZSAuLiAiXG4iIC4uIGRpc3RhbmNlIC4uICIgTSIKZWxzZWlmICh0YXJnZXQuTmFtZSA9PSAiRmxvd2VyMSIgb3IgdGFyZ2V0Lk5hbWUgPT0gIkZsb3dlcjIiKSBhbmQgRmxvd2VyRVNQIHRoZW4KZW5hYmxlZCA9IHRydWUKbG9jYWwgZGlzdGFuY2UgPSAiTi9BIgpwY2FsbChmdW5jdGlvbigpCmRpc3RhbmNlID0gZXNwLkRpc3RhbmNlRnVuYygpCmVuZCkKbGFiZWxUZXh0ID0gKHRhcmdldC5OYW1lID09ICJGbG93ZXIxIiBhbmQgIkJsdWUgRmxvd2VyIiBvciAiUmVkIEZsb3dlciIpIC4uICJcbiIgLi4gZGlzdGFuY2UgLi4gIiBNIgplbHNlaWYgdGFyZ2V0LlBhcmVudCA9PSBXb3Jrc3BhY2VbIl9Xb3JsZE9yaWdpbiJdLkxvY2F0aW9ucyBhbmQgSXNsYW5kRVNQIHRoZW4KZW5hYmxlZCA9IHRydWUKbG9jYWwgZGlzdGFuY2UgPSAiTi9BIgpwY2FsbChmdW5jdGlvbigpCmRpc3RhbmNlID0gZXNwLkRpc3RhbmNlRnVuYygpCmVuZCkKbGFiZWxUZXh0ID0gdGFyZ2V0Lk5hbWUgLi4gIlxuIiAuLiBkaXN0YW5jZSAuLiAiIE0iCmVsc2VpZiB0YXJnZXQuUGFyZW50ID09IFdvcmtzcGFjZS5TZWFCZWFzdHMgYW5kIFNlYUJlYXN0c0VTUCB0aGVuCmVuYWJsZWQgPSB0cnVlCmxvY2FsIGRpc3RhbmNlID0gIk4vQSIKcGNhbGwoZnVuY3Rpb24oKQpkaXN0YW5jZSA9IGVzcC5EaXN0YW5jZUZ1bmMoKQplbmQpCmxhYmVsVGV4dCA9IHRhcmdldC5OYW1lIC4uICJcbiIgLi4gZGlzdGFuY2UgLi4gIiBNIgplbmQKZXNwLkJpbGxib2FyZC5FbmFibGVkID0gZW5hYmxlZAppZiBlbmFibGVkIHRoZW4KZXNwLkxhYmVsLlRleHQgPSBsYWJlbFRleHQKZW5kCmVuZAplbmQKZW5kCmxvY2FsIGZ1bmN0aW9uIFNjYW5UYXJnZXRzKCkKZm9yIGksIHYgaW4gcGFpcnMoZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIik6R2V0Q2hpbGRyZW4oKSkgZG8KaWYgdiB+PSBMb2NhbFBsYXllciBhbmQgdi5DaGFyYWN0ZXIgYW5kIHYuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJIZWFkIikgdGhlbgppZiBub3QgRVNQT2JqZWN0c1t2XSB0aGVuCmxvY2FsIFBsYXllcnBhcnQgPSB2LkNoYXJhY3Rlci5IZWFkCmxvY2FsIGNvbG9yID0gQ29sb3IzLm5ldygwLCAwLCAyNTUpCmlmIHYuVGVhbSBhbmQgTG9jYWxQbGF5ZXIuVGVhbSB0aGVuCmNvbG9yID0gKHYuVGVhbSA9PSBMb2NhbFBsYXllci5UZWFtKSBhbmQgQ29sb3IzLm5ldygyNTUsIDAsIDApIG9yIENvbG9yMy5uZXcoMCwgMCwgMjU1KQplbmQKQ3JlYXRlRVNQKHYsIFBsYXllcnBhcnQsIHYuTmFtZSwgY29sb3IsIGZ1bmN0aW9uKCkKaWYgTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyIGFuZCBMb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkhlYWQiKSBhbmQgdi5DaGFyYWN0ZXIgYW5kIHYuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJIZWFkIikgdGhlbgpyZXR1cm4gcm91bmQoKExvY2FsUGxheWVyLkNoYXJhY3Rlci5IZWFkLlBvc2l0aW9uIC0gdi5DaGFyYWN0ZXIuSGVhZC5Qb3NpdGlvbikuTWFnbml0dWRlIC8gMykKZWxzZQpyZXR1cm4gIk4vQSIKZW5kCmVuZCwgbmlsKQplbmQKZWxzZQppZiBFU1BPYmplY3RzW3ZdIHRoZW4KUmVtb3ZlRVNQKHYpCmVuZAplbmQKZW5kCmxvY2FsIGNoZXN0Rm9sZGVyID0gV29ya3NwYWNlOkZpbmRGaXJzdENoaWxkKCJDaGVzdE1vZGVscyIpCmlmIGNoZXN0Rm9sZGVyIHRoZW4KZm9yIF8sIGNoZXN0IGluIHBhaXJzKGNoZXN0Rm9sZGVyOkdldENoaWxkcmVuKCkpIGRvCmxvY2FsIGNoZXN0UGFydCA9IGNoZXN0LlByaW1hcnlQYXJ0IG9yIGNoZXN0OkZpbmRGaXJzdENoaWxkKCJCYXNlIikgb3IgY2hlc3Q6RmluZEZpcnN0Q2hpbGQoIlJvb3QiKSBvciBjaGVzdDpGaW5kRmlyc3RDaGlsZFdoaWNoSXNBKCJCYXNlUGFydCIpCmlmIGNoZXN0UGFydCBhbmQgbm90IEVTUE9iamVjdHNbY2hlc3RdIHRoZW4KQ3JlYXRlRVNQKGNoZXN0LCBjaGVzdFBhcnQsIGNoZXN0Lk5hbWUsIENvbG9yMy5mcm9tUkdCKDE4NiwgMTg2LCAyOCksIGZ1bmN0aW9uKCkKaWYgTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyIGFuZCBMb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkhlYWQiKSB0aGVuCnJldHVybiByb3VuZCgoTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkhlYWQuUG9zaXRpb24gLSBjaGVzdFBhcnQuUG9zaXRpb24pLk1hZ25pdHVkZSAvIDMpCmVsc2UKcmV0dXJuICJOL0EiCmVuZAplbmQsIG5pbCkKZW5kCmVuZAplbmQKZm9yIF8sIGZydWl0IGluIHBhaXJzKFdvcmtzcGFjZTpHZXRDaGlsZHJlbigpKSBkbwppZiBzdHJpbmcuZmluZChmcnVpdC5OYW1lLCAiRnJ1aXQiKSBhbmQgZnJ1aXQ6RmluZEZpcnN0Q2hpbGQoIkhhbmRsZSIpIGFuZCBub3QgRVNQT2JqZWN0c1tmcnVpdF0gdGhlbgpDcmVhdGVFU1AoZnJ1aXQsIGZydWl0LkhhbmRsZSwgZnJ1aXQuTmFtZSwgQ29sb3IzLmZyb21SR0IoMjU1LCAyNTUsIDI1NSksIGZ1bmN0aW9uKCkKaWYgTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyIGFuZCBMb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkhlYWQiKSB0aGVuCnJldHVybiByb3VuZCgoTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkhlYWQuUG9zaXRpb24gLSBmcnVpdC5IYW5kbGUuUG9zaXRpb24pLk1hZ25pdHVkZSAvIDMpCmVsc2UKcmV0dXJuICJOL0EiCmVuZAplbmQsIG5pbCkKZW5kCmVuZApmb3IgXywgZmxvd2VyIGluIHBhaXJzKFdvcmtzcGFjZTpHZXRDaGlsZHJlbigpKSBkbwppZiAoZmxvd2VyLk5hbWUgPT0gIkZsb3dlcjEiIG9yIGZsb3dlci5OYW1lID09ICJGbG93ZXIyIikgYW5kIG5vdCBFU1BPYmplY3RzW2Zsb3dlcl0gdGhlbgpsb2NhbCBjb2xvciA9IGZsb3dlci5OYW1lID09ICJGbG93ZXIxIiBhbmQgQ29sb3IzLmZyb21SR0IoMCwgMCwgMjU1KSBvciBDb2xvcjMuZnJvbVJHQigyNTUsIDAsIDApCkNyZWF0ZUVTUChmbG93ZXIsIGZsb3dlciwgZmxvd2VyLk5hbWUgPT0gIkZsb3dlcjEiIGFuZCAiQmx1ZSBGbG93ZXIiIG9yICJSZWQgRmxvd2VyIiwgY29sb3IsIGZ1bmN0aW9uKCkKaWYgTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyIGFuZCBMb2NhbFBsYXllci5DaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkhlYWQiKSB0aGVuCnJldHVybiByb3VuZCgoTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkhlYWQuUG9zaXRpb24gLSBmbG93ZXIuUG9zaXRpb24pLk1hZ25pdHVkZSAvIDMpCmVsc2UKcmV0dXJuICJOL0EiCmVuZAplbmQsIG5pbCkKZW5kCmVuZApmb3IgXywgaXNsYW5kIGluIHBhaXJzKFdvcmtzcGFjZVsiX1dvcmxkT3JpZ2luIl0uTG9jYXRpb25zOkdldENoaWxkcmVuKCkpIGRvCmlmIGlzbGFuZC5OYW1lIH49ICJTZWEiIGFuZCBub3QgRVNQT2JqZWN0c1tpc2xhbmRdIHRoZW4KQ3JlYXRlRVNQKGlzbGFuZCwgaXNsYW5kLCBpc2xhbmQuTmFtZSwgQ29sb3IzLmZyb21SR0IoNjcsIDE4NiwgMjgpLCBmdW5jdGlvbigpCmlmIExvY2FsUGxheWVyLkNoYXJhY3RlciBhbmQgTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJIZWFkIikgdGhlbgpyZXR1cm4gcm91bmQoKExvY2FsUGxheWVyLkNoYXJhY3Rlci5IZWFkLlBvc2l0aW9uIC0gaXNsYW5kLlBvc2l0aW9uKS5NYWduaXR1ZGUgLyAzKQplbHNlCnJldHVybiAiTi9BIgplbmQKZW5kLCBuaWwpCmVuZAplbmQKZm9yIF8sIHNlYUJlYXN0IGluIHBhaXJzKFdvcmtzcGFjZS5TZWFCZWFzdHM6R2V0Q2hpbGRyZW4oKSkgZG8KaWYgc2VhQmVhc3QuTmFtZSB+PSAiU2VhQmVhc3QxIiBhbmQgbm90IEVTUE9iamVjdHNbc2VhQmVhc3RdIHRoZW4KQ3JlYXRlRVNQKHNlYUJlYXN0LCBzZWFCZWFzdCwgc2VhQmVhc3QuTmFtZSwgQ29sb3IzLmZyb21SR0IoODAsIDI0NSwgMjQ1KSwgZnVuY3Rpb24oKQppZiBMb2NhbFBsYXllci5DaGFyYWN0ZXIgYW5kIExvY2FsUGxheWVyLkNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiSGVhZCIpIHRoZW4KcmV0dXJuIHJvdW5kKChMb2NhbFBsYXllci5DaGFyYWN0ZXIuSGVhZC5Qb3NpdGlvbiAtIHNlYUJlYXN0LlBvc2l0aW9uKS5NYWduaXR1ZGUgLyAzKQplbHNlCnJldHVybiAiTi9BIgplbmQKZW5kLCBuaWwpCmVuZAplbmQKZW5kCnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgdGFzay53YWl0KDAuMSkgZG8KaWYgRVNQUGxheWVyIG9yIENoZXN0RVNQIG9yIERldmlsRnJ1aXRFU1Agb3IgRmxvd2VyRVNQIG9yIElzbGFuZEVTUCBvciBTZWFCZWFzdHNFU1AgdGhlbgpTY2FuVGFyZ2V0cygpCmVuZAplbmQKZW5kKQpmb3IgXywgcGxheWVyIGluIHBhaXJzKGdhbWUuUGxheWVyczpHZXRQbGF5ZXJzKCkpIGRvCmlmIHBsYXllciB+PSBMb2NhbFBsYXllciB0aGVuCnBsYXllci5DaGFyYWN0ZXJBZGRlZDpDb25uZWN0KGZ1bmN0aW9uKGNoYXJhY3RlcikKaWYgRVNQUGxheWVyIHRoZW4KdGFzay53YWl0KDAuMSkKaWYgY2hhcmFjdGVyIGFuZCBjaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkhlYWQiKSB0aGVuClNjYW5UYXJnZXRzKCkKZW5kCmVuZAplbmQpCmVuZAplbmQKZ2FtZS5QbGF5ZXJzLlBsYXllckFkZGVkOkNvbm5lY3QoZnVuY3Rpb24ocGxheWVyKQppZiBwbGF5ZXIgfj0gTG9jYWxQbGF5ZXIgdGhlbgpwbGF5ZXIuQ2hhcmFjdGVyQWRkZWQ6Q29ubmVjdChmdW5jdGlvbihjaGFyYWN0ZXIpCmlmIEVTUFBsYXllciB0aGVuCnRhc2sud2FpdCgwLjEpCmlmIGNoYXJhY3RlciBhbmQgY2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJIZWFkIikgdGhlbgpTY2FuVGFyZ2V0cygpCmVuZAplbmQKZW5kKQplbmQKZW5kKQpsb2NhbCBsYXN0VXBkYXRlID0gMApSdW5TZXJ2aWNlLlJlbmRlclN0ZXBwZWQ6Q29ubmVjdChmdW5jdGlvbihkZWx0YVRpbWUpCmxhc3RVcGRhdGUgPSBsYXN0VXBkYXRlICsgZGVsdGFUaW1lCmlmIGxhc3RVcGRhdGUgPj0gMC4xIHRoZW4KVXBkYXRlQWxsRVNQKCkKbGFzdFVwZGF0ZSA9IDAKZW5kCmVuZCkKcGFnZTEzOlNlcGVyYXRvcigiRVNQXG7guKHguK3guIfguJfguLDguKXguLgiKQpwYWdlMTM6VG9nZ2xlKCJFU1AgUGxheWVyc1xu4Lih4Lit4LiH4LiX4Liw4Lil4Li44Lir4Liy4LmA4Lie4Lil4Lii4LmM4LmA4Lii4Lit4Lij4LmMIiwgX0cuRVNQUGxheWVyLCBmdW5jdGlvbih2YWx1ZSkKRVNQUGxheWVyID0gdmFsdWUKZW5kKQpwYWdlMTM6VG9nZ2xlKCJFU1AgQ2hlc3RcbuC4oeC4reC4h+C4l+C4sOC4peC4uOC4q+C4suC4geC4peC5iOC4reC4h+C4quC4oeC4muC4seC4leC4tCIsIF9HLkNoZXN0RXNwLCBmdW5jdGlvbih2YWx1ZSkKQ2hlc3RFU1AgPSB2YWx1ZQplbmQpCnBhZ2UxMzpUb2dnbGUoIkVTUCBEZXZpbCBGcnVpdFxu4Lih4Lit4LiH4LiX4Liw4Lil4Li44Lir4Liy4Lic4Lil4Lib4Li14Lio4Liy4LiIIiwgX0cuRGV2aWxGcnVpdEVTUCwgZnVuY3Rpb24odmFsdWUpCkRldmlsRnJ1aXRFU1AgPSB2YWx1ZQplbmQpCnBhZ2UxMzpUb2dnbGUoIkVTUCBSZWFsIEZydWl0XG7guKHguK3guIfguJfguLDguKXguLjguKvguLLguJzguKXguYTguKHguYnguIjguKPguLTguIfguYYiLCBfRy5EZXZpbEZydWl0UmVhbEVTUCwgZnVuY3Rpb24odmFsdWUpCkRldmlsRnJ1aXRSZWFsRVNQID0gdmFsdWUKZW5kKQpwYWdlMTM6VG9nZ2xlKCJFU1AgRmxvd2Vyc1xu4Lih4Lit4LiH4LiX4Liw4Lil4Li44Lir4Liy4LiU4Lit4LiB4LmE4Lih4LmJIiwgX0cuRmxvd2VyRVNQLCBmdW5jdGlvbih2YWx1ZSkKRmxvd2VyRVNQID0gdmFsdWUKZW5kKQpwYWdlMTM6VG9nZ2xlKCJFU1AgSXNsYW5kXG7guKHguK3guIfguJfguLDguKXguLjguKvguLLguYDguIHguLLguLAiLCBfRy5Jc2xhbmRFU1AsIGZ1bmN0aW9uKHZhbHVlKQpJc2xhbmRFU1AgPSB2YWx1ZQplbmQpCnBhZ2UxMzpUb2dnbGUoIkVTUCBTZWFCZWFzdHNcbuC4oeC4reC4h+C4l+C4sOC4peC4uOC4q+C4suC4quC4seC4leC4p+C5jOC4l+C4sOC5gOC4pSIsIF9HLlNlYUJlYXN0c0VTUCwgZnVuY3Rpb24odmFsdWUpClNlYUJlYXN0c0VTUCA9IHZhbHVlCmVuZCkKc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB0YXNrLndhaXQoKSBkbwpVcGRhdGVBbGxFU1AoKQplbmQKZW5kKQpwYWdlOTpTZXBlcmF0b3IoIvCfj53vuI8iKQpwYWdlOTpUb2dnbGUoIlRlbGVwb3J0IFRvIE1pcmFnZUlzbGFuZFxu4LmA4LiX4LmA4Lil4Lie4Lit4Lij4LmM4LiV4LmE4Lib4Lir4Liy4LmA4LiB4Liy4Liw4Lil4Lix4LiaIiwgIF9HLlNldHRpbmdzLkF1dG9NaXJhZ2VJc2xhbmQsIGZ1bmN0aW9uKHZhbHVlKQpfRy5NaXJhZ2UgPSB2YWx1ZQpfRy5TZXR0aW5ncy5NaXJhZ2UgPSB2YWx1ZQpTYXZlU2V0dGluZ3MoKQpfRy5BdXRvTWlyYWdlSXNsYW5kID0gdmFsdWUKaWYgdmFsdWUgPT0gZmFsc2UgdGhlbgp0b1RhcmdldChnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUpCmVuZAplbmQpCnBhZ2U5OlRvZ2dsZSgiQXV0byBNaXJhZ2VJc2xhbmQgW0hvcF1cbuC4reC4reC5guC4leC5ieC5gOC4l+C5gOC4peC4nuC4reC4o+C5jOC4leC5hOC4m+C4q+C4suC5gOC4geC4suC4sOC4peC4seC4miBb4Lii4LmJ4Liy4Lii4LmA4LiL4Li04LifXSIsIF9HLlNldHRpbmdzLk1pcmFnZUhvcCwgZnVuY3Rpb24odmFsdWUpCl9HLk1pcmFnZUhvcCA9IHZhbHVlCl9HLlNldHRpbmdzLk1pcmFnZUhvcCA9IHZhbHVlCl9HLkF1dG9NaXJhZ2VJc2xhbmRIb3AgPSB2YWx1ZQplbmQpCnNwYXduKGZ1bmN0aW9uKCkKcGNhbGwoZnVuY3Rpb24oKQp3aGlsZSB0YXNrLndhaXQoKSBkbwppZiBfRy5BdXRvTWlyYWdlSXNsYW5kIG9yIF9HLk1pcmFnZSB0aGVuCmlmIGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuTWFwOkZpbmRGaXJzdENoaWxkKCJNeXN0aWNJc2xhbmQiKSB0aGVuCnRvVGFyZ2V0KHdvcmtzcGFjZS5NYXAuTXlzdGljSXNsYW5kLlByaW1hcnlQYXJ0LkNGcmFtZSAqIENGcmFtZS5uZXcoMCwgMzAwLCAwKSkKZWxzZQpnYW1lOkdldFNlcnZpY2UoIlN0YXJ0ZXJHdWkiKTpTZXRDb3JlKCJTZW5kTm90aWZpY2F0aW9uIix7VGl0bGUgPSAiVmVjdG9ySHViIixUZXh0ID0gIuC5gOC4geC4suC4sOC4peC4seC4muC5hOC4oeC5iOC5gOC4geC4tOC4lCIsSWNvbiA9ICJyYnhhc3NldGlkOi8vMTYxMjkyMzUwNTQiLER1cmF0aW9uID0gMX0pCmVuZAplbmQKZW5kCmVuZCkKZW5kKQpzcGF3bihmdW5jdGlvbigpCndoaWxlIHRhc2sud2FpdCgpZG8KaWYgX0cuTWlyYWdlSG9wIGFuZCBub3QgZ2FtZS5Xb3Jrc3BhY2UuX1dvcmxkT3JpZ2luLkxvY2F0aW9uczpGaW5kRmlyc3RDaGlsZCgnTWlyYWdlIElzbGFuZCcpIHRoZW4KSG9wKCkKZ2FtZTpHZXRTZXJ2aWNlKCJTdGFydGVyR3VpIik6U2V0Q29yZSgiU2VuZE5vdGlmaWNhdGlvbiIse1RpdGxlID0gIlZlY3Rvckh1YiIsVGV4dCA9ICJNaXJhZ2VJc2xhbmQgTm90IFNwYXduXG7guYDguIHguLLguLDguKXguLHguJrguYTguKHguYjguYDguIHguLTguJQiLEljb24gPSAicmJ4YXNzZXRpZDovLzE2MTI5MjM1MDU0IixEdXJhdGlvbiA9IDF9KQpnYW1lOkdldFNlcnZpY2UoIlN0YXJ0ZXJHdWkiKTpTZXRDb3JlKCJTZW5kTm90aWZpY2F0aW9uIix7VGl0bGUgPSAiVmVjdG9ySHViIixUZXh0ID0gIkhvcFNlcnZlclxu4Lii4LmJ4Liy4Lii4LmA4LiL4Li04LifIixJY29uID0gInJieGFzc2V0aWQ6Ly8xNjEyOTIzNTA1NCIsRHVyYXRpb24gPSA1fSkKZWxzZWlmIF9HLk1pcmFnZUhvcCBhbmQgZ2FtZS5Xb3Jrc3BhY2UuX1dvcmxkT3JpZ2luLkxvY2F0aW9uczpGaW5kRmlyc3RDaGlsZCgnTWlyYWdlIElzbGFuZCcpIHRoZW4KdG9UYXJnZXQod29ya3NwYWNlLk1hcC5NeXN0aWNJc2xhbmQuUHJpbWFyeVBhcnQuQ0ZyYW1lICogQ0ZyYW1lLm5ldygwLCAzMDAsIDApKQplbmQKZW5kCmVuZCkKbG9jYWwgZnVuY3Rpb24gcm91bmQobikKcmV0dXJuIG1hdGguZmxvb3IodG9udW1iZXIobikgKyAwLjUpCmVuZApOdW1iZXIgPSBtYXRoLnJhbmRvbSgxLCAxMDAwMDAwKQpmdW5jdGlvbiBFU1BNaXJhZ2VJc2xhbmQoKQpwY2FsbChmdW5jdGlvbigpCmlmIF9HLkVTUE1pcmFnZUlzbGFuZCB0aGVuCmZvciBpLHYgaW4gcGFpcnMoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5NYXAuTXlzdGljSXNsYW5kOkdldENoaWxkcmVuKCkpIGRvCnBjYWxsKGZ1bmN0aW9uKCkKaWYgdi5OYW1lID09ICdDZW50ZXInIHRoZW4KaWYgbm90IHY6RmluZEZpcnN0Q2hpbGQoJ0VzcE1pcmFnZScpIHRoZW4KbG9jYWwgYmlsbCA9IEluc3RhbmNlLm5ldygnQmlsbGJvYXJkR3VpJyx2KQpiaWxsLk5hbWUgPSAnRXNwTWlyYWdlJwpiaWxsLkV4dGVudHNPZmZzZXQgPSBWZWN0b3IzLm5ldygwLCAxLCAwKQpiaWxsLlNpemUgPSBVRGltMi5uZXcoMSwyMDAsMSwzMCkKYmlsbC5BZG9ybmVlID0gdgpiaWxsLkFsd2F5c09uVG9wID0gdHJ1ZQpsb2NhbCBuYW1lID0gSW5zdGFuY2UubmV3KCdUZXh0TGFiZWwnLGJpbGwpCm5hbWUuRm9udCA9ICJHb3RoYW1Cb2xkIgpuYW1lLkZvbnRTaXplID0gIlNpemUxNCIKbmFtZS5UZXh0V3JhcHBlZCA9IHRydWUKbmFtZS5TaXplID0gVURpbTIubmV3KDEsMCwxLDApCm5hbWUuVGV4dFlBbGlnbm1lbnQgPSAnVG9wJwpuYW1lLkJhY2tncm91bmRUcmFuc3BhcmVuY3kgPSAxCm5hbWUuVGV4dFN0cm9rZVRyYW5zcGFyZW5jeSA9IDAuNQpuYW1lLlRleHRDb2xvcjMgPSBDb2xvcjMuZnJvbVJHQigyNTUsIDI1NSwgMjU1KQpuYW1lLlRleHQgPSAoIk1pcmFnZSBJc2xhbmQiIC4uJyBcbicuLiIgWyAiLi5yb3VuZCgoZ2FtZTpHZXRTZXJ2aWNlKCdQbGF5ZXJzJykuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkhlYWQuUG9zaXRpb24gLSB2LlBvc2l0aW9uKS5NYWduaXR1ZGUvMykgLi4nIE0nLi4iIF0gIikKZWxzZQp2LkVzcE1pcmFnZS5UZXh0TGFiZWwuVGV4dCA9ICgiTWlyYWdlIElzbGFuZCIgLi4nIFxuJy4uIiBbICIuLnJvdW5kKChnYW1lOkdldFNlcnZpY2UoJ1BsYXllcnMnKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSGVhZC5Qb3NpdGlvbiAtIHYuUG9zaXRpb24pLk1hZ25pdHVkZS8zKSAuLicgTScuLiIgXSAiKQp2LkVzcE1pcmFnZS5UZXh0TGFiZWwuVGV4dENvbG9yMyA9IENvbG9yMy5mcm9tUkdCKDI1NSwgMjU1LCAyNTUpCmVuZAplbmQKZW5kKQplbmQKZWxzZQpmb3IgaSx2IGluIHBhaXJzKGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuTWFwLk15c3RpY0lzbGFuZDpHZXRDaGlsZHJlbigpKSBkbwppZiB2Lk5hbWUgPT0gJ0NlbnRlcicgdGhlbgppZiB2OkZpbmRGaXJzdENoaWxkKCdFc3BNaXJhZ2UnKSB0aGVuCnY6RmluZEZpcnN0Q2hpbGQoJ0VzcE1pcmFnZScpOkRlc3Ryb3koKQplbmQKZW5kCmVuZAplbmQKZW5kKQplbmQKc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB3YWl0KCkgZG8KaWYgX0cuRVNQTWlyYWdlSXNsYW5kIHRoZW4KRVNQTWlyYWdlSXNsYW5kKCkKZW5kCmVuZAplbmQpCnBhZ2U5OlRvZ2dsZSgiRVNQIE1pcmFnZUlzbGFuZFxu4Lih4Lit4LiH4LiX4Liw4Lil4Li44Lir4Liy4LmA4LiB4Liy4Liw4Lil4Lix4LiaIiwgX0cuRVNQTWlyYWdlSXNsYW5kLCBmdW5jdGlvbih2YWx1ZSkKX0cuRVNQTWlyYWdlSXNsYW5kID0gdmFsdWUKRVNQTWlyYWdlSXNsYW5kKCkKZW5kKQpwYWdlOTpUb2dnbGUoIlRlbGVwb3J0IFRvIEFkdmFuY2VkRnJ1aXREZWFsZXJcbuC5gOC4l+C5gOC4peC4nuC4reC4o+C5jOC4leC5hOC4m+C4q+C4suC4hOC4meC4guC4suC4ouC4nOC4peC5hOC4oeC5ieC4m+C4teC4qOC4suC4iOC5gOC4geC4suC4sOC4peC4seC4miIsIF9HLlRQTlBDREYsIGZ1bmN0aW9uKHZhbHVlKQpzcGF3bihmdW5jdGlvbigpCnBjYWxsKGZ1bmN0aW9uKCkKd2hpbGUgd2FpdCgpIGRvCmlmIF9HLlRQTlBDREYgdGhlbgppZiBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLk5QQ3M6RmluZEZpcnN0Q2hpbGQoIkFkdmFuY2VkIEZydWl0IERlYWxlciIpIHRoZW4KdG9UYXJnZXQoQ0ZyYW1lLm5ldyhnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLk5QQ3NbIkFkdmFuY2VkIEZydWl0IERlYWxlciJdLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pKQplbmQKZW5kCmVuZAplbmQpCmVuZCkKZW5kKQpwYWdlOTpUb2dnbGUoIlRlbGVwb3J0IFRvIEdlYXJcbuC5gOC4l+C5gOC4peC4nuC4reC4o+C5jOC4leC5hOC4m+C4q+C4suC4n+C4seC4meC5gOC4n+C4t+C4reC4hyIsIF9HLlNldHRpbmdzLkF1dG9fR2VhciwgZnVuY3Rpb24odmFsdWUpCl9HLkF1dG9fR2VhciA9IHZhbHVlCl9HLlNldHRpbmdzLkF1dG9fR2VhciA9IHZhbHVlClNhdmVTZXR0aW5ncygpCnRhc2suc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB0YXNrLndhaXQoLjAxKSBkbwppZiBfRy5BdXRvX0dlYXIgdGhlbgpmb3IgaSx2IGluIHBhaXJzKGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuTWFwOkZpbmRGaXJzdENoaWxkKCdNeXN0aWNJc2xhbmQnKTpHZXRDaGlsZHJlbigpKSBkbwppZiB2Lk5hbWUgPT0gIlBhcnQiIHRoZW4KaWYgdi5DbGFzc05hbWUgPT0gIk1lc2hQYXJ0IiB0aGVuCnRvVGFyZ2V0KHYuQ0ZyYW1lKQp2LlRyYW5zcGFyZW5jeSA9IDAKZW5kCmVuZAplbmQKZW5kCmVuZAplbmQpCmVuZCkKZnVuY3Rpb24gTG9ja01vb24oKQpsb2NhbCBMaWdodGluZyA9IGdhbWU6R2V0U2VydmljZSgiTGlnaHRpbmciKQpsb2NhbCBDYW0gPSBnYW1lLldvcmtzcGFjZS5DdXJyZW50Q2FtZXJhCmxvY2FsIENGTmV3LCBDRkFuZyA9IENGcmFtZS5uZXcsIENGcmFtZS5BbmdsZXMKbG9jYWwgYXNpbiA9IG1hdGguYXNpbgpsb2NhbCBDYW1lcmEgPSB3b3Jrc3BhY2UuQ3VycmVudENhbWVyYQpsb2NhbCBQbGF5ZXIgPSBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIKbG9jYWwgQ2hhcmFjdGVyID0gUGxheWVyLkNoYXJhY3Rlcgpsb2NhbCBSb290ID0gQ2hhcmFjdGVyOldhaXRGb3JDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpCmxvY2FsIE5lY2sgPSBDaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIk5lY2siLCB0cnVlKQpsb2NhbCBZT2Zmc2V0ID0gTmVjay5DMC5ZCmdhbWU6R2V0U2VydmljZSgiUnVuU2VydmljZSIpLlJlbmRlclN0ZXBwZWQ6Q29ubmVjdChmdW5jdGlvbigpCmlmIF9HLkxvY2tNb29uIHRoZW4KZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUU6RmlyZVNlcnZlcigiQWN0aXZhdGVBYmlsaXR5IikKbG9jYWwgcG9zID0gVmVjdG9yMy5uZXcoMCwgMCwgMCkKbG9jYWwgbG9va0F0ID0gTGlnaHRpbmc6R2V0TW9vbkRpcmVjdGlvbigpCmxvY2FsIGNhbWVyYUNGcmFtZSA9IENGcmFtZS5uZXcocG9zLCBsb29rQXQpCndvcmtzcGFjZS5DdXJyZW50Q2FtZXJhLkNGcmFtZSA9IGNhbWVyYUNGcmFtZQpsb2NhbCBDYW1lcmFEaXJlY3Rpb24gPSBSb290LkNGcmFtZTp0b09iamVjdFNwYWNlKGNhbWVyYUNGcmFtZSkubG9va1ZlY3Rvci51bml0CmlmIE5lY2sgYW5kIExvY2sgdGhlbgpOZWNrLkMwID0gQ0ZOZXcoMCwgWU9mZnNldCwgMCkgKiBDRkFuZygwLCAtYXNpbihDYW1lcmFEaXJlY3Rpb24ueCksIDApICogQ0ZBbmcoYXNpbihDYW1lcmFEaXJlY3Rpb24ueSksIDAsIDApCmVuZAplbHNlCkNhbS5GaWVsZE9mVmlldyA9IDcwCmVuZAplbmQpCmVuZApwYWdlOTpUb2dnbGUoIkxvY2tNb29uXG7guKHguK3guIfguJ7guKPguLDguIjguLHguJnguJfguKPguYwiLCBfRy5Mb2NrTW9vbiAsIGZ1bmN0aW9uKHZhbHVlKQpfRy5Mb2NrTW9vbiA9IHZhbHVlCkxvY2tNb29uKCkKZW5kKQpwYWdlMTA6U2VwZXJhdG9yKCLwn5CwIikKcGFnZTEwOlRvZ2dsZSgiQXV0byBBY3RpdmVSYWNlVjNcbuC4reC4reC5guC4leC5ieC5gOC4m+C4tOC4lOC5g+C4iuC5ieC4h+C4suC4meC5gOC4nOC5iOC4suC4p+C4teC4quC4suC4oSIsX0cuQXV0b0FjdGl2ZVJhY2UsZnVuY3Rpb24odmFsdWUpCl9HLkF1dG9BY3RpdmVSYWNlID0gdmFsdWUKd2hpbGUgX0cuQXV0b0FjdGl2ZVJhY2UgZG8gd2FpdCgpCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbElucHV0TWFuYWdlciIpOlNlbmRLZXlFdmVudCh0cnVlLEVudW0uS2V5Q29kZS5ULGZhbHNlLGdhbWUpCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbElucHV0TWFuYWdlciIpOlNlbmRLZXlFdmVudChmYWxzZSxFbnVtLktleUNvZGUuVCxmYWxzZSxnYW1lKQplbmQKZW5kKQpwYWdlMTA6VG9nZ2xlKCJBdXRvQWN0aXZlUmFjZVY0XG7guK3guK3guYLguJXguYnguYDguJvguLTguJTguYPguIrguYnguIfguLLguJnguYDguJzguYjguLLguKfguLXguKrguLXguYgiLCBfRy5BdXRvQWN0aXZlUmFjZVY0LCBmdW5jdGlvbih2YWx1ZSkKX0cuQXV0b0FjdGl2ZVJhY2VWNCA9IHZhbHVlCndoaWxlIF9HLkF1dG9BY3RpdmVSYWNlVjQgZG8gd2FpdCgpCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbElucHV0TWFuYWdlciIpOlNlbmRLZXlFdmVudCh0cnVlLEVudW0uS2V5Q29kZS5ZLGZhbHNlLGdhbWUpCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbElucHV0TWFuYWdlciIpOlNlbmRLZXlFdmVudChmYWxzZSxFbnVtLktleUNvZGUuWSxmYWxzZSxnYW1lKQplbmQKZW5kKQpwYWdlMTA6QnV0dG9uKCJUZWxlcG9ydCBUbyBUb3AgR3JlYXQgVHJlZVxu4LmA4LiX4LmA4Lil4Lie4Lit4Lij4LmM4LiV4LmE4Lib4Lia4LiZ4LiV4LmJ4LiZ4LmE4Lih4LmJ4LmD4Lir4LiN4LmIIiwgZnVuY3Rpb24oKQp0b1RhcmdldChDRnJhbWUubmV3KDI5NDcuNTU2ODg0NzY1NjI1LCAyMjgxLjYzMDYxNTIzNDM3NSwgLTcyMTMuNTQ5MzE2NDA2MjUpKQplbmQpCnBhZ2UxMDpCdXR0b24oIlRlbGVwb3J0IFRvIFRpbXBsZSBPZiBUaW1lXG7guYDguJfguYDguKXguJ7guK3guKPguYzguJXguYTguJvguKLguLHguIfguJfguLXguYjguJfguLPguYDguJzguYjguLLguKfguLXguKrguLXguYgiLCBmdW5jdGlvbigpCkdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSA9IENGcmFtZS5uZXcoMjgyODYuMzU1NDY4NzUsMTQ4OTUuMzAxNzU3ODEyNSwgMTAyLjYyNDY5NDgyNDIxODc1KQplbmQpCnBhZ2UxMDpCdXR0b24oIlRlbGVwb3J0IFRvIExldmVyIFB1bGxcbuC5gOC4l+C5gOC4peC4nuC4reC4o+C5jOC4leC5hOC4m+C4l+C4teC5iOC4hOC4seC4meC5guC4ouC4gSIsIGZ1bmN0aW9uKCkKdG9UYXJnZXQoQ0ZyYW1lLm5ldygyODU3NS4xODE2NDA2MjUsIDE0OTM2LjYyNzkyOTY4NzUsIDcyLjMxNjM2ODEwMzAyNzM0KSkKZW5kKQpwYWdlMTA6QnV0dG9uKCJVbmxvY2sgTGV2ZXJcbuC4m+C4peC4lOC4peC5h+C4reC4hOC4hOC4seC4meC5guC4ouC4gSIsIGZ1bmN0aW9uKCkKaWYgZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5NYXBbIlRlbXBsZSBvZiBUaW1lIl0uTGV2ZXIuUHJvbXB0OkZpbmRGaXJzdENoaWxkKCJQcm94aW1pdHlQcm9tcHQiKSB0aGVuCmdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuTWFwWyJUZW1wbGUgb2YgVGltZSJdLkxldmVyLlByb21wdDpGaW5kRmlyc3RDaGlsZCgiUHJveGltaXR5UHJvbXB0Iik6UmVtb3ZlKCkKZWxzZQplbmQKd2FpdCgwLjEpCmxvY2FsIFByb3hpbWl0eVByb21wdCA9IEluc3RhbmNlLm5ldygiUHJveGltaXR5UHJvbXB0IikKUHJveGltaXR5UHJvbXB0LlBhcmVudCA9IGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuTWFwWyJUZW1wbGUgb2YgVGltZSJdLkxldmVyLlByb21wdApQcm94aW1pdHlQcm9tcHQuTWF4QWN0aXZhdGlvbkRpc3RhbmNlID0gMTAKUHJveGltaXR5UHJvbXB0LkFjdGlvblRleHQgPSAiU2VjcmV0cyBCZWhvbGRzIEluc2lkZSIKUHJveGltaXR5UHJvbXB0Lk9iamVjdFRleHQgPSAiQW4gdW5rbm93biBsZXZlciBvZiB0aW1lIgpmdW5jdGlvbiBvblByb3hpbWl0eSgpCmxvY2FsIHBhcnQgPSBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLk1hcFsiVGVtcGxlIG9mIFRpbWUiXS5NYWluRG9vcjEKbG9jYWwgVHdlZW5TZXJ2aWNlID0gZ2FtZTpHZXRTZXJ2aWNlKCJUd2VlblNlcnZpY2UiKQpsb2NhbCBzdGFydFBvc2l0aW9uID0gcGFydC5Qb3NpdGlvbgpsb2NhbCBlbmRQb3NpdGlvbiA9IHN0YXJ0UG9zaXRpb24gKyBWZWN0b3IzLm5ldygwLCAtNTAsIDApCmxvY2FsIHR3ZWVuSW5mbyA9IFR3ZWVuSW5mby5uZXcoMTAsIEVudW0uRWFzaW5nU3R5bGUuTGluZWFyLCBFbnVtLkVhc2luZ0RpcmVjdGlvbi5PdXQpCmxvY2FsIHR3ZWVuID0gVHdlZW5TZXJ2aWNlOkNyZWF0ZShwYXJ0LCB0d2VlbkluZm8sIHtQb3NpdGlvbiA9IGVuZFBvc2l0aW9ufSkKdHdlZW46UGxheSgpCmxvY2FsIHBhcnRuZXcgPSBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLk1hcFsiVGVtcGxlIG9mIFRpbWUiXS5NYWluRG9vcjIKbG9jYWwgVHdlZW5TZXJ2aWNlID0gZ2FtZTpHZXRTZXJ2aWNlKCJUd2VlblNlcnZpY2UiKQpsb2NhbCBzdGFydFBvc2l0aW9uID0gcGFydG5ldy5Qb3NpdGlvbgpsb2NhbCBlbmRQb3NpdGlvbiA9IHN0YXJ0UG9zaXRpb24gKyBWZWN0b3IzLm5ldygwLCAtNTAsIDApCmxvY2FsIHR3ZWVuSW5mbyA9IFR3ZWVuSW5mby5uZXcoMTAsIEVudW0uRWFzaW5nU3R5bGUuTGluZWFyLCBFbnVtLkVhc2luZ0RpcmVjdGlvbi5PdXQpCmxvY2FsIHR3ZWVuID0gVHdlZW5TZXJ2aWNlOkNyZWF0ZShwYXJ0bmV3LCB0d2VlbkluZm8sIHtQb3NpdGlvbiA9IGVuZFBvc2l0aW9ufSkKdHdlZW46UGxheSgpCmxvY2FsIFNvdW5kU0ZYID0gSW5zdGFuY2UubmV3KCJTb3VuZCIpClNvdW5kU0ZYLlBhcmVudCA9IHdvcmtzcGFjZQpTb3VuZFNGWC5Tb3VuZElkID0gInJieGFzc2V0aWQ6Ly8xOTA0ODEzMDQxIgpTb3VuZFNGWDpQbGF5KCkKU291bmRTRlguTmFtZSA9ICJQT3dmcHh6eHpmRmZGRiIKZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5NYXBbIlRlbXBsZSBvZiBUaW1lIl0uTGV2ZXIuUHJvbXB0OkZpbmRGaXJzdENoaWxkKCJQcm94aW1pdHlQcm9tcHQiKTpSZW1vdmUoKQp3YWl0KDUpCndvcmtzcGFjZTpGaW5kRmlyc3RDaGlsZCgiUE93ZnB4enh6ZkZmRkYiKTpSZW1vdmUoKQpnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLk1hcFsiVGVtcGxlIG9mIFRpbWUiXS5Ob0dsaXRjaGluZzpSZW1vdmUoKQpnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLk1hcFsiVGVtcGxlIG9mIFRpbWUiXS5Ob0dsaXRjaGluZzpSZW1vdmUoKQpnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLk1hcFsiVGVtcGxlIG9mIFRpbWUiXS5Ob0dsaXRjaGluZzpSZW1vdmUoKQplbmQKUHJveGltaXR5UHJvbXB0LlRyaWdnZXJlZDpDb25uZWN0KG9uUHJveGltaXR5KQplbmQpCnBhZ2UxMDpCdXR0b24oIlRlbGVwb3J0IFRvIFJhY2UgRG9vclxu4LmA4LiX4LmA4Lil4Lie4Lit4Lij4LmM4LiV4LmE4Lib4LiX4Li14LmI4Lib4Lij4Liw4LiV4Li54LmA4Lic4LmI4LiyIiwgZnVuY3Rpb24oKQppZiBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5EYXRhLlJhY2UuVmFsdWUgPT0gIkN5Ym9yZyIgdGhlbgp0b1RhcmdldChDRnJhbWUubmV3KDI4NDkyLjQxNDA2MjUsIDE0ODk0LjQyNjc1NzgxMjUsIC00MjIuMTEwMDE1ODY5MTQwNikpCmVsc2VpZiBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5EYXRhLlJhY2UuVmFsdWUgPT0gIkZpc2htYW4iIHRoZW4KdG9UYXJnZXQoQ0ZyYW1lLm5ldygyODIyNC4wNTY2NDA2MjUsIDE0ODg5LjQyNjc1NzgxMjUsIC0yMTAuNTg3MjAzOTc5NDkyMikpCmVsc2VpZiBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5EYXRhLlJhY2UuVmFsdWUgPT0gIkdob3VsIiB0aGVuCnRvVGFyZ2V0KENGcmFtZS5uZXcoMjg2NzIuNzIwNzAzMTI1LCAxNDg4OS4xMjc5Mjk2ODc1LCA0NTQuNTk2MTYwODg4NjcxOSkpCmVsc2VpZiBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5EYXRhLlJhY2UuVmFsdWUgPT0gIkh1bWFuIiB0aGVuCnRvVGFyZ2V0KENGcmFtZS5uZXcoMjkyMzcuMjk0OTIxODc1LCAxNDg4OS40MjY3NTc4MTI1LCAtMjA2Ljk0OTU1NDQ0MzM1OTM4KSkKZWxzZWlmIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkRhdGEuUmFjZS5WYWx1ZSA9PSAiTWluayIgdGhlbgp0b1RhcmdldChDRnJhbWUubmV3KDI5MDIwLjY2MDE1NjI1LCAxNDg4OS40MjY3NTc4MTI1LCAtMzc5LjI2ODI4MDAyOTI5NjkpKQplbHNlaWYgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuRGF0YS5SYWNlLlZhbHVlID09ICJTa3lwaWVhIiB0aGVuCnRvVGFyZ2V0KENGcmFtZS5uZXcoMjg5NjcuNDA4MjAzMTI1LCAxNDkxOC4wNzUxOTUzMTI1LCAyMzQuMzExOTgxMjAxMTcxODgpKQplbmQKZW5kKQpwYWdlMTA6QnV0dG9uKCJDbG9jayBBY2Nlc3NcbuC5gOC4guC5ieC4suC4luC4tuC4h+C4q+C5ieC4reC4h+C4meC4suC4rOC4tOC4geC4suC5hOC4lOC5iSIsIGZ1bmN0aW9uKCkKZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5NYXBbIlRlbXBsZSBvZiBUaW1lIl0uRG9Ob3RFbnRlcjpSZW1vdmUoKQpnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLk1hcFsiVGVtcGxlIG9mIFRpbWUiXS5DbG9ja1Jvb21FeGl0OlJlbW92ZSgpCmVuZCkKcGFnZTEwOkJ1dHRvbigiRGlzYWJsZWQgSW5mIFN0YWlyc1xu4Lib4Li04LiU4Lia4Lix4LiZ4LmE4LiU4Lit4Li04LiZ4Lif4Li04LiZ4Li04LiV4Li14LmJIiwgZnVuY3Rpb24oKQpnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkluZmluaXRlU3RhaXJzLkRpc2FibGVkID0gdHJ1ZQplbmQpCnBhZ2UxMDpCdXR0b24oIlRlbGVwb3J0IFRvIEFjaWVudCBPbmVcbuC5gOC4l+C5gOC4peC4nuC4reC4o+C5jOC4leC5hOC4m+C4l+C4teC5iOC4peC4ueC4geC5geC4geC5ieC4p+C5geC4lOC4hyIsIGZ1bmN0aW9uKCkKdG9UYXJnZXQoQ0ZyYW1lLm5ldygyODk4MS41NTI3MzQzNzUsIDE0ODg4LjQyNjc1NzgxMjUsIC0xMjAuMjQ1ODQ5NjA5Mzc1KSkKZW5kKQpwYWdlMTA6QnV0dG9uKCJCdXkgQW5jaWVudCBPbmUgUXVlc3RcbuC4i+C4t+C5ieC4reC5gOC4hOC4p+C4quC4peC4ueC4geC5geC4geC5ieC4pyIsIGZ1bmN0aW9uKCkKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcignVXBncmFkZVJhY2UnLCdCdXknKQplbmQpCnBhZ2UxMDpUb2dnbGUoIkF1dG8gVHJhaWxcbuC4reC4reC5guC4leC5ieC4nOC5iOC4suC4meC4lOC5iOC4suC4mSIsIGZhbHNlLCBmdW5jdGlvbih2YWx1ZSkKX0cuQXV0b1JhY2VRdWVzdCA9IHZhbHVlCmlmIHZhbHVlID09IGZhbHNlIHRoZW4KdG9UYXJnZXQoZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSkKZW5kCmVuZCkKc3Bhd24oZnVuY3Rpb24oKQpwY2FsbChmdW5jdGlvbigpCndoaWxlIHdhaXQoKSBkbwppZiBfRy5BdXRvUmFjZVF1ZXN0IHRoZW4KaWYgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuRGF0YS5SYWNlLlZhbHVlID09ICJIdW1hbiIgdGhlbgpmb3IgaSx2IGluIHBhaXJzKGdhbWUuV29ya3NwYWNlLkVuZW1pZXM6R2V0RGVzY2VuZGFudHMoKSkgZG8KaWYgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpIGFuZCB2Lkh1bWFub2lkLkhlYWx0aCA+IDAgdGhlbgpwY2FsbChmdW5jdGlvbigpCnJlcGVhdCB0YXNrLndhaXQoMC4xKQp2Lkh1bWFub2lkLkhlYWx0aCA9IDAKdi5IdW1hbm9pZFJvb3RQYXJ0LkNhbkNvbGxpZGUgPSBmYWxzZQpzZXRoaWRkZW5wcm9wZXJ0eShnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIsICJTaW11bGF0aW9uUmFkaXVzIiwgbWF0aC5odWdlKQp1bnRpbCBub3QgX0cuQXV0b1JhY2VRdWVzdCBvciBub3Qgdi5QYXJlbnQgb3Igdi5IdW1hbm9pZC5IZWFsdGggPD0gMAplbmQpCmVuZAplbmQKZWxzZWlmIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkRhdGEuUmFjZS5WYWx1ZSA9PSAiU2t5cGllYSIgdGhlbgpmb3IgaSx2IGluIHBhaXJzKGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuTWFwLlNreVRyaWFsLk1vZGVsOkdldERlc2NlbmRhbnRzKCkpIGRvCmlmIHYuTmFtZSA9PSAgInNub3dpc2xhbmRfQ3lsaW5kZXIuMDgxIiB0aGVuCnRvVGFyZ2V0KHYuQ0ZyYW1lKiBDRnJhbWUubmV3KDAsMCwwKSkKZW5kCmVuZAplbHNlaWYgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuRGF0YS5SYWNlLlZhbHVlID09ICJGaXNobWFuIiB0aGVuCmZvciBpLHYgaW4gcGFpcnMoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5TZWFCZWFzdHMuU2VhQmVhc3QxOkdldERlc2NlbmRhbnRzKCkpIGRvCmlmIHYuTmFtZSA9PSAgIkh1bWFub2lkUm9vdFBhcnQiIHRoZW4KdG9UYXJnZXQodi5DRnJhbWUqIFBvcykKZm9yIGksdiBpbiBwYWlycyhnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQmFja3BhY2s6R2V0Q2hpbGRyZW4oKSkgZG8KaWYgdjpJc0EoIlRvb2wiKSB0aGVuCmlmIHYuVG9vbFRpcCA9PSAiTWVsZWUiIHRoZW4KZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZDpFcXVpcFRvb2wodikKZW5kCmVuZAplbmQKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsSW5wdXRNYW5hZ2VyIik6U2VuZEtleUV2ZW50KHRydWUsMTIyLGZhbHNlLGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydCkKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsSW5wdXRNYW5hZ2VyIik6U2VuZEtleUV2ZW50KGZhbHNlLDEyMixmYWxzZSxnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQpCndhaXQoLjIpCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbElucHV0TWFuYWdlciIpOlNlbmRLZXlFdmVudCh0cnVlLDEyMCxmYWxzZSxnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQpCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbElucHV0TWFuYWdlciIpOlNlbmRLZXlFdmVudChmYWxzZSwxMjAsZmFsc2UsZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0KQp3YWl0KC4yKQpnYW1lOkdldFNlcnZpY2UoIlZpcnR1YWxJbnB1dE1hbmFnZXIiKTpTZW5kS2V5RXZlbnQodHJ1ZSw5OSxmYWxzZSxnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQpCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbElucHV0TWFuYWdlciIpOlNlbmRLZXlFdmVudChmYWxzZSw5OSxmYWxzZSxnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQpCmZvciBpLHYgaW4gcGFpcnMoZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkJhY2twYWNrOkdldENoaWxkcmVuKCkpIGRvCmlmIHY6SXNBKCJUb29sIikgdGhlbgppZiB2LlRvb2xUaXAgPT0gIkJsb3ggRnJ1aXQiIHRoZW4KZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZDpFcXVpcFRvb2wodikKZW5kCmVuZAplbmQKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsSW5wdXRNYW5hZ2VyIik6U2VuZEtleUV2ZW50KHRydWUsMTIyLGZhbHNlLGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydCkKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsSW5wdXRNYW5hZ2VyIik6U2VuZEtleUV2ZW50KGZhbHNlLDEyMixmYWxzZSxnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQpCndhaXQoLjIpCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbElucHV0TWFuYWdlciIpOlNlbmRLZXlFdmVudCh0cnVlLDEyMCxmYWxzZSxnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQpCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbElucHV0TWFuYWdlciIpOlNlbmRLZXlFdmVudChmYWxzZSwxMjAsZmFsc2UsZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0KQp3YWl0KC4yKQpnYW1lOkdldFNlcnZpY2UoIlZpcnR1YWxJbnB1dE1hbmFnZXIiKTpTZW5kS2V5RXZlbnQodHJ1ZSw5OSxmYWxzZSxnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQpCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbElucHV0TWFuYWdlciIpOlNlbmRLZXlFdmVudChmYWxzZSw5OSxmYWxzZSxnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQpCndhaXQoMC41KQpmb3IgaSx2IGluIHBhaXJzKGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5CYWNrcGFjazpHZXRDaGlsZHJlbigpKSBkbwppZiB2OklzQSgiVG9vbCIpIHRoZW4KaWYgdi5Ub29sVGlwID09ICJTd29yZCIgdGhlbgpnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkOkVxdWlwVG9vbCh2KQplbmQKZW5kCmVuZApnYW1lOkdldFNlcnZpY2UoIlZpcnR1YWxJbnB1dE1hbmFnZXIiKTpTZW5kS2V5RXZlbnQodHJ1ZSwxMjIsZmFsc2UsZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0KQpnYW1lOkdldFNlcnZpY2UoIlZpcnR1YWxJbnB1dE1hbmFnZXIiKTpTZW5kS2V5RXZlbnQoZmFsc2UsMTIyLGZhbHNlLGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydCkKd2FpdCguMikKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsSW5wdXRNYW5hZ2VyIik6U2VuZEtleUV2ZW50KHRydWUsMTIwLGZhbHNlLGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydCkKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsSW5wdXRNYW5hZ2VyIik6U2VuZEtleUV2ZW50KGZhbHNlLDEyMCxmYWxzZSxnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQpCndhaXQoLjIpCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbElucHV0TWFuYWdlciIpOlNlbmRLZXlFdmVudCh0cnVlLDk5LGZhbHNlLGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydCkKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsSW5wdXRNYW5hZ2VyIik6U2VuZEtleUV2ZW50KGZhbHNlLDk5LGZhbHNlLGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydCkKd2FpdCgwLjUpCmZvciBpLHYgaW4gcGFpcnMoZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkJhY2twYWNrOkdldENoaWxkcmVuKCkpIGRvCmlmIHY6SXNBKCJUb29sIikgdGhlbgppZiB2LlRvb2xUaXAgPT0gIkd1biIgdGhlbgpnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkOkVxdWlwVG9vbCh2KQplbmQKZW5kCmVuZApnYW1lOkdldFNlcnZpY2UoIlZpcnR1YWxJbnB1dE1hbmFnZXIiKTpTZW5kS2V5RXZlbnQodHJ1ZSwxMjIsZmFsc2UsZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0KQpnYW1lOkdldFNlcnZpY2UoIlZpcnR1YWxJbnB1dE1hbmFnZXIiKTpTZW5kS2V5RXZlbnQoZmFsc2UsMTIyLGZhbHNlLGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydCkKd2FpdCguMikKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsSW5wdXRNYW5hZ2VyIik6U2VuZEtleUV2ZW50KHRydWUsMTIwLGZhbHNlLGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydCkKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsSW5wdXRNYW5hZ2VyIik6U2VuZEtleUV2ZW50KGZhbHNlLDEyMCxmYWxzZSxnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQpCndhaXQoLjIpCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbElucHV0TWFuYWdlciIpOlNlbmRLZXlFdmVudCh0cnVlLDk5LGZhbHNlLGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydCkKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsSW5wdXRNYW5hZ2VyIik6U2VuZEtleUV2ZW50KGZhbHNlLDk5LGZhbHNlLGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydCkKZW5kCmVuZAplbHNlaWYgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuRGF0YS5SYWNlLlZhbHVlID09ICJDeWJvcmciIHRoZW4KdG9UYXJnZXQoQ0ZyYW1lLm5ldygyODY1NCwgMTQ4OTguNzgzMiwgLTMwLCAxLCAwLCAwLCAwLCAxLCAwLCAwLCAwLCAxKSkKZWxzZWlmIGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkRhdGEuUmFjZS5WYWx1ZSA9PSAiR2hvdWwiIHRoZW4KZm9yIGksdiBpbiBwYWlycyhnYW1lLldvcmtzcGFjZS5FbmVtaWVzOkdldERlc2NlbmRhbnRzKCkpIGRvCmlmIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkIikgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKSBhbmQgdi5IdW1hbm9pZC5IZWFsdGggPiAwIHRoZW4KcGNhbGwoZnVuY3Rpb24oKQpyZXBlYXQgd2FpdCguMSkKdi5IdW1hbm9pZC5IZWFsdGggPSAwCnYuSHVtYW5vaWRSb290UGFydC5DYW5Db2xsaWRlID0gZmFsc2UKc2V0aGlkZGVucHJvcGVydHkoZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLCAiU2ltdWxhdGlvblJhZGl1cyIsIG1hdGguaHVnZSkKdW50aWwgbm90IF9HLkF1dG9SYWNlUXVlc3Qgb3Igbm90IHYuUGFyZW50IG9yIHYuSHVtYW5vaWQuSGVhbHRoIDw9IDAKZW5kKQplbmQKZW5kCmVsc2VpZiBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5EYXRhLlJhY2UuVmFsdWUgPT0gIk1pbmsiIHRoZW4KZm9yIGksdiBpbiBwYWlycyhnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpOkdldERlc2NlbmRhbnRzKCkpIGRvCmlmIHYuTmFtZSA9PSAiU3RhcnRQb2ludCIgdGhlbgp0b1RhcmdldCh2LkNGcmFtZSogQ0ZyYW1lLm5ldygwLDEwLDApKQplbmQKZW5kCmVuZAplbmQKZW5kCmVuZCkKZW5kKQpwYWdlMTA6VG9nZ2xlKCJBdXRvIEJ1eSBHZWFyXG7guK3guK3guYLguJXguYnguIvguLfguYnguK3guYDguIHguLXguKLguKPguYwiLCBmYWxzZSwgZnVuY3Rpb24odmFsdWUpCl9HLkJnID0gdmFsdWUKZW5kKQpzcGF3bihmdW5jdGlvbigpCnBjYWxsKGZ1bmN0aW9uKCkKd2hpbGUgd2FpdCgwLjEpIGRvCmlmIF9HLkJnIHRoZW4KbG9jYWwgYXJncyA9IHsKWzFdID0gdHJ1ZQp9CmxvY2FsIGFyZ3MgPSB7ClsxXSA9ICJVcGdyYWRlUmFjZSIsClsyXSA9ICJCdXkiCn0KZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpOldhaXRGb3JDaGlsZCgiUmVtb3RlcyIpOldhaXRGb3JDaGlsZCgiQ29tbUZfIik6SW52b2tlU2VydmVyKHVucGFjayhhcmdzKSkKZW5kCmVuZAplbmQpCmVuZCkKcGFnZTEwOlRvZ2dsZSgiQXV0byBBbmNpZW50IE9uZSBRdWVzdFxu4Lit4Lit4LmC4LiV4LmJ4LmA4LiE4Lin4Liq4Lil4Li54LiB4LmB4LiB4LmJ4LinIiwgZmFsc2UsIGZ1bmN0aW9uKHZhbHVlKQpfRy5BdXRvVHJhbkZyb20gPSB2YWx1ZQpfRy5BdXRvQW5jaWVudE9uZVF1ZXN0ID0gdmFsdWUKZW5kKQpzcGF3bihmdW5jdGlvbigpCnBjYWxsKGZ1bmN0aW9uKCkKd2hpbGUgd2FpdCgpIGRvCmlmIF9HLkF1dG9UcmFuRnJvbSB0aGVuCmlmIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuUmFjZVRyYW5zZm9ybWVkLlZhbHVlID09IHRydWUgdGhlbgpfRy5BdXRvQW5jaWVudE9uZVF1ZXN0ID0gZmFsc2UKQVR3ZWVuKENGcmFtZS5uZXcoMjE2LjIxMTE4MTY0MDYyNSwgMTI2LjkzNTIwMzU1MjI0NjEsIC0xMjU5OS4wNzMyNDIxODc1KSkKZW5kCmVuZAplbmQKZW5kKQplbmQpCnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgd2FpdCgpIGRvCmlmIF9HLkF1dG9BbmNpZW50T25lUXVlc3QgdGhlbgpwY2FsbChmdW5jdGlvbigpCmlmIGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpGaW5kRmlyc3RDaGlsZCgiQ29jb2EgV2FycmlvciIpIG9yIGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpGaW5kRmlyc3RDaGlsZCgiQ2hvY29sYXRlIEJhciBCYXR0bGVyIikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkZpbmRGaXJzdENoaWxkKCJTd2VldCBUaGllZiIpIG9yIGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpGaW5kRmlyc3RDaGlsZCgiQ2FuZHkgUmViZWwiKSB0aGVuCmZvciBpLHYgaW4gcGFpcnMoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkdldENoaWxkcmVuKCkpIGRvCmlmIHYuTmFtZSA9PSAiQ29jb2EgV2FycmlvciIgb3Igdi5OYW1lID09ICJDaG9jb2xhdGUgQmFyIEJhdHRsZXIiIG9yIHYuTmFtZSA9PSAiU3dlZXQgVGhpZWYiIG9yIHYuTmFtZSA9PSAiQ2FuZHkgUmViZWwiIHRoZW4KaWYgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpIGFuZCB2Lkh1bWFub2lkLkhlYWx0aCA+IDAgdGhlbgpyZXBlYXQgdGFzay53YWl0KCkKRXF1aXBXZWFwb24oX0cuU2VsZWN0V2VhcG9uKQp2Lkh1bWFub2lkUm9vdFBhcnQuQ2FuQ29sbGlkZSA9IGZhbHNlCnYuSHVtYW5vaWQuV2Fsa1NwZWVkID0gMAp2LkhlYWQuQ2FuQ29sbGlkZSA9IGZhbHNlCkJyaW5nTW9iID0gdHJ1ZQp0b1RhcmdldCh2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lICogTWV0aG9kRmFybSkKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsVXNlciIpOkNhcHR1cmVDb250cm9sbGVyKCkKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsVXNlciIpOkJ1dHRvbjFEb3duKFZlY3RvcjIubmV3KDEyODAsNjcyKSkKdW50aWwgbm90IF9HLkF1dG9BbmNpZW50T25lUXVlc3Qgb3Igbm90IHYuUGFyZW50IG9yIHYuSHVtYW5vaWQuSGVhbHRoIDw9IDAKZW5kCmVuZAplbmQKZWxzZQpCcmluZ01vYiA9IGZhbHNlCnRvVGFyZ2V0KENGcmFtZS5uZXcoMjE2LjIxMTE4MTY0MDYyNSwgMTI2LjkzNTIwMzU1MjI0NjEsIC0xMjU5OS4wNzMyNDIxODc1KSkKZm9yIGksdiBpbiBwYWlycyhnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIik6R2V0Q2hpbGRyZW4oKSkgZG8KaWYgdi5OYW1lID09ICJDb2NvYSBXYXJyaW9yIiB0aGVuCnRvVGFyZ2V0KHYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgKiBDRnJhbWUubmV3KDIsMjAsMikpCmVsc2VpZiB2Lk5hbWUgPT0gIkNob2NvbGF0ZSBCYXIgQmF0dGxlciIgdGhlbgp0b1RhcmdldCh2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lICogQ0ZyYW1lLm5ldygyLDIwLDIpKQplbHNlaWYgdi5OYW1lID09ICJTd2VldCBUaGllZiIgdGhlbgp0b1RhcmdldCh2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lICogQ0ZyYW1lLm5ldygyLDIwLDIpKQplbHNlaWYgdi5OYW1lID09ICJDYW5keSBSZWJlbCIgdGhlbgp0b1RhcmdldCh2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lICogQ0ZyYW1lLm5ldygyLDIwLDIpKQplbmQKZW5kCmVuZAplbmQpCmVuZAplbmQKZW5kKQpzcGF3bihmdW5jdGlvbigpCnBjYWxsKGZ1bmN0aW9uKCkKd2hpbGUgd2FpdCgpIGRvCmlmIF9HLkF1dG9UcmFuRnJvbSB0aGVuCmlmIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuUmFjZVRyYW5zZm9ybWVkLlZhbHVlID09IGZhbHNlIHRoZW4KX0cuQXV0b0FuY2llbnRPbmVRdWVzdCA9IHRydWUKZW5kCmVuZAplbmQKZW5kKQplbmQpCnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgd2FpdCgpIGRvCnBjYWxsKGZ1bmN0aW9uKCkKaWYgX0cuQXV0b1RyYW5Gcm9tIHRoZW4KZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsSW5wdXRNYW5hZ2VyIik6U2VuZEtleUV2ZW50KHRydWUsIlkiLGZhbHNlLGdhbWUpCndhaXQoMC4xKQpnYW1lOkdldFNlcnZpY2UoIlZpcnR1YWxJbnB1dE1hbmFnZXIiKTpTZW5kS2V5RXZlbnQoZmFsc2UsIlkiLGZhbHNlLGdhbWUpCmVuZAplbmQpCmVuZAplbmQpCnBhZ2UxMDpUb2dnbGUoIkF1dG8gS2lsbCBQbGF5ZXIgT24gVHJhaWxcbuC4reC4reC5guC4leC5ieC4huC5iOC4suC5gOC4nuC4peC4ouC5jOC5gOC4ouC4reC4o+C5jCIsIGZhbHNlLCBmdW5jdGlvbih2YWx1ZSkKX0cuQXV0b2tpbGxQID0gdmFsdWUKZW5kKQpzcGF3bihmdW5jdGlvbigpCndoaWxlIHdhaXQoKSBkbwppZiBfRy5BdXRva2lsbFAgdGhlbgpmb3IgaSx2IGluIHBhaXJzKGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuQ2hhcmFjdGVyczpHZXRDaGlsZHJlbigpKSBkbwppZiB2Lk5hbWUgYW5kICh2Lkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24gLSBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLk1hZ25pdHVkZSA8PSAxMDAgdGhlbgppZiB2Lkh1bWFub2lkLkhlYWx0aCA+IDAgdGhlbgpyZXBlYXQgd2FpdCgpCkVxdWlwV2VhcG9uKF9HLlNlbGVjdFdlYXBvbikKdG9UYXJnZXQodi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSAqIENGcmFtZS5uZXcoMCwwLDUpKQpfRy5Vc2Vza2lsbCA9IHRydWUKdi5IdW1hbm9pZFJvb3RQYXJ0LkNhbkNvbGxpZGUgPSBmYWxzZQp2Lkh1bWFub2lkUm9vdFBhcnQuU2l6ZSA9IFZlY3RvcjMubmV3KDYwLCA2MCwgNjApCnVudGlsIG5vdCBfRy5BdXRva2lsbFAgb3Igbm90IHYuUGFyZW50IG9yIHYuSHVtYW5vaWQuSGVhbHRoIDw9IDAKX0cuVXNlc2tpbGwgPSBmYWxzZQplbmQKZW5kCmVuZAplbmQKZW5kCmVuZCkKcGFnZTEwOkJ1dHRvbigiVGVsZXBvcnQgVG8gQXJlYSBQVlBcbuC5gOC4l+C5gOC4peC4nuC4reC4o+C5jOC4leC5hOC4m+C4l+C4teC5iOC4leC5iOC4reC4quC4ueC5iSIsIGZ1bmN0aW9uKCkKdG9UYXJnZXQoQ0ZyYW1lLm5ldygyODc2Ni42ODE2NDA2MjUsIDE0OTY3LjE0NTUwNzgxMjUsIC0xNjQuMTMyOTA0MDUyNzM0MzgpKQplbmQpCnBhZ2UxMDpCdXR0b24oIlRlbGVwb3J0IFRvIEFyZWEgU2FmZVxu4LmA4LiX4LmA4Lil4Lie4Lit4Lij4LmM4LiV4Lit4Lit4LiB4LiI4Liy4LiB4LiX4Li14LmI4LiV4LmI4Lit4Liq4Li54LmJIiwgZnVuY3Rpb24oKQp0b1RhcmdldChDRnJhbWUubmV3KDI4MjczLjA4NTkzNzUsIDE0ODk2LjUwNzgxMjUsIDE1Ny40MjA2MzkwMzgwODU5NCkpCmVuZCkKcGFnZTE0OlNlcGVyYXRvcigi8J+MiiIpCnBhZ2UxNDpUb2dnbGUoIlRlbGVwb3J0IHRvIEtpc3VuZSBJc2xhbmRcbuC5gOC4l+C5gOC4peC4nuC4reC4o+C5jOC4leC5hOC4m+C4q+C4suC5gOC4geC4suC4sOC4iOC4tOC5ieC4h+C4iOC4reC4gSIsIF9HLlRwdG9LaXN1bmVJc2xhbmQsIGZ1bmN0aW9uKHZhbHVlKQpfRy5UcHRvS2lzdW5lSXNsYW5kID0gdmFsdWUKc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB0YXNrLndhaXQoKSBkbwppZiBfRy5UcHRvS2lzdW5lSXNsYW5kIHRoZW4KbG9jYWwgayA9IHRvVGFyZ2V0KGdhbWUud29ya3NwYWNlLk1hcC5LaXRzdW5lSXNsYW5kLlNocmluZUFjdGl2ZS5Xb3JsZFBpdm90ICogQ0ZyYW1lLm5ldygwLDAsMjApKQplbHNlCms6U3RvcCgpCmVuZAplbmQKZW5kKQplbmQpCnBhZ2UxNDpUb2dnbGUoIkF1dG8gQ29sbGVjdCBTcGlyaXQgRmlyZVxu4Lit4Lit4LmC4LiV4LmJ4LmA4LiB4LmH4Lia4Lil4Li54LiB4LmE4Lif4Lin4Li04LiN4LiN4Liy4LiTIiwgX0cuRXosIGZ1bmN0aW9uKHZhbHVlKQpfRy5FeiA9IHZhbHVlCnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgX0cuRXogZG8gd2FpdCgpCnBjYWxsKGZ1bmN0aW9uKCkKaWYgd29ya3NwYWNlOkZpbmRGaXJzdENoaWxkKCJFbWJlclRlbXBsYXRlIikgdGhlbgpnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lID0gd29ya3NwYWNlLkVtYmVyVGVtcGxhdGUuUGFydC5DRnJhbWUKZW5kCmVuZCkKZW5kCmVuZCkKZW5kKQpwYWdlMTQ6U2VwZXJhdG9yKCJGYXJtU2VhL+C4n+C4suC4o+C5jOC4oeC4l+C4sOC5gOC4pSIpCmZ1bmN0aW9uIENoZWNrUGlyYXRlQm9hdCgpCmxvY2FsIGNoZWNrbW1wYiA9IHsiUGlyYXRlR3JhbmRCcmlnYWRlIiwgIlBpcmF0ZUJyaWdhZGUifQpmb3IgciwgdiBpbiBuZXh0LCBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLkVuZW1pZXM6R2V0Q2hpbGRyZW4oKSBkbwppZiB0YWJsZS5maW5kKGNoZWNrbW1wYiwgdi5OYW1lKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSGVhbHRoIikgYW5kIHYuSGVhbHRoLlZhbHVlID4gMCB0aGVuCnJldHVybiB2CmVuZAplbmQKZW5kCmZ1bmN0aW9uIENoZWNrUGlyYXRlQm9hdCgpCmxvY2FsIGNoZWNrbW1wYiA9IHsiRmlzaEJvYXQifQpmb3IgciwgdiBpbiBuZXh0LCBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLkVuZW1pZXM6R2V0Q2hpbGRyZW4oKSBkbwppZiB0YWJsZS5maW5kKGNoZWNrbW1wYiwgdi5OYW1lKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSGVhbHRoIikgYW5kIHYuSGVhbHRoLlZhbHVlID4gMCB0aGVuCnJldHVybiB2CmVuZAplbmQKZW5kCmxvY2FsIGNoZWNrdGVhbSA9IGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLlRlYW0KbG9jYWwgQWxsQm9hdCA9IChjaGVja3RlYW0gPT0gZ2FtZS5UZWFtc1siTWFyaW5lcyJdIGFuZCB7IkRpbmdoeSIsICJNYXJpbmVTbG9vcCIsICJNYXJpbmVCcmlnYWRlIiwgIk1hcmluZUdyYW5kQnJpZ2FkZSJ9KSBvciB7IkRpbmdoeSIsICJQaXJhdGVTbG9vcCIsICJQaXJhdGVCcmlnYWRlIiwgIlBpcmF0ZUdyYW5kQnJpZ2FkZSJ9CmxvY2FsIFNlbGVjdEJvYXQgPSAiTWFyaW5lR3JhbmRCcmlnYWRlIgpwYWdlMTQ6RHJvcGRvd24oIuC5gOC4peC4t+C4reC4geC5gOC4o+C4t+C4rSIsIEFsbEJvYXQsIGZ1bmN0aW9uKHZhbHVlKQpTZWxlY3RCb2F0ID0gdmFsdWUKcHJpbnQoIlNlbGVjdGVkIGJvYXQ6IiwgU2VsZWN0Qm9hdCkKZW5kKQpsb2NhbCBhY3RpdmVUd2VlbnMgPSB7fQpwYWdlMTQ6VG9nZ2xlKCJBdXRvIEZpbmQgSXNsYW5kIEtpdHN1bmUsTWlyYWdlLFZvbGNhbm9cbuC4reC4reC5guC4leC5ieC4q+C4siDguYDguIHguLLguLDguKXguLHguJos4LmA4LiB4Liy4Liw4LiI4Li04LmJ4LiH4LiI4Lit4LiBLOC5gOC4geC4suC4sOC4oOC4ueC5gOC4guC4suC5hOC4nyIsIGZhbHNlLCBmdW5jdGlvbih2YWx1ZSkKX0cuQXV0b0ZpbmRJc2xhbmQgPSB2YWx1ZQpfRy5Ob2NsaXByb2NrID0gdmFsdWUKaWYgdmFsdWUgPT0gZmFsc2UgdGhlbgpmb3IgXywgVHdlZW4gaW4gcGFpcnMoYWN0aXZlVHdlZW5zKSBkbwppZiBUd2VlbiB0aGVuIFR3ZWVuOkNhbmNlbCgpIGVuZAplbmQKYWN0aXZlVHdlZW5zID0ge30KdG9UYXJnZXQoZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lKQplbmQKZW5kKQpzcGF3bihmdW5jdGlvbigpCndoaWxlIHdhaXQoKSBkbwppZiBfRy5BdXRvRmluZElzbGFuZCBhbmQgU2VsZWN0Qm9hdCB0aGVuCnBjYWxsKGZ1bmN0aW9uKCkKbG9jYWwgcGxheWVyID0gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyCmxvY2FsIGNoYXJhY3RlciA9IHBsYXllci5DaGFyYWN0ZXIKbG9jYWwgYm9hdCA9IGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuQm9hdHM6RmluZEZpcnN0Q2hpbGQoU2VsZWN0Qm9hdCkKaWYgY2hhcmFjdGVyIGFuZCBjaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkIikgYW5kIGNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpIHRoZW4KaWYgbm90IGdhbWUuV29ya3NwYWNlLl9Xb3JsZE9yaWdpbi5Mb2NhdGlvbnM6RmluZEZpcnN0Q2hpbGQoJ1ByZWhpc3RvcmljIElzbGFuZCcpIG9yIGdhbWUuV29ya3NwYWNlLl9Xb3JsZE9yaWdpbi5Mb2NhdGlvbnM6RmluZEZpcnN0Q2hpbGQoJ01pcmFnZSBJc2xhbmQnKSAgb3IgIGdhbWUuV29ya3NwYWNlLl9Xb3JsZE9yaWdpbi5Mb2NhdGlvbnM6RmluZEZpcnN0Q2hpbGQoJ0tpdHN1bmUgSXNsYW5kJykgdGhlbgppZiBub3QgYm9hdCBvciAoYm9hdCBhbmQgYm9hdC5Pd25lci5WYWx1ZS5OYW1lIH49IHBsYXllci5OYW1lKSB0aGVuCmxvY2FsIGJ1eVBvcyA9IENGcmFtZS5uZXcoLTE2OTI3LjQ1MTE3MTg3NSwgOS4wODYzNjE4ODUwNzA4LCA0MzMuODY0Mjg4MzMwMDc4MSkKbG9jYWwgYnV5VHdlZW4gPSB0b1RhcmdldChidXlQb3MpCmlmIChidXlQb3MuUG9zaXRpb24gLSBjaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikuTWFnbml0dWRlIDw9IDEwIHRoZW4KaWYgYnV5VHdlZW4gdGhlbiBidXlUd2VlbjpTdG9wKCkgZW5kCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkJ1eUJvYXQiLCBTZWxlY3RCb2F0KQplbmQKZWxzZWlmIGJvYXQgYW5kIGJvYXQuT3duZXIuVmFsdWUuTmFtZSA9PSBwbGF5ZXIuTmFtZSBhbmQgY2hhcmFjdGVyLkh1bWFub2lkLlNpdCA9PSBmYWxzZSB0aGVuCmxvY2FsIHZlaGljbGVTZWF0ID0gYm9hdDpGaW5kRmlyc3RDaGlsZCgiVmVoaWNsZVNlYXQiLCB0cnVlKQppZiB2ZWhpY2xlU2VhdCB0aGVuCnRvVGFyZ2V0KHZlaGljbGVTZWF0LkNGcmFtZSAqIENGcmFtZS5uZXcoMCwgMSwgMCkpCmVuZAplbHNlaWYgYm9hdCBhbmQgYm9hdC5Pd25lci5WYWx1ZS5OYW1lID09IHBsYXllci5OYW1lIGFuZCBjaGFyYWN0ZXIuSHVtYW5vaWQuU2l0ID09IHRydWUgdGhlbgpsb2NhbCB2ZWhpY2xlU2VhdCA9IGJvYXQ6RmluZEZpcnN0Q2hpbGQoIlZlaGljbGVTZWF0IiwgdHJ1ZSkKaWYgdmVoaWNsZVNlYXQgdGhlbgpsb2NhbCBwb3NpdGlvbnMgPSB7Q0ZyYW1lLm5ldygtMTcwNDAuNDQzNCwgMTIuNzk0NjkzLCA1MDYuOTYyMjUsIC0wLjIwOTkxMjMzLCAyLjc2OTE3MDY3ZS0wOCwgMC45Nzc3MjAyMDEsIC0xLjM5ODQ4NTMzZS0wOCwgMSwgLTMuMTMyNTIyMTVlLTA4LCAtMC45Nzc3MjAyMDEsIC0yLjAyNDg4MjMxZS0wOCwgLTAuMjA5OTEyMzMpICogQ0ZyYW1lLm5ldygwLCAwLCAtOTk5OTk5OSksQ0ZyYW1lLm5ldygtMTcwNDAuNDQzNCwgMTIuNzk0NjkzLCA1MDYuOTYyMjUsIC0wLjIwOTkxMjMzLCAyLjc2OTE3MDY3ZS0wOCwgMC45Nzc3MjAyMDEsIC0xLjM5ODQ4NTMzZS0wOCwgMSwgLTMuMTMyNTIyMTVlLTA4LCAtMC45Nzc3MjAyMDEsIC0yLjAyNDg4MjMxZS0wOCwgLTAuMjA5OTEyMzMpICogQ0ZyYW1lLm5ldygwLCAwLCAtOTk5OTk5KX0KZm9yIGksIHBvcyBpbiBpcGFpcnMocG9zaXRpb25zKSBkbwppZiBub3QgX0cuQXV0b0ZpbmRJc2xhbmQgdGhlbiBicmVhayBlbmQKaWYgZ2FtZS5Xb3Jrc3BhY2UuX1dvcmxkT3JpZ2luLkxvY2F0aW9uczpGaW5kRmlyc3RDaGlsZCgnUHJlaGlzdG9yaWNJc2xhbmQnKSBvciBnYW1lLldvcmtzcGFjZS5fV29ybGRPcmlnaW4uTG9jYXRpb25zOkZpbmRGaXJzdENoaWxkKCdNaXJhZ2UgSXNsYW5kJykgb3IgZ2FtZS5Xb3Jrc3BhY2UuX1dvcmxkT3JpZ2luLkxvY2F0aW9uczpGaW5kRmlyc3RDaGlsZCgnS2l0c3VuZSBJc2xhbmQnKSB0aGVuICBpZiBnYW1lLldvcmtzcGFjZS5fV29ybGRPcmlnaW4uTG9jYXRpb25zOkZpbmRGaXJzdENoaWxkKCdQcmVoaXN0b3JpY0lzbGFuZCcpIHRoZW4gVmVjKCI8Q29sb3I9Q3lhbj5Gb3VuZCBWb2NhbG5vIElzbGFuZFxu4LmA4LiI4Lit4LmA4LiB4Liy4Liw4Lig4Li54LmA4LiC4Liy4LmE4LifPENvbG9yPS8+IikgZW5kICBpZiBnYW1lLldvcmtzcGFjZS5fV29ybGRPcmlnaW4uTG9jYXRpb25zOkZpbmRGaXJzdENoaWxkKCdNaXJhZ2UgSXNsYW5kJykgdGhlbiBWZWMoIjxDb2xvcj1DeWFuPkZvdW5kIE1pcmFnZSBJc2xhbmRcbuC5gOC4iOC4reC5gOC4geC4suC4sOC4peC4seC4mjxDb2xvcj0vPiIpIGVuZCBpZiAgZ2FtZS5Xb3Jrc3BhY2UuX1dvcmxkT3JpZ2luLkxvY2F0aW9uczpGaW5kRmlyc3RDaGlsZCgnS2l0c3VuZSBJc2xhbmQnKSB0aGVuIFZlYygiPENvbG9yPUN5YW4+Rm91bmQgS2l0c3VuZUlzbGFuZFxu4LmA4LiI4Lit4LmA4LiB4Liy4Liw4LiI4Li04LmJ4LiH4LiI4Lit4LiBPENvbG9yPS8+IikgZW5kIGJyZWFrIGVuZApsb2NhbCBkaXN0YW5jZSA9ICh2ZWhpY2xlU2VhdC5Qb3NpdGlvbiAtIHBvcy5Qb3NpdGlvbikuTWFnbml0dWRlCmlmIGRpc3RhbmNlID4gMTAgdGhlbgpsb2NhbCBib2F0VHdlZW4gPSBUUEIocG9zLCB2ZWhpY2xlU2VhdCkKcmVwZWF0IHdhaXQoKSB1bnRpbCAodmVoaWNsZVNlYXQuUG9zaXRpb24gLSBwb3MuUG9zaXRpb24pLk1hZ25pdHVkZSA8PSAxMCBvciBub3QgX0cuQXV0b0ZpbmRJc2xhbmQKaWYgYm9hdFR3ZWVuIHRoZW4gYm9hdFR3ZWVuOlN0b3AoKSBlbmQKZW5kCmVuZAplbmQKZW5kCmVuZAplbmQKZW5kKQplbmQKZW5kCmVuZCkKcGFnZTE0OlRvZ2dsZSgiQXV0byBTZWEgQmVhc3RcbuC4reC4reC5guC4leC5ieC4leC4teC5gOC4iOC5ieC4suC4l+C4sOC5gOC4pSIsIGZhbHNlLCBmdW5jdGlvbih2YWx1ZSkKX0cuQXV0b1NlYWJlc3RGYXJtID0gdmFsdWUKX0cuTm9jbGlwcm9jayA9IHZhbHVlCmlmIHZhbHVlID09IGZhbHNlIHRoZW4KdG9UYXJnZXQoZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lKQplbmQKZW5kKQpsb2NhbCBhY3RpdmVUd2VlbnMgPSB7fQpwYWdlMTQ6VG9nZ2xlKCJBdXRvIEZhcm0gU2VhIEV2ZW50XG7guK3guK3guYLguJXguYnguJ/guLLguKPguYzguKHguK3guLXguYDguKfguYnguJnguJfguLDguYDguKUiLCBmYWxzZSwgZnVuY3Rpb24odmFsdWUpCl9HLmZhcm1zZWFldmVudCA9IHZhbHVlCl9HLk5vY2xpcHJvY2sgPSB2YWx1ZQpfRy5XYWxrV2F0ZXIgPSB2YWx1ZQppZiB2YWx1ZSA9PSBmYWxzZSB0aGVuCnRvVGFyZ2V0KGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSkKZW5kCmVuZCkKc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB3YWl0KCkgZG8KaWYgX0cuZmFybXNlYWV2ZW50IGFuZCBTZWxlY3RCb2F0IHRoZW4KcGNhbGwoZnVuY3Rpb24oKQpsb2NhbCBwbGF5ZXIgPSBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIKbG9jYWwgY2hhcmFjdGVyID0gcGxheWVyLkNoYXJhY3Rlcgpsb2NhbCBib2F0ID0gZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5Cb2F0czpGaW5kRmlyc3RDaGlsZChTZWxlY3RCb2F0KQppZiBjaGFyYWN0ZXIgYW5kIGNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgY2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikgdGhlbgppZiBub3QgKGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpGaW5kRmlyc3RDaGlsZCgiU2hhcmsiKSBvciBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLkVuZW1pZXM6RmluZEZpcnN0Q2hpbGQoIlRlcnJvcnNoYXJrIikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkZpbmRGaXJzdENoaWxkKCJQaXJhbmhhIikgb3IgZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkZpbmRGaXJzdENoaWxkKCJGaXNoIENyZXcgTWVtYmVyIikpIHRoZW4KaWYgbm90IGJvYXQgb3IgKGJvYXQgYW5kIGJvYXQuT3duZXIuVmFsdWUuTmFtZSB+PSBwbGF5ZXIuTmFtZSkgdGhlbgpsb2NhbCBidXlQb3MgPSBDRnJhbWUubmV3KC0xNjkyNy40NTExNzE4NzUsIDkuMDg2MzYxODg1MDcwOCwgNDMzLjg2NDI4ODMzMDA3ODEpCmxvY2FsIGJ1eVR3ZWVuID0gdG9UYXJnZXQoYnV5UG9zKQppZiAoYnV5UG9zLlBvc2l0aW9uIC0gY2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLk1hZ25pdHVkZSA8PSAxMCB0aGVuCmlmIGJ1eVR3ZWVuIHRoZW4gYnV5VHdlZW46U3RvcCgpIGVuZApnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJCdXlCb2F0IiwgU2VsZWN0Qm9hdCkKZW5kCmVsc2VpZiBib2F0IGFuZCBib2F0Lk93bmVyLlZhbHVlLk5hbWUgPT0gcGxheWVyLk5hbWUgYW5kIGNoYXJhY3Rlci5IdW1hbm9pZC5TaXQgPT0gZmFsc2UgdGhlbgpsb2NhbCB2ZWhpY2xlU2VhdCA9IGJvYXQ6RmluZEZpcnN0Q2hpbGQoIlZlaGljbGVTZWF0IiwgdHJ1ZSkKaWYgdmVoaWNsZVNlYXQgdGhlbgp0b1RhcmdldCh2ZWhpY2xlU2VhdC5DRnJhbWUgKiBDRnJhbWUubmV3KDAsIDEsIDApKQplbmQKZWxzZWlmIGJvYXQgYW5kIGJvYXQuT3duZXIuVmFsdWUuTmFtZSA9PSBwbGF5ZXIuTmFtZSBhbmQgY2hhcmFjdGVyLkh1bWFub2lkLlNpdCA9PSB0cnVlIHRoZW4KbG9jYWwgdmVoaWNsZVNlYXQgPSBib2F0OkZpbmRGaXJzdENoaWxkKCJWZWhpY2xlU2VhdCIsIHRydWUpCmlmIHZlaGljbGVTZWF0IHRoZW4KbG9jYWwgcG9zaXRpb25zID0ge0NGcmFtZS5uZXcoLTQ1MTU1LjA5NzcsIDQuMTgyMDQzNTUsIC02MDAuOTMzODM4LCAwLjA4Mzc2MzY1OSwgLTEuNjU2Njg0OGUtMDUsIDAuOTk2NDg1NjUxLCAwLjAwMDE3ODk3ODEwOSwgMC45OTk5OTk5NCwgMS41ODA1MTg5OGUtMDYsIC0wLjk5NjQ4NTU5MSwgMC4wMDAxNzgyMTY3MzgsIDAuMDgzNzYzNjUxNSksQ0ZyYW1lLm5ldygtNDIyNTAuMjIyNywgLTAuMzIyMTc0NCwgOTI0Ny4wNzcxNSwgLTAuNDU5MTY0NDcsIDYuMzkwNDMyMzZlLTA4LCAwLjg4ODM1MTI2MiwgLTMuMzY3MTE0MjNlLTA4LCAxLCAtOC45MzM5NTY1MWUtMDgsIC0wLjg4ODM1MTI2MiwgLTcuMDkzMzM2MDVlLTA4LCAtMC40NTkxNjQ0Nyl9CmZvciBpLCBwb3MgaW4gaXBhaXJzKHBvc2l0aW9ucykgZG8KaWYgbm90IF9HLmZhcm1zZWFldmVudCB0aGVuIGJyZWFrIGVuZApsb2NhbCBkaXN0YW5jZSA9ICh2ZWhpY2xlU2VhdC5Qb3NpdGlvbiAtIHBvcy5Qb3NpdGlvbikuTWFnbml0dWRlCmlmIGRpc3RhbmNlID4gMTAgdGhlbgpsb2NhbCBib2F0VHdlZW4gPSBUUEIocG9zLCB2ZWhpY2xlU2VhdCkKcmVwZWF0IHdhaXQoKSB1bnRpbCAodmVoaWNsZVNlYXQuUG9zaXRpb24gLSBwb3MuUG9zaXRpb24pLk1hZ25pdHVkZSA8PSAxMCBvciBub3QgX0cuZmFybXNlYWV2ZW50CmlmIGJvYXRUd2VlbiB0aGVuIGJvYXRUd2VlbjpTdG9wKCkgZW5kCmVuZAplbmQKZW5kCmVuZAplbmQKZW5kCmVuZCkKZW5kCmVuZAplbmQpCnNwYXduKGZ1bmN0aW9uKCkKcGNhbGwoZnVuY3Rpb24oKQp3aGlsZSB3YWl0KCkgZG8KaWYgX0cuZmFybXNlYWV2ZW50IHRoZW4KaWYgZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkZpbmRGaXJzdENoaWxkKCJTaGFyayIpIG9yIGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpGaW5kRmlyc3RDaGlsZCgiVGVycm9yc2hhcmsiKSBvciBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLkVuZW1pZXM6RmluZEZpcnN0Q2hpbGQoIlBpcmFuaGEiKSBvciBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLkVuZW1pZXM6RmluZEZpcnN0Q2hpbGQoIkZpc2ggQ3JldyBNZW1iZXIiKSB0aGVuCmdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWQuU2l0ID0gZmFsc2UKZW5kCmVuZAplbmQKZW5kKQplbmQpCnBhZ2UxNDpUb2dnbGUoIkJ1eUJvYXRcbuC4i+C4t+C5ieC4reC5gOC4o+C4t+C4rSIsIGZhbHNlLCBmdW5jdGlvbih2YWx1ZSkKX0cuQnV5Qm9hdCA9IHZhbHVlCmVuZCkKc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB3YWl0KCkgZG8KaWYgX0cuQnV5Qm9hdCBhbmQgU2VsZWN0Qm9hdCB0aGVuCnBjYWxsKGZ1bmN0aW9uKCkKbG9jYWwgcGxheWVyID0gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyCmxvY2FsIGNoYXJhY3RlciA9IHBsYXllci5DaGFyYWN0ZXIKbG9jYWwgYm9hdCA9IGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuQm9hdHM6RmluZEZpcnN0Q2hpbGQoU2VsZWN0Qm9hdCkKaWYgY2hhcmFjdGVyIGFuZCBjaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkIikgYW5kIGNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpIHRoZW4KaWYgbm90IGJvYXQgb3IgKGJvYXQgYW5kIGJvYXQuT3duZXIuVmFsdWUuTmFtZSB+PSBwbGF5ZXIuTmFtZSkgdGhlbgpsb2NhbCBidXlQb3MgPSBDRnJhbWUubmV3KC0xNjkyNy40NTExNzE4NzUsIDkuMDg2MzYxODg1MDcwOCwgNDMzLjg2NDI4ODMzMDA3ODEpCmxvY2FsIGJ1eVR3ZWVuID0gdG9UYXJnZXQoYnV5UG9zKQppZiAoYnV5UG9zLlBvc2l0aW9uIC0gY2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLk1hZ25pdHVkZSA8PSAxMCB0aGVuCmlmIGJ1eVR3ZWVuIHRoZW4gYnV5VHdlZW46U3RvcCgpIGVuZApnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJCdXlCb2F0IiwgU2VsZWN0Qm9hdCkKZW5kCmVsc2VpZiBib2F0IGFuZCBib2F0Lk93bmVyLlZhbHVlLk5hbWUgPT0gcGxheWVyLk5hbWUgYW5kIGNoYXJhY3Rlci5IdW1hbm9pZC5TaXQgPT0gZmFsc2UgdGhlbgpsb2NhbCB2ZWhpY2xlU2VhdCA9IGJvYXQ6RmluZEZpcnN0Q2hpbGQoIlZlaGljbGVTZWF0IiwgdHJ1ZSkKaWYgdmVoaWNsZVNlYXQgdGhlbgp0b1RhcmdldCh2ZWhpY2xlU2VhdC5DRnJhbWUgKiBDRnJhbWUubmV3KDAsIDEsIDApKQplbmQKZW5kCmVuZAplbmQpCmVuZAplbmQKZW5kKQpwYWdlMTQ6U2VwZXJhdG9yKCJFbmVtaWVzU2VsZWN0L+C5gOC4peC4t+C4reC4geC4qOC4seC4leC4o+C4uSIpCnBhZ2UxNDpUb2dnbGUoIlRlcnJvciBTaGFya1xu4Lia4Lit4Liq4LiJ4Lil4Liy4LihIiwgZmFsc2UsIGZ1bmN0aW9uKHZhbHVlKQpfRy5BdXRvVGVycm9yc2hhcmsgPSB2YWx1ZQppZiB2YWx1ZSA9PSBmYWxzZSB0aGVuCnRvVGFyZ2V0KGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSkKZW5kCmVuZCkKc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB3YWl0KCkgZG8KaWYgIF9HLkF1dG9UZXJyb3JzaGFyayAgdGhlbgpwY2FsbChmdW5jdGlvbigpCmlmIGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpGaW5kRmlyc3RDaGlsZCgiVGVycm9yc2hhcmsiKSB0aGVuCmZvciBpLHYgaW4gcGFpcnMoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkdldENoaWxkcmVuKCkpIGRvCmlmIHYuTmFtZSA9PSAiVGVycm9yc2hhcmsiIHRoZW4KaWYgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgdjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpIGFuZCAodi5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uIC0gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKS5tYWduaXR1ZGUgPD0gMjAwIGFuZCB2Lkh1bWFub2lkLkhlYWx0aCA+IDAgdGhlbgpfRy5uY3AgPSB0cnVlCnJlcGVhdCB0YXNrLndhaXQoKQpFcXVpcFdlYXBvbihfRy5TZWxlY3RXZWFwb24pCnRvVGFyZ2V0KHYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgKiBNZXRob2RGYXJtKQpnYW1lOkdldFNlcnZpY2UoIlZpcnR1YWxVc2VyIik6Q2FwdHVyZUNvbnRyb2xsZXIoKQpnYW1lOkdldFNlcnZpY2UoIlZpcnR1YWxVc2VyIik6QnV0dG9uMURvd24oVmVjdG9yMi5uZXcoMTI4MCw2NzIpKQp1bnRpbCBub3QgIF9HLkF1dG9UZXJyb3JzaGFyayBvciBub3Qgdi5QYXJlbnQgb3Igdi5IdW1hbm9pZC5IZWFsdGggPD0gMAppZiB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZCIpIGFuZCB2Lkh1bWFub2lkLlZhbHVlIDw9IDAgdGhlbgp2OkRlc3Ryb3koKQpfRy5uY3AgPSBmYWxzZQplbmQKZW5kCmVuZAplbmQKZWxzZQppZiBnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIik6RmluZEZpcnN0Q2hpbGQoIlRlcnJvcnNoYXJrIikgdGhlbgp0b1RhcmdldChnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIik6RmluZEZpcnN0Q2hpbGQoIlRlcnJvcnNoYXJrIikuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgKiBDRnJhbWUubmV3KDIsMjAsMikpCl9HLm5jcCA9IHRydWUKZWxzZQpfRy5uY3AgPSBmYWxzZQppZiAgX0cuQXV0b1RlcnJvcnNoYXJraG9wIHRoZW4KSG9wKCkKZW5kCmVuZAplbmQKZW5kKQplbmQKZW5kCmVuZCkKcGFnZTE0OlRvZ2dsZSgiU2hhcmtcbuC4ieC4peC4suC4oSIsIGZhbHNlLCBmdW5jdGlvbih2YWx1ZSkKRmFybVNoYXJrID0gdmFsdWUKaWYgdmFsdWUgPT0gZmFsc2UgdGhlbgp0b1RhcmdldChnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUpCmVuZAplbmQpCnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgd2FpdCgpIGRvCmlmICBGYXJtU2hhcmsgYW5kIFdvcmxkMyB0aGVuCnBjYWxsKGZ1bmN0aW9uKCkKaWYgZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkZpbmRGaXJzdENoaWxkKCJTaGFyayIpIHRoZW4KZm9yIGksdiBpbiBwYWlycyhnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLkVuZW1pZXM6R2V0Q2hpbGRyZW4oKSkgZG8KaWYgdi5OYW1lID09ICJTaGFyayIgdGhlbgppZiB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZCIpIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikgYW5kICh2Lkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24gLSBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLm1hZ25pdHVkZSA8PSAyMDAgYW5kIHYuSHVtYW5vaWQuSGVhbHRoID4gMCB0aGVuCl9HLm5jcCA9IHRydWUKcmVwZWF0IHRhc2sud2FpdCgpCkVxdWlwV2VhcG9uKF9HLlNlbGVjdFdlYXBvbikKdG9UYXJnZXQodi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSAqIE1ldGhvZEZhcm0pCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbFVzZXIiKTpDYXB0dXJlQ29udHJvbGxlcigpCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbFVzZXIiKTpCdXR0b24xRG93bihWZWN0b3IyLm5ldygxMjgwLDY3MikpCnVudGlsIG5vdCAgRmFybVNoYXJrIG9yIG5vdCB2LlBhcmVudCBvciB2Lkh1bWFub2lkLkhlYWx0aCA8PSAwCmlmIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkIikgYW5kIHYuSHVtYW5vaWQuVmFsdWUgPD0gMCB0aGVuCnY6RGVzdHJveSgpCl9HLm5jcCA9IGZhbHNlCmVuZAplbmQKZW5kCmVuZAplbHNlCmlmIGdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKTpGaW5kRmlyc3RDaGlsZCgiVGVycm9yc2hhcmsiKSB0aGVuCnRvVGFyZ2V0KGdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKTpGaW5kRmlyc3RDaGlsZCgiVGVycm9yc2hhcmsiKS5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSAqIENGcmFtZS5uZXcoMiwyMCwyKSkKX0cubmNwID0gdHJ1ZQplbHNlCl9HLm5jcCA9IGZhbHNlCmlmICBfRy5BdXRvVGVycm9yc2hhcmtob3AgdGhlbgpIb3AoKQplbmQKZW5kCmVuZAplbmQpCmVuZAplbmQKZW5kKQpwYWdlMTQ6VG9nZ2xlKCJQaXJhbmhhXG7guJvguLTguKPguLHguJnguKLguYjguLIiLCBmYWxzZSwgZnVuY3Rpb24odmFsdWUpCl9HLmZhcm1waXJhbnlhID0gdmFsdWUKaWYgdmFsdWUgPT0gZmFsc2UgdGhlbgp0b1RhcmdldChnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUpCmVuZAplbmQpCnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgd2FpdCgpIGRvCmlmICBfRy5mYXJtcGlyYW55YSAgdGhlbgpwY2FsbChmdW5jdGlvbigpCmlmIGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuRW5lbWllczpGaW5kRmlyc3RDaGlsZCgiUGlyYW5oYSIpIHRoZW4KZm9yIGksdiBpbiBwYWlycyhnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLkVuZW1pZXM6R2V0Q2hpbGRyZW4oKSkgZG8KaWYgdi5OYW1lID09ICJQaXJhbmhhIiB0aGVuCmlmIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkIikgYW5kIHY6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKSBhbmQgKHYuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbiAtIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikubWFnbml0dWRlIDw9IDIwMCBhbmQgdi5IdW1hbm9pZC5IZWFsdGggPiAwIHRoZW4KX0cubmNwID0gdHJ1ZQpyZXBlYXQgdGFzay53YWl0KCkKRXF1aXBXZWFwb24oX0cuU2VsZWN0V2VhcG9uKQp0b1RhcmdldCh2Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lICogTWV0aG9kRmFybSkKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsVXNlciIpOkNhcHR1cmVDb250cm9sbGVyKCkKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsVXNlciIpOkJ1dHRvbjFEb3duKFZlY3RvcjIubmV3KDEyODAsNjcyKSkKdW50aWwgbm90ICBfRy5mYXJtcGlyYW55YSBvciBub3Qgdi5QYXJlbnQgb3Igdi5IdW1hbm9pZC5IZWFsdGggPD0gMAppZiB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZCIpIGFuZCB2Lkh1bWFub2lkLlZhbHVlIDw9IDAgdGhlbgp2OkRlc3Ryb3koKQpfRy5uY3AgPSBmYWxzZQplbmQKZW5kCmVuZAplbmQKZWxzZQppZiBnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIik6RmluZEZpcnN0Q2hpbGQoIlBpcmFuaGEiKSB0aGVuCnRvVGFyZ2V0KGdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKTpGaW5kRmlyc3RDaGlsZCgiUGlyYW5oYSIpLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lICogQ0ZyYW1lLm5ldygyLDIwLDIpKQpfRy5uY3AgPSB0cnVlCmVsc2UKX0cubmNwID0gZmFsc2UKaWYgIF9HLkF1dG9UZXJyb3JzaGFya2hvcCB0aGVuCkhvcCgpCmVuZAplbmQKZW5kCmVuZCkKZW5kCmVuZAplbmQpCnBhZ2UxNDpUb2dnbGUoIkZpc2ggQ3JldyBNZW1iZXJcbuC4quC4oeC4suC4iuC4tOC4geC4peC4ueC4geC5gOC4o+C4t+C4reC4oeC4meC4uOC4qeC4ouC5jOC5gOC4h+C4t+C4reC4gSIsIGZhbHNlLCBmdW5jdGlvbih2YWx1ZSkKX0cuRmlzaF9DcmV3X01lbWJlciA9IHZhbHVlCmlmIHZhbHVlID09IGZhbHNlIHRoZW4KdG9UYXJnZXQoZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lKQplbmQKZW5kKQpzcGF3bihmdW5jdGlvbigpCndoaWxlIHdhaXQoKSBkbwppZiAgX0cuRmlzaF9DcmV3X01lbWJlciBhbmQgV29ybGQzIHRoZW4KcGNhbGwoZnVuY3Rpb24oKQppZiBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLkVuZW1pZXM6RmluZEZpcnN0Q2hpbGQoIkZpc2ggQ3JldyBNZW1iZXIiKSB0aGVuCmZvciBpLHYgaW4gcGFpcnMoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5FbmVtaWVzOkdldENoaWxkcmVuKCkpIGRvCmlmIHYuTmFtZSA9PSAiRmlzaCBDcmV3IE1lbWJlciIgdGhlbgppZiB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZCIpIGFuZCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikgYW5kICh2Lkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24gLSBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLm1hZ25pdHVkZSA8PSAyMDAgYW5kIHYuSHVtYW5vaWQuSGVhbHRoID4gMCB0aGVuCl9HLm5jcCA9IHRydWUKcmVwZWF0IHRhc2sud2FpdCgpCkVxdWlwV2VhcG9uKF9HLlNlbGVjdFdlYXBvbikKdG9UYXJnZXQodi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSAqIE1ldGhvZEZhcm0pCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbFVzZXIiKTpDYXB0dXJlQ29udHJvbGxlcigpCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbFVzZXIiKTpCdXR0b24xRG93bihWZWN0b3IyLm5ldygxMjgwLDY3MikpCnVudGlsIG5vdCAgX0cuRmlzaF9DcmV3X01lbWJlciBvciBub3Qgdi5QYXJlbnQgb3Igdi5IdW1hbm9pZC5IZWFsdGggPD0gMAppZiB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZCIpIGFuZCB2Lkh1bWFub2lkLlZhbHVlIDw9IDAgdGhlbgp2OkRlc3Ryb3koKQpfRy5uY3AgPSBmYWxzZQplbmQKZW5kCmVuZAplbmQKZWxzZQppZiBnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIik6RmluZEZpcnN0Q2hpbGQoIkZpc2ggQ3JldyBNZW1iZXIiKSB0aGVuCnRvVGFyZ2V0KGdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKTpGaW5kRmlyc3RDaGlsZCgiRmlzaCBDcmV3IE1lbWJlciIpLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lICogQ0ZyYW1lLm5ldygyLDIwLDIpKQpfRy5uY3AgPSB0cnVlCmVsc2UKX0cubmNwID0gZmFsc2UKaWYgIF9HLkF1dG9UZXJyb3JzaGFya2hvcCB0aGVuCkhvcCgpCmVuZAplbmQKZW5kCmVuZCkKZW5kCmVuZAplbmQpCnBhZ2UxNDpUb2dnbGUoIlJhaWQgU2hpcFxu4Lil4Li54LiB4LmA4Lij4Li34LitIiwgZmFsc2UsIGZ1bmN0aW9uKHZhbHVlKQpfRy5LaWxsR2hvc3RTaGlwID0gdmFsdWUKaWYgdmFsdWUgPT0gZmFsc2UgdGhlbgp0b1RhcmdldChnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUpCmVuZAplbmQpCnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgd2FpdCgpIGRvCmlmIF9HLktpbGxHaG9zdFNoaXAgdGhlbgpwY2FsbChmdW5jdGlvbigpCmlmIENoZWNrUGlyYXRlQm9hdCgpIHRoZW4KZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsSW5wdXRNYW5hZ2VyIik6U2VuZEtleUV2ZW50KHRydWUsMzIsZmFsc2UsZ2FtZSkKd2FpdCguNSkKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsSW5wdXRNYW5hZ2VyIik6U2VuZEtleUV2ZW50KGZhbHNlLDMyLGZhbHNlLGdhbWUpCmxvY2FsIHYgPSBDaGVja1BpcmF0ZUJvYXQoKQpyZXBlYXQKd2FpdCgpCnNwYXduKHRvVGFyZ2V0KHYuRW5naW5lLkNGcmFtZSAqIENGcmFtZS5uZXcoMCwgLTIwLCAwKSksIDEpCkFpbUJvdFNraWxsUG9zaXRpb24gPSBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lICogQ0ZyYW1lLm5ldygwLCAtNSwgMCkKX0cubmNwID0gdHJ1ZQpTa2lsbGFpbWJvdCA9IHRydWUKX0cuVXNlc2tpbGwgPSBmYWxzZQp1bnRpbCBub3QgdiBvciBub3Qgdi5QYXJlbnQgb3Igdi5IZWFsdGguVmFsdWUgPD0gMCBvciBub3QgQ2hlY2tQaXJhdGVCb2F0KCkKU2tpbGxhaW1ib3QgPSB0cnVlCl9HLlVzZXNraWxsID0gZmFsc2UKX0cubmNwID0gZmFsc2UKZW5kCmVuZCkKZW5kCmVuZAplbmQpCnBhZ2UxNDpUb2dnbGUoIkdob3N0IFNoaXBcbuC5gOC4o+C4t+C4reC4nOC4tSIsIGZhbHNlLCBmdW5jdGlvbih2YWx1ZSkKX0cuYmppckZpc2hCb2F0ID0gdmFsdWUKaWYgdmFsdWUgPT0gZmFsc2UgdGhlbgp0b1RhcmdldChnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUpCmVuZAplbmQpCnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgd2FpdCgpIGRvCnBjYWxsKGZ1bmN0aW9uKCkKaWYgX0cuYmppckZpc2hCb2F0IHRoZW4KaWYgQ2hlY2tQaXJhdGVCb2F0KCkgdGhlbgpnYW1lOkdldFNlcnZpY2UoIlZpcnR1YWxJbnB1dE1hbmFnZXIiKTpTZW5kS2V5RXZlbnQodHJ1ZSwgMzIsIGZhbHNlLCBnYW1lKQp3YWl0KDAuNSkKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsSW5wdXRNYW5hZ2VyIik6U2VuZEtleUV2ZW50KGZhbHNlLCAzMiwgZmFsc2UsIGdhbWUpCmxvY2FsIHYgPSBDaGVja1BpcmF0ZUJvYXQoKQpyZXBlYXQKd2FpdCgpCnNwYXduKHRvVGFyZ2V0KHYuRW5naW5lLkNGcmFtZSAqIENGcmFtZS5uZXcoMCwgLTIwLCAwKSwgMSkpCl9HLm5jcCA9IHRydWUKX0cuVXNlc2tpbGwgPSB0cnVlClNraWxsYWltYm90ID0gdHJ1ZQpBaW1Cb3RTa2lsbFBvc2l0aW9uID0gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSAqIENGcmFtZS5uZXcoMCwgLTUsIDApCnVudGlsIHYuUGFyZW50IG9yIHYuSGVhbHRoLlZhbHVlIDw9IDAgb3Igbm90IENoZWNrUGlyYXRlQm9hdCgpCl9HLlVzZXNraWxsID0gZmFsc2UKX0cubmNwID0gZmFsc2UKU2tpbGxhaW1ib3QgPSBmYWxzZQplbmQKZW5kCmVuZCkKZW5kCmVuZCkKc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB3YWl0KCkgZG8KaWYgX0cuYmppckZpc2hCb2F0IHRoZW4KcGNhbGwoZnVuY3Rpb24oKQppZiBDaGVja1BpcmF0ZUJvYXQoKSB0aGVuCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbFVzZXIiKTpDYXB0dXJlQ29udHJvbGxlcigpCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbFVzZXIiKTpCdXR0b24xRG93bihWZWN0b3IyLm5ldygxMjgwLDY3MikpCmZvciBpLHYgaW4gcGFpcnMoZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkJhY2twYWNrOkdldENoaWxkcmVuKCkpIGRvCmlmIHY6SXNBKCJUb29sIikgdGhlbgppZiB2LlRvb2xUaXAgPT0gIk1lbGVlIiB0aGVuCmdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWQ6RXF1aXBUb29sKHYpCmVuZAplbmQKZW5kCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbElucHV0TWFuYWdlciIpOlNlbmRLZXlFdmVudCh0cnVlLDEyMixmYWxzZSxnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQpCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbElucHV0TWFuYWdlciIpOlNlbmRLZXlFdmVudChmYWxzZSwxMjIsZmFsc2UsZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0KQp3YWl0KC4yKQpnYW1lOkdldFNlcnZpY2UoIlZpcnR1YWxJbnB1dE1hbmFnZXIiKTpTZW5kS2V5RXZlbnQodHJ1ZSwxMjAsZmFsc2UsZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0KQpnYW1lOkdldFNlcnZpY2UoIlZpcnR1YWxJbnB1dE1hbmFnZXIiKTpTZW5kS2V5RXZlbnQoZmFsc2UsMTIwLGZhbHNlLGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydCkKd2FpdCguMikKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsSW5wdXRNYW5hZ2VyIik6U2VuZEtleUV2ZW50KHRydWUsOTksZmFsc2UsZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0KQpnYW1lOkdldFNlcnZpY2UoIlZpcnR1YWxJbnB1dE1hbmFnZXIiKTpTZW5kS2V5RXZlbnQoZmFsc2UsOTksZmFsc2UsZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0KQp3YWl0KC4yKQpnYW1lOkdldFNlcnZpY2UoIlZpcnR1YWxJbnB1dE1hbmFnZXIiKTpTZW5kS2V5RXZlbnQoZmFsc2UsIkMiLGZhbHNlLGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydCkKZm9yIGksdiBpbiBwYWlycyhnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQmFja3BhY2s6R2V0Q2hpbGRyZW4oKSkgZG8KaWYgdjpJc0EoIlRvb2wiKSB0aGVuCmlmIHYuVG9vbFRpcCA9PSAiQmxveCBGcnVpdCIgdGhlbgpnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkOkVxdWlwVG9vbCh2KQplbmQKZW5kCmVuZApnYW1lOkdldFNlcnZpY2UoIlZpcnR1YWxJbnB1dE1hbmFnZXIiKTpTZW5kS2V5RXZlbnQodHJ1ZSwxMjIsZmFsc2UsZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0KQpnYW1lOkdldFNlcnZpY2UoIlZpcnR1YWxJbnB1dE1hbmFnZXIiKTpTZW5kS2V5RXZlbnQoZmFsc2UsMTIyLGZhbHNlLGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydCkKd2FpdCguMikKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsSW5wdXRNYW5hZ2VyIik6U2VuZEtleUV2ZW50KHRydWUsMTIwLGZhbHNlLGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydCkKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsSW5wdXRNYW5hZ2VyIik6U2VuZEtleUV2ZW50KGZhbHNlLDEyMCxmYWxzZSxnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQpCndhaXQoLjIpCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbElucHV0TWFuYWdlciIpOlNlbmRLZXlFdmVudCh0cnVlLDk5LGZhbHNlLGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydCkKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsSW5wdXRNYW5hZ2VyIik6U2VuZEtleUV2ZW50KGZhbHNlLDk5LGZhbHNlLGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydCkKd2FpdCguMikKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsSW5wdXRNYW5hZ2VyIik6U2VuZEtleUV2ZW50KHRydWUsIlYiLGZhbHNlLGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydCkKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsSW5wdXRNYW5hZ2VyIik6U2VuZEtleUV2ZW50KGZhbHNlLCJWIixmYWxzZSxnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQpCndhaXQoMC42KQpmb3IgaSx2IGluIHBhaXJzKGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5CYWNrcGFjazpHZXRDaGlsZHJlbigpKSBkbwppZiB2OklzQSgiVG9vbCIpIHRoZW4KaWYgdi5Ub29sVGlwID09ICJTd29yZCIgdGhlbgpnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkOkVxdWlwVG9vbCh2KQplbmQKZW5kCmVuZApnYW1lOkdldFNlcnZpY2UoIlZpcnR1YWxJbnB1dE1hbmFnZXIiKTpTZW5kS2V5RXZlbnQodHJ1ZSwxMjIsZmFsc2UsZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0KQpnYW1lOkdldFNlcnZpY2UoIlZpcnR1YWxJbnB1dE1hbmFnZXIiKTpTZW5kS2V5RXZlbnQoZmFsc2UsMTIyLGZhbHNlLGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydCkKd2FpdCguMikKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsSW5wdXRNYW5hZ2VyIik6U2VuZEtleUV2ZW50KHRydWUsMTIwLGZhbHNlLGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydCkKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsSW5wdXRNYW5hZ2VyIik6U2VuZEtleUV2ZW50KGZhbHNlLDEyMCxmYWxzZSxnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQpCndhaXQoLjIpCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbElucHV0TWFuYWdlciIpOlNlbmRLZXlFdmVudCh0cnVlLDk5LGZhbHNlLGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydCkKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsSW5wdXRNYW5hZ2VyIik6U2VuZEtleUV2ZW50KGZhbHNlLDk5LGZhbHNlLGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydCkKd2FpdCgwLjUpCmZvciBpLHYgaW4gcGFpcnMoZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkJhY2twYWNrOkdldENoaWxkcmVuKCkpIGRvCmlmIHY6SXNBKCJUb29sIikgdGhlbgppZiB2LlRvb2xUaXAgPT0gIkd1biIgdGhlbgpnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkOkVxdWlwVG9vbCh2KQplbmQKZW5kCmVuZApnYW1lOkdldFNlcnZpY2UoIlZpcnR1YWxJbnB1dE1hbmFnZXIiKTpTZW5kS2V5RXZlbnQodHJ1ZSwxMjIsZmFsc2UsZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0KQpnYW1lOkdldFNlcnZpY2UoIlZpcnR1YWxJbnB1dE1hbmFnZXIiKTpTZW5kS2V5RXZlbnQoZmFsc2UsMTIyLGZhbHNlLGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydCkKd2FpdCguMikKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsSW5wdXRNYW5hZ2VyIik6U2VuZEtleUV2ZW50KHRydWUsMTIwLGZhbHNlLGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydCkKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsSW5wdXRNYW5hZ2VyIik6U2VuZEtleUV2ZW50KGZhbHNlLDEyMCxmYWxzZSxnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQpCndhaXQoLjIpCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbElucHV0TWFuYWdlciIpOlNlbmRLZXlFdmVudCh0cnVlLDk5LGZhbHNlLGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydCkKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsSW5wdXRNYW5hZ2VyIik6U2VuZEtleUV2ZW50KGZhbHNlLDk5LGZhbHNlLGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydCkKZW5kCmVuZCkKZW5kCmVuZAplbmQpCmxvY2FsIGdnID0gZ2V0cmF3bWV0YXRhYmxlKGdhbWUpCmxvY2FsIG9sZCA9IGdnLl9fbmFtZWNhbGwKc2V0cmVhZG9ubHkoZ2csZmFsc2UpCmdnLl9fbmFtZWNhbGwgPSBuZXdjY2xvc3VyZShmdW5jdGlvbiguLi4pCmxvY2FsIG1ldGhvZCA9IGdldG5hbWVjYWxsbWV0aG9kKCkKbG9jYWwgYXJncyA9IHsuLi59CmlmIHRvc3RyaW5nKG1ldGhvZCkgPT0gIkZpcmVTZXJ2ZXIiIHRoZW4KaWYgdG9zdHJpbmcoYXJnc1sxXSkgPT0gIlJlbW90ZUV2ZW50IiB0aGVuCmlmIHRvc3RyaW5nKGFyZ3NbMl0pIH49ICJ0cnVlIiBhbmQgdG9zdHJpbmcoYXJnc1syXSkgfj0gImZhbHNlIiB0aGVuCmlmIFNraWxsYWltYm90IHRoZW4KYXJnc1syXSA9IEFpbUJvdFNraWxsUG9zaXRpb24KcmV0dXJuIG9sZCh1bnBhY2soYXJncykpCmVuZAplbmQKZW5kCmVuZApyZXR1cm4gb2xkKC4uLikKZW5kKQpzcGF3bihmdW5jdGlvbigpCndoaWxlIHdhaXQoKSBkbwppZiBfRy5BdXRvU2VhYmVzdEZhcm0gYW5kIFNlbGVjdEJvYXQgdGhlbgpwY2FsbChmdW5jdGlvbigpCmxvY2FsIHBsYXllciA9IGdhbWUuUGxheWVycy5Mb2NhbFBsYXllcgpsb2NhbCBjaGFyYWN0ZXIgPSBwbGF5ZXIuQ2hhcmFjdGVyCmxvY2FsIGJvYXQgPSBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLkJvYXRzOkZpbmRGaXJzdENoaWxkKFNlbGVjdEJvYXQpCmlmIGNoYXJhY3RlciBhbmQgY2hhcmFjdGVyOkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZCIpIGFuZCBjaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKSB0aGVuCmlmIG5vdCBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLlNlYUJlYXN0czpGaW5kRmlyc3RDaGlsZCgiU2VhQmVhc3QiKSBvciBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLlNlYUJlYXN0czpGaW5kRmlyc3RDaGlsZCgiU2VhQmVhc3QxIikgdGhlbgppZiBub3QgYm9hdCBvciAoYm9hdCBhbmQgYm9hdC5Pd25lci5WYWx1ZS5OYW1lIH49IHBsYXllci5OYW1lKSB0aGVuCmxvY2FsIGJ1eVBvcyA9IENGcmFtZS5uZXcoLTE2OTI3LjQ1MTE3MTg3NSwgOS4wODYzNjE4ODUwNzA4LCA0MzMuODY0Mjg4MzMwMDc4MSkKbG9jYWwgYnV5VHdlZW4gPSB0b1RhcmdldChidXlQb3MpCmlmIChidXlQb3MuUG9zaXRpb24gLSBjaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikuTWFnbml0dWRlIDw9IDEwIHRoZW4KaWYgYnV5VHdlZW4gdGhlbiBidXlUd2VlbjpTdG9wKCkgZW5kCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkJ1eUJvYXQiLCBTZWxlY3RCb2F0KQplbmQKZWxzZWlmIGJvYXQgYW5kIGJvYXQuT3duZXIuVmFsdWUuTmFtZSA9PSBwbGF5ZXIuTmFtZSBhbmQgY2hhcmFjdGVyLkh1bWFub2lkLlNpdCA9PSBmYWxzZSB0aGVuCmxvY2FsIHZlaGljbGVTZWF0ID0gYm9hdDpGaW5kRmlyc3RDaGlsZCgiVmVoaWNsZVNlYXQiLCB0cnVlKQppZiB2ZWhpY2xlU2VhdCB0aGVuCnRvVGFyZ2V0KHZlaGljbGVTZWF0LkNGcmFtZSAqIENGcmFtZS5uZXcoMCwgMSwgMCkpCmVuZAplbHNlaWYgYm9hdCBhbmQgYm9hdC5Pd25lci5WYWx1ZS5OYW1lID09IHBsYXllci5OYW1lIGFuZCBjaGFyYWN0ZXIuSHVtYW5vaWQuU2l0ID09IHRydWUgdGhlbgpsb2NhbCB2ZWhpY2xlU2VhdCA9IGJvYXQ6RmluZEZpcnN0Q2hpbGQoIlZlaGljbGVTZWF0IiwgdHJ1ZSkKaWYgdmVoaWNsZVNlYXQgdGhlbgpsb2NhbCBwb3NpdGlvbnMgPSB7Q0ZyYW1lLm5ldygtNDUxNTUuMDk3NywgNC4xODIwNDM1NSwgLTYwMC45MzM4MzgsIDAuMDgzNzYzNjU5LCAtMS42NTY2ODQ4ZS0wNSwgMC45OTY0ODU2NTEsIDAuMDAwMTc4OTc4MTA5LCAwLjk5OTk5OTk0LCAxLjU4MDUxODk4ZS0wNiwgLTAuOTk2NDg1NTkxLCAwLjAwMDE3ODIxNjczOCwgMC4wODM3NjM2NTE1KSxDRnJhbWUubmV3KC00MjI1MC4yMjI3LCAtMC4zMjIxNzQ0LCA5MjQ3LjA3NzE1LCAtMC40NTkxNjQ0NywgNi4zOTA0MzIzNmUtMDgsIDAuODg4MzUxMjYyLCAtMy4zNjcxMTQyM2UtMDgsIDEsIC04LjkzMzk1NjUxZS0wOCwgLTAuODg4MzUxMjYyLCAtNy4wOTMzMzYwNWUtMDgsIC0wLjQ1OTE2NDQ3KX0KZm9yIGksIHBvcyBpbiBpcGFpcnMocG9zaXRpb25zKSBkbwppZiBub3QgX0cuQXV0b1NlYWJlc3RGYXJtIHRoZW4gYnJlYWsgZW5kCmxvY2FsIGRpc3RhbmNlID0gKHZlaGljbGVTZWF0LlBvc2l0aW9uIC0gcG9zLlBvc2l0aW9uKS5NYWduaXR1ZGUKaWYgZGlzdGFuY2UgPiAxMCB0aGVuCmxvY2FsIGJvYXRUd2VlbiA9IFRQQihwb3MsIHZlaGljbGVTZWF0KQpyZXBlYXQgd2FpdCgpIHVudGlsICh2ZWhpY2xlU2VhdC5Qb3NpdGlvbiAtIHBvcy5Qb3NpdGlvbikuTWFnbml0dWRlIDw9IDEwIG9yIG5vdCBfRy5BdXRvU2VhYmVzdEZhcm0KaWYgYm9hdFR3ZWVuIHRoZW4gYm9hdFR3ZWVuOlN0b3AoKSBlbmQKZW5kCmVuZAplbmQKZW5kCmVsc2UKZm9yIGksdiBpbiBwYWlycyhnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLlNlYUJlYXN0czpHZXRDaGlsZHJlbigpKSBkbwppZiB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikgdGhlbgpyZXBlYXQgd2FpdCgpCmdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXI6V2FpdEZvckNoaWxkKCJIdW1hbm9pZCIpLlNpdCA9IGZhbHNlCnRvVGFyZ2V0KHYuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgKiBDRnJhbWUubmV3KDAsNTAwLDApKQpFcXVpcEFsbFdlYXBvbigpCl9HLlVzZXNraWxsID0gdHJ1ZQpfRy5uY3AgPSB0cnVlCkFpbUJvdFNraWxsUG9zaXRpb24gPSB2Lkh1bWFub2lkUm9vdFBhcnQKU2tpbGxhaW1ib3QgPSB0cnVlCnVudGlsIG5vdCB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0Iikgb3IgX0cuQXV0b1NlYWJlc3RGYXJtID09IGZhbHNlCl9HLlVzZXNraWxsID0gZmFsc2UKX0cubmNwID0gZmFsc2UKU2tpbGxhaW1ib3QgPSBmYWxzZQplbmQKZW5kCmVuZAplbmQKZW5kKQplbmQKZW5kCmVuZCkKcGFnZTE0OlRvZ2dsZSgiVGVsZXBvcnQgVG8gU2VhIEJlYXN0XG7guYDguJfguYDguKXguJ7guK3guKPguYzguJXguYTguJvguKvguLLguYDguIjguYnguLLguJfguLDguYDguKUiLCBmYWxzZSwgZnVuY3Rpb24odmFsdWUpCl9HLkF1dG9TZWFCZXN0ID0gdmFsdWUKZW5kKQpzcGF3bihmdW5jdGlvbigpCndoaWxlIHdhaXQoKSBkbwppZiBfRy5BdXRvU2VhQmVzdCB0aGVuCnBjYWxsKGZ1bmN0aW9uKCkKZm9yIGksdiBpbiBwYWlycyhnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLlNlYUJlYXN0czpHZXRDaGlsZHJlbigpKSBkbwppZiB2OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikgdGhlbgpfRy5uY3AgPSB0cnVlCkVxdWlwV2VhcG9uKF9HLlNlbGVjdFdlYXBvbikKdG9UYXJnZXQodi5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSAqIENGcmFtZS5uZXcoMCwzMDAsMCkpCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbFVzZXIiKTpDYXB0dXJlQ29udHJvbGxlcigpCmdhbWU6R2V0U2VydmljZSgiVmlydHVhbFVzZXIiKTpCdXR0b24xRG93bihWZWN0b3IyLm5ldygxMjgwLDY3MikpCmVsc2UKX0cubmNwID0gZmFsc2UKaWYgX0cuQXV0b1NlYUJlc3RIb3AgdGhlbgpIb3AoKQplbmQKZW5kCmVuZAplbmQpCmVuZAplbmQKZW5kKQpwYWdlMTQ6U2VwZXJhdG9yKCJCb2F0TW9kaWZ5L+C5gOC4o+C4t+C4reC5geC4leC5iOC4hyIpCnBhZ2UxNDpUb2dnbGUoIkluY3JlYXNlQm9hdFNwZWVkXG7guYDguJ7guLTguYjguKHguITguKfguLLguKHguYDguKPguYfguKfguYDguKPguLfguK0iLF9HLmluY3JlYXNlYm9hdHNwZWVkLCBmdW5jdGlvbih2YWx1ZSkKX0cuaW5jcmVhc2Vib2F0c3BlZWQgPSB2YWx1ZQpsb2NhbCB2ZWhpY2xlU2VhdHMgPSB7fQpmb3IgaSwgdiBpbiBwYWlycyhnYW1lLldvcmtzcGFjZS5Cb2F0czpHZXREZXNjZW5kYW50cygpKSBkbwppZiB2OklzQSgiVmVoaWNsZVNlYXQiKSB0aGVuCnRhYmxlLmluc2VydCh2ZWhpY2xlU2VhdHMsIHYpCmVuZAplbmQKaWYgX0cuaW5jcmVhc2Vib2F0c3BlZWQgdGhlbgpmb3IgXywgdiBpbiBwYWlycyh2ZWhpY2xlU2VhdHMpIGRvCnYuTWF4U3BlZWQgPSAzNTAKZW5kCmVsc2UKZm9yIF8sIHYgaW4gcGFpcnModmVoaWNsZVNlYXRzKSBkbwp2Lk1heFNwZWVkID0gMTAwCmVuZAplbmQKZW5kKQpwYWdlMTQ6VG9nZ2xlKCJCb2F0IE5vY2xpcFJvY2tcbuC5gOC4o+C4t+C4reC4l+C4sOC4peC4uOC4q+C4tOC4mSIsIF9HLk5vY2xpcHJvY2ssIGZ1bmN0aW9uKHZhbHVlKQpfRy5Ob2NsaXByb2NrID0gdmFsdWUKZW5kKQpzcGF3bihmdW5jdGlvbigpCndoaWxlIHdhaXQoKSBkbwppZiBfRy5Ob2NsaXByb2NrIHRoZW4KaWYgZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZC5TaXQgPT0gdHJ1ZSB0aGVuCmZvciBfLCB2IGluIHBhaXJzKGdhbWUuV29ya3NwYWNlLkJvYXRzOkdldERlc2NlbmRhbnRzKCkpIGRvCmlmIHY6SXNBKCJCYXNlUGFydCIpIGFuZCB2LkNhbkNvbGxpZGUgPT0gdHJ1ZSB0aGVuCnYuQ2FuQ29sbGlkZSA9IGZhbHNlCmVuZAplbmQKZm9yIF8sIHYgaW4gcGFpcnMoZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpHZXREZXNjZW5kYW50cygpKSBkbwppZiB2OklzQSgiQmFzZVBhcnQiKSBhbmQgdi5DYW5Db2xsaWRlID09IHRydWUgdGhlbgp2LkNhbkNvbGxpZGUgPSBmYWxzZQplbmQKZW5kCmVsc2VpZiBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkLlNpdCA9PSBmYWxzZSB0aGVuCmZvciBfLCB2IGluIHBhaXJzKGdhbWUuV29ya3NwYWNlLkJvYXRzOkdldERlc2NlbmRhbnRzKCkpIGRvCmlmIHY6SXNBKCJCYXNlUGFydCIpIGFuZCB2LkNhbkNvbGxpZGUgPT0gZmFsc2UgdGhlbgp2LkNhbkNvbGxpZGUgPSB0cnVlCmVuZAplbmQKZm9yIF8sIHYgaW4gcGFpcnMoZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3RlcjpHZXREZXNjZW5kYW50cygpKSBkbwppZiB2OklzQSgiQmFzZVBhcnQiKSBhbmQgdi5DYW5Db2xsaWRlID09IGZhbHNlIHRoZW4Kdi5DYW5Db2xsaWRlID0gdHJ1ZQplbmQKZW5kCmVuZAplbmQKZW5kCmVuZCkKcGFnZTE0OlNlcGVyYXRvcigiT3RoZXJCb2F0L+C4reC4t+C5iOC4meC5huC5gOC4geC4teC5iOC4ouC4p+C4geC4seC4muC5gOC4o+C4t+C4rSIpClNlYXRhYmxlID0geyJTZWExW0xvd10iLCJTZWEyW01lZGl1bV0iLCJTZWEzW0hpZ2hdIiwiU2VhNFtFeHRyZW1lXSIsIlNlYTVbQ3JhenldIiwiU2VhNls/Pz9dIn0KcGFnZTE0OkRyb3Bkb3duKCJTZWxlY3QgTGV2ZWwgU2VhXG7guYDguKXguLfguK3guIHguKPguLDguJTguLHguJrguJfguLDguYDguKUiLCAgIFNlYXRhYmxlICwgZnVuY3Rpb24odmFsdWUpCl9HLlNlbGVjdExvY2FsVGVsZXBvcnRTZWEgPSB2YWx1ZQplbmQpCnBhZ2UxNDpUb2dnbGUoIlRlbGVwb3J0IFRvIFNlbGVjdCBTZWFcbuC5gOC4l+C5gOC4peC4nuC4reC4o+C5jOC4leC5hOC4m+C4ouC4seC4h+C4l+C4sOC5gOC4peC4l+C4teC5iOC5gOC4peC4t+C4reC4gSIsIF9HLlRlbGVwb3J0U2VhLCBmdW5jdGlvbih2YWx1ZSkKX0cuVGVsZXBvcnRTZWEgPSB2YWx1ZQplbmQpCnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgdGFzay53YWl0KCkgZG8KaWYgX0cuVGVsZXBvcnRTZWEgdGhlbgppZiBTZWxlY3RCb2F0IHRoZW4KbG9jYWwgQm9hdCA9IGdhbWUuV29ya3NwYWNlLkJvYXRzW1NlbGVjdEJvYXRdCnJlcGVhdCB3YWl0KCkKaWYgX0cuU2VsZWN0TG9jYWxUZWxlcG9ydFNlYSA9PSAiU2VhMVtMb3ddIiB0aGVuCnR3ZWVuTW9kZWwoQm9hdCwgQ0ZyYW1lLm5ldygtMjI1MjYuMDA5OCwgLTAuMzIyMTc0NCwgMTcxNi44OTE4NSwgLTAuMjEwNzA3MjAzLCAxLjEwMDk4MWUtMDcsIDAuOTc3NTQ5MTk1LCAyLjc0NjMxNDUxZS0wOSwgMSwgLTEuMTIwMzQ2OThlLTA3LCAtMC45Nzc1NDkxOTUsIC0yLjA5MjE4NTk4ZS0wOCwgLTAuMjEwNzA3MjAzKSkKZWxzZWlmIF9HLlNlbGVjdExvY2FsVGVsZXBvcnRTZWEgPT0gIlNlYTJbTWVkaXVtXSIgdGhlbgp0d2Vlbk1vZGVsKEJvYXQsIENGcmFtZS5uZXcoLTI1NjQ1LjM1MzUsIC0wLjMyMjE3NDQsIDI1NTQuNDEwMTYsIC0wLjMzNDg3NjMyOSwgLTUuMDU1MjI0NTFlLTA4LCAwLjk0MjI2MjExMywgLTMuMTMzNDY0NjllLTA4LCAxLCA0LjI1MTM2NjE5ZS0wOCwgLTAuOTQyMjYyMTEzLCAtMS41Mjg4NjMwOGUtMDgsIC0wLjMzNDg3NjMyOSkpCmVsc2VpZiBfRy5TZWxlY3RMb2NhbFRlbGVwb3J0U2VhID09ICJTZWEzW0hpZ2hdIiB0aGVuCnR3ZWVuTW9kZWwoQm9hdCwgQ0ZyYW1lLm5ldygtMjk4NDIuMjIyNywgLTAuMzIyMTc0NCwgNDA3MC44NTc2NywgLTAuMjcwNjA5NTg3LCAzLjYwOTY4NjA2ZS0wOCwgMC45NjI2ODkxNjEsIC00LjQ3MTkzNDI5ZS0wOCwgMSwgLTUuMDA2NjM2MTdlLTA4LCAtMC45NjI2ODkxNjEsIC01LjY1OTkyNjU3ZS0wOCwgLTAuMjcwNjA5NTg3KSkKZWxzZWlmIF9HLlNlbGVjdExvY2FsVGVsZXBvcnRTZWEgPT0gIlNlYTRbRXh0cmVtZV0iIHRoZW4KdHdlZW5Nb2RlbChCb2F0LCBDRnJhbWUubmV3KC0zMjY1NC43MTg4LCAtMC4zMjIxNzQ0LCA0Nzg4LjE0Njk3LCAtMC4xODMyNzYyMjEsIDIuMDAzMzIzMmUtMDgsIDAuOTgzMDYxNDMzLCAzLjY2NjY5NDMzZS0wOCwgMSwgLTEuMzU0MjQ0MThlLTA4LCAtMC45ODMwNjE0MzMsIDMuMzU2Mzg1MDRlLTA4LCAtMC4xODMyNzYyMjEpKQplbHNlaWYgX0cuU2VsZWN0TG9jYWxUZWxlcG9ydFNlYSA9PSAiU2VhNVtDcmF6eV0iIHRoZW4KdHdlZW5Nb2RlbChCb2F0LCBDRnJhbWUubmV3KC0zNzgxMy42OTUzLCAtMC4zMjIxNzQ0LCA2MTA1LjE2ODk1LCAtMC4yNTIzNjI5OTYsIDQuMTM2MjE1ODFlLTA5LCAwLjk2NzYzMjY1MSwgMi44NzMyMDcwOWUtMDgsIDEsIDMuMjE4ODgyNDllLTA5LCAtMC45Njc2MzI2NTEsIDIuODYxNDQxNzVlLTA4LCAtMC4yNTIzNjI5OTYpKQplbHNlaWYgX0cuU2VsZWN0TG9jYWxUZWxlcG9ydFNlYSA9PSAiU2VhNls/Pz9dIiB0aGVuCnR3ZWVuTW9kZWwoQm9hdCwgQ0ZyYW1lLm5ldygtNDIyNTAuMjIyNywgLTAuMzIyMTc0NCwgOTI0Ny4wNzcxNSwgLTAuNDU5MTY0NDcsIDYuMzkwNDMyMzZlLTA4LCAwLjg4ODM1MTI2MiwgLTMuMzY3MTE0MjNlLTA4LCAxLCAtOC45MzM5NTY1MWUtMDgsIC0wLjg4ODM1MTI2MiwgLTcuMDkzMzM2MDVlLTA4LCAtMC40NTkxNjQ0NykpCmVuZAp1bnRpbCBub3QgX0cuVGVsZXBvcnRTZWEKZWxzZQpWZWMoIjxDb2xvcj1DeWFuPlNlbGVjdEJvYXQg4LmA4Lil4Li34Lit4LiB4LmA4Lij4Li34LitPENvbG9yPS8+IikKZW5kCmVuZAplbmQKZW5kKQpCb2F0c05hbWUgPSB7fQpmb3IgaSx2IGluIHBhaXJzKGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuQm9hdHM6R2V0Q2hpbGRyZW4oKSkgZG8KdGFibGUuaW5zZXJ0KEJvYXRzTmFtZSAsdi5OYW1lKQplbmQKbG9jYWwgQm9hdHMgPSBwYWdlMTQ6RHJvcGRvd24oIlNlbGVjdCBCb2F0cyBUYXJnZXRcbuC5gOC4peC4t+C4reC4geC5gOC4o+C4t+C4reC4l+C4teC5iOC4leC5ieC4reC4h+C4geC4suC4oyIsIEJvYXRzTmFtZSwgZnVuY3Rpb24odmFsdWUpCl9HLlNlbGVjdEIgPSB2YWx1ZQplbmQpCnBhZ2UxNDpCdXR0b24oIlJlZnJlc2ggQm9hdHMgTGlzdFxu4Lij4Li14LmA4Lif4Lij4LiK4Lij4Liy4Lii4LiK4Li34LmI4Lit4LmA4Lij4Li34LitIiwgZnVuY3Rpb24oKQpCb2F0c05hbWUgPSB7fQpCb2F0czpDbGVhcigpCmZvciBpLHYgaW4gcGFpcnMoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5Cb2F0czpHZXRDaGlsZHJlbigpKSBkbwpCb2F0czpBZGQodi5OYW1lKQplbmQKZW5kKQpwYWdlMTQ6VG9nZ2xlKCJUZWxlcG9ydCBUbyBTZWxlY3RlZCBCb2F0c1xu4LmA4LiX4LmA4Lil4Lie4Lit4Lij4LmM4LiV4LmE4Lib4Lii4Lix4LiH4LmA4Lij4Li34Lit4LiX4Li14LmI4LmA4Lil4Li34Lit4LiBIiwgZmFsc2UsIGZ1bmN0aW9uKHZhbHVlKQpfRy5UUEIgPSBib29sClN0b3BUd2VlbihfRy5UUEIpCmlmIF9HLlRQQiB0aGVuCl9HLkJvYXRzID0gdHJ1ZQp3aGlsZSBfRy5Cb2F0cyBkbyB3YWl0KCkKRGlzdGFuY2UgPSAoZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5Cb2F0c1tfRy5TZWxlY3RCXS5WZWhpY2xlU2VhdC5Qb3NpdGlvbiAtIGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikuTWFnbml0dWRlClNwZWVkID0gMjIwCnR3ZWVuU2VydmljZSwgdHdlZW5JbmZvID0gZ2FtZTpHZXRTZXJ2aWNlKCJUd2VlblNlcnZpY2UiKSwgVHdlZW5JbmZvLm5ldyhEaXN0YW5jZS9TcGVlZCwgRW51bS5FYXNpbmdTdHlsZS5MaW5lYXIpCnR3ZWVuID0gdHdlZW5TZXJ2aWNlOkNyZWF0ZShnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKVsiTG9jYWxQbGF5ZXIiXS5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydCwgdHdlZW5JbmZvLCB7Q0ZyYW1lID0gZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5Cb2F0c1tfRy5TZWxlY3RCXS5WZWhpY2xlU2VhdC5DRnJhbWV9KQp0d2VlbjpQbGF5KCkKX0cubmNwID0gdHJ1ZQp3YWl0KERpc3RhbmNlL1NwZWVkKQplbmQKZWxzZWlmIF9HLlRQQiA9PSBmYWxzZSB0aGVuCl9HLkJvYXRzID0gZmFsc2UKd2hpbGUgX0cuQm9hdHMgZG8gd2FpdCgpCkRpc3RhbmNlID0gKGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuQm9hdHNbX0cuU2VsZWN0Ql0uVmVoaWNsZVNlYXQuUG9zaXRpb24gLSBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuUG9zaXRpb24pLk1hZ25pdHVkZQpTcGVlZCA9IDIyMAp0d2VlblNlcnZpY2UsIHR3ZWVuSW5mbyA9IGdhbWU6R2V0U2VydmljZSgiVHdlZW5TZXJ2aWNlIiksIFR3ZWVuSW5mby5uZXcoRGlzdGFuY2UvU3BlZWQsIEVudW0uRWFzaW5nU3R5bGUuTGluZWFyKQp0d2VlbiA9IHR3ZWVuU2VydmljZTpDcmVhdGUoZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIilbIkxvY2FsUGxheWVyIl0uQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQsIHR3ZWVuSW5mbywge0NGcmFtZSA9IGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuQm9hdHNbX0cuU2VsZWN0Ql0uVmVoaWNsZVNlYXQuQ0ZyYW1lfSkKdHdlZW46UGxheSgpCl9HLm5jcCA9IHRydWUKd2FpdChEaXN0YW5jZS9TcGVlZCkKZW5kCnR3ZWVuU2VydmljZSwgdHdlZW5JbmZvID0gZ2FtZTpHZXRTZXJ2aWNlKCJUd2VlblNlcnZpY2UiKSwgVHdlZW5JbmZvLm5ldyguMSwgRW51bS5FYXNpbmdTdHlsZS5MaW5lYXIpCnR3ZWVuID0gdHdlZW5TZXJ2aWNlOkNyZWF0ZShnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKVsiTG9jYWxQbGF5ZXIiXS5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydCwgdHdlZW5JbmZvLCB7Q0ZyYW1lID0gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZX0pCnR3ZWVuOlBsYXkoKQpfRy5uY3AgPSBmYWxzZQplbmQKZW5kKQpwYWdlMTQ6VG9nZ2xlKCJTcGVjdGF0ZSBTZWxlY3RlZCBCb2F0c1xu4LmB4Lit4Lia4Liq4LmI4Lit4LiH4LmA4Lij4Li34Lit4LiX4Li14LmI4LmA4Lil4Li34Lit4LiBIiwgZmFsc2UsIGZ1bmN0aW9uKHZhbHVlKQpTcCA9IHZhbHVlCmVuZCkKc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB0YXNrLndhaXQoKSBkbwppZiBTcCB0aGVuCmxvY2FsIHBscjEgPSBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkCmxvY2FsIHBscjIgPSBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLkJvYXRzOkZpbmRGaXJzdENoaWxkKF9HLlNlbGVjdEIpCnJlcGVhdCB3YWl0KC4xKQpnYW1lLldvcmtzcGFjZS5DYW1lcmEuQ2FtZXJhU3ViamVjdCA9IGdhbWU6R2V0U2VydmljZSgiV29ya3NwYWNlIikuQm9hdHNbX0cuU2VsZWN0Ql0uVmVoaWNsZVNlYXQKdW50aWwgU3AgPT0gZmFsc2UKZ2FtZS5Xb3Jrc3BhY2UuQ2FtZXJhLkNhbWVyYVN1YmplY3QgPSBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkCmVuZAplbmQKZW5kKQpwYWdlMTQ6QnV0dG9uKCJCcmluZyBTZWxlY3RlZCBCb2F0c1xu4LiU4Li24LiH4LmA4Lij4Li34Lit4LiX4Li14LmI4LmA4Lil4Li34Lit4LiB4Lih4LiyIiwgZnVuY3Rpb24oKQpnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKVsiTG9jYWxQbGF5ZXIiXS5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgPSBnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLkJvYXRzW19HLlNlbGVjdEJdLlZlaGljbGVTZWF0LkNGcmFtZQplbmQpCnBhZ2UxNjpTZXBlcmF0b3IoIkRvam8gUXVlc3RcbuC5gOC4hOC4p+C4quC4guC4reC4h+C5guC4lOC5guC4iiIpCnBhZ2UxNjpUb2dnbGUoIlRlbGVwb3J0IFRvIERvam9cbuC5gOC4l+C5gOC4peC4nuC4reC4o+C5jOC4leC5hOC4m+C4l+C4teC5iOC5guC4lOC5guC4iCIsX0cuVG9Eb2pvLCBmdW5jdGlvbih2YWx1ZSkKX0cuVG9Eb2pvID0gdmFsdWUKaWYgdmFsdWUgPT0gZmFsc2UgdGhlbgp0b1RhcmdldChnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lKQplbmQKZW5kKQpsb2NhbCBwb3NpdGlvbkQgPSBDRnJhbWUubmV3KDU4NjYuNTE4MDcsIDEyMDguMjU4NzksIDg3MC4yNTAxODMsIC0wLjQzNjQ2MDU1NSwgOC44OTEwNDQ3ZS0wOCwgLTAuODk5NzIzNDExLCAtMS4wMzQ5Nzg5NWUtMDgsIDEsIDEuMDM4NDA0OTllLTA3LCAwLjg5OTcyMzQxMSwgNS40NjM0MjI3OGUtMDgsIC0wLjQzNjQ2MDU1NSkKc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB0YXNrLndhaXQoKSBkbwppZiBfRy5Ub0Rvam8gdGhlbgp0b1RhcmdldChwb3NpdGlvbkQpCmVuZAplbmQKZW5kKQpwYWdlMTY6VG9nZ2xlKCJDaGVja1Byb2dlc3NRdWVzdFxu4LmA4LiK4LmH4LiE4Lin4LmI4Liy4LmA4LiE4Lin4Liq4Liq4Liz4LmA4Lij4LmH4LiI4Lij4Li24Lii4Lix4LiHIixfRy5GaW5pc2hRLCBmdW5jdGlvbih2YWx1ZSkKX0cuRmluaXNoUSA9IHZhbHVlCmVuZCkKc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB0YXNrLndhaXQoLjEpIGRvCmlmIF9HLkZpbmlzaFEgdGhlbgpyZXBlYXQgdGFzay53YWl0KC4xKQpnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lID0gIENGcmFtZS5uZXcoNTg2Ni41MTgwNywgMTIwOC4yNTg3OSwgODcwLjI1MDE4MywgLTAuNDM2NDYwNTU1LCA4Ljg5MTA0NDdlLTA4LCAtMC44OTk3MjM0MTEsIC0xLjAzNDk3ODk1ZS0wOCwgMSwgMS4wMzg0MDQ5OWUtMDcsIDAuODk5NzIzNDExLCA1LjQ2MzQyMjc4ZS0wOCwgLTAuNDM2NDYwNTU1KQpsb2NhbCBhcmdzID0gewpbMV0gPSB7ClsiTlBDIl0gPSAiRG9qbyBUcmFpbmVyIiwKWyJDb21tYW5kIl0gPSAiQ2xhaW1RdWVzdCIKfQp9CmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKTpXYWl0Rm9yQ2hpbGQoIk1vZHVsZXMiKTpXYWl0Rm9yQ2hpbGQoIk5ldCIpOldhaXRGb3JDaGlsZCgiUkYvSW50ZXJhY3REcmFnb25RdWVzdCIpOkludm9rZVNlcnZlcih1bnBhY2soYXJncykpCnVudGlsIG5vdCBfRy5GaW5pc2hRCmVuZAplbmQKZW5kKQpsb2NhbCBQbGF5ZXJzID0gZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikKbG9jYWwgUmVwbGljYXRlZFN0b3JhZ2UgPSBnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikKbG9jYWwgTG9jYWxQbGF5ZXIgPSBQbGF5ZXJzLkxvY2FsUGxheWVyCmxvY2FsIFJlbW90ZXMgPSBSZXBsaWNhdGVkU3RvcmFnZTpXYWl0Rm9yQ2hpbGQoIlJlbW90ZXMiKQpsb2NhbCBDb21tRl8gPSBSZW1vdGVzOldhaXRGb3JDaGlsZCgiQ29tbUZfIikKbG9jYWwgY3VycmVudE5vdGlmaWNhdGlvbiA9IG5pbApsb2NhbCBsYXN0Tm90aWZpY2F0aW9uVGV4dCA9IG5pbApmdW5jdGlvbiBEZWJ1Zyh0ZXh0KQppZiBsYXN0Tm90aWZpY2F0aW9uVGV4dCA9PSB0ZXh0IHRoZW4KcmV0dXJuCmVuZAppZiBjdXJyZW50Tm90aWZpY2F0aW9uIHRoZW4KcGNhbGwoZnVuY3Rpb24oKQpjdXJyZW50Tm90aWZpY2F0aW9uOkRlc3Ryb3koKQplbmQpCmN1cnJlbnROb3RpZmljYXRpb24gPSBuaWwKZW5kCmxvY2FsIHN1Y2Nlc3MsIE5vdGlmaWNhdGlvbiA9IHBjYWxsKGZ1bmN0aW9uKCkKcmV0dXJuIHJlcXVpcmUoZ2FtZS5SZXBsaWNhdGVkU3RvcmFnZTpGaW5kRmlyc3RDaGlsZCgiTm90aWZpY2F0aW9uIikpCmVuZCkKaWYgbm90IHN1Y2Nlc3Mgb3Igbm90IE5vdGlmaWNhdGlvbiB0aGVuCndhcm4oIkZhaWxlZCB0byBsb2FkIE5vdGlmaWNhdGlvbiBtb2R1bGU6ICIgLi4gdG9zdHJpbmcoTm90aWZpY2F0aW9uKSkKcHJpbnQoIltEZWJ1Z10gIiAuLiB0ZXh0KQpsYXN0Tm90aWZpY2F0aW9uVGV4dCA9IHRleHQKcmV0dXJuCmVuZApsb2NhbCBjb2xvcmVkVGV4dCA9IHRleHQKbG9jYWwgbm90aWZpY2F0aW9uCmxvY2FsIHN1Y2Nlc3MsIGVyciA9IHBjYWxsKGZ1bmN0aW9uKCkKbm90aWZpY2F0aW9uID0gTm90aWZpY2F0aW9uLm5ldyhjb2xvcmVkVGV4dCkKbm90aWZpY2F0aW9uLkR1cmF0aW9uID0gOTk5OTkKbm90aWZpY2F0aW9uOkRpc3BsYXkoKQplbmQpCmlmIG5vdCBzdWNjZXNzIHRoZW4Kd2FybigiRmFpbGVkIHRvIGRpc3BsYXkgbm90aWZpY2F0aW9uOiAiIC4uIHRvc3RyaW5nKGVycikpCnByaW50KCJbRGVidWddICIgLi4gdGV4dCkKbGFzdE5vdGlmaWNhdGlvblRleHQgPSB0ZXh0CnJldHVybgplbmQKY3VycmVudE5vdGlmaWNhdGlvbiA9IG5vdGlmaWNhdGlvbgpsYXN0Tm90aWZpY2F0aW9uVGV4dCA9IHRleHQKZW5kCmxvY2FsIGZ1bmN0aW9uIFJ1bkF1dG9RdWVzdERvam8oKQp3aGlsZSB0YXNrLndhaXQoKSBkbwppZiBub3QgX0cuQXV0b1F1ZXN0RG9qbyB0aGVuCmlmIGN1cnJlbnROb3RpZmljYXRpb24gdGhlbgpwY2FsbChmdW5jdGlvbigpCmN1cnJlbnROb3RpZmljYXRpb246RGVzdHJveSgpCmVuZCkKY3VycmVudE5vdGlmaWNhdGlvbiA9IG5pbApsYXN0Tm90aWZpY2F0aW9uVGV4dCA9IG5pbAplbmQKbG9jYWwgbm90aWZpY2F0aW9ucyA9IExvY2FsUGxheWVyLlBsYXllckd1aTpGaW5kRmlyc3RDaGlsZCgiTm90aWZpY2F0aW9ucyIpCmlmIG5vdGlmaWNhdGlvbnMgdGhlbgpmb3IgXywgbm90aWZpY2F0aW9uIGluIHBhaXJzKG5vdGlmaWNhdGlvbnM6R2V0Q2hpbGRyZW4oKSkgZG8KaWYgbm90aWZpY2F0aW9uLk5hbWUgPT0gIk5vdGlmaWNhdGlvblRlbXBsYXRlIiB0aGVuCnBjYWxsKGZ1bmN0aW9uKCkKbm90aWZpY2F0aW9uOkRlc3Ryb3koKQplbmQpCmVuZAplbmQKZW5kCmJyZWFrCmVuZAppZiBub3QgTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyIHRoZW4KTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyQWRkZWQ6V2FpdCgpCmVuZApsb2NhbCBpbnZlbnRvcnlEYXRhID0gQ29tbUZfOkludm9rZVNlcnZlcigiZ2V0SW52ZW50b3J5IikKaWYgbm90IGludmVudG9yeURhdGEgdGhlbgp3YXJuKCJGYWlsZWQgdG8gcmV0cmlldmUgaW52ZW50b3J5IGRhdGEuIikKRGVidWcoIkVycm9yOiBDYW5ub3QgcmV0cmlldmUgaW52ZW50b3J5IGRhdGEuIikKX0cuQXV0b1F1ZXN0RG9qbyA9IGZhbHNlCmVuZApsb2NhbCBoYXNXaGl0ZSA9IGZhbHNlCmxvY2FsIGhhc1llbGxvdyA9IGZhbHNlCmxvY2FsIGhhc09yYW5nZSA9IGZhbHNlCmxvY2FsIGhhc0dyZWVuID0gZmFsc2UKbG9jYWwgaGFzQmx1ZSA9IGZhbHNlCmxvY2FsIGhhc1B1cnBsZSA9IGZhbHNlCmxvY2FsIGhhc1JlZCA9IGZhbHNlCmxvY2FsIGhhc0JsYWNrID0gZmFsc2UKZm9yIF8sIGl0ZW0gaW4gcGFpcnMoaW52ZW50b3J5RGF0YSkgZG8KaWYgaXRlbS5OYW1lID09ICJEb2pvIEJlbHQgKFdoaXRlKSIgdGhlbgpoYXNXaGl0ZSA9IHRydWUKZWxzZWlmIGl0ZW0uTmFtZSA9PSAiRG9qbyBCZWx0IChZZWxsb3cpIiB0aGVuCmhhc1llbGxvdyA9IHRydWUKZWxzZWlmIGl0ZW0uTmFtZSA9PSAiRG9qbyBCZWx0IChPcmFuZ2UpIiB0aGVuCmhhc09yYW5nZSA9IHRydWUKZWxzZWlmIGl0ZW0uTmFtZSA9PSAiRG9qbyBCZWx0IChHcmVlbikiIHRoZW4KaGFzR3JlZW4gPSB0cnVlCmVsc2VpZiBpdGVtLk5hbWUgPT0gIkRvam8gQmVsdCAoQmx1ZSkiIHRoZW4KaGFzQmx1ZSA9IHRydWUKZWxzZWlmIGl0ZW0uTmFtZSA9PSAiRG9qbyBCZWx0IChQdXJwbGUpIiB0aGVuCmhhc1B1cnBsZSA9IHRydWUKZWxzZWlmIGl0ZW0uTmFtZSA9PSAiRG9qbyBCZWx0IChSZWQpIiB0aGVuCmhhc1JlZCA9IHRydWUKZWxzZWlmIGl0ZW0uTmFtZSA9PSAiRG9qbyBCZWx0IChCbGFjaykiIHRoZW4KaGFzQmxhY2sgPSB0cnVlCmVuZAplbmQKaWYgbm90IGhhc1doaXRlIHRoZW4KRGVidWcoIldoaXRlIEJlbHQgRmFybSAzIFF1ZXN0XG7guKvguLLguKrguLXguILguLLguKcuLuC4n+C4suC4o+C5jOC4oeC5gOC4p+C4pTPguYDguITguKfguKoiKQppZiBfRy5BdXRvUXVlc3REb2pvIHRoZW4KX0cuQXV0b0Zhcm0gPSB0cnVlCmVsc2UKX0cuQXV0b0Zhcm0gPSBmYWxzZQplbmQKZWxzZWlmIGhhc1doaXRlIGFuZCBub3QgaGFzWWVsbG93IHRoZW4KRGVidWcoIlllbGxvdyBCZWx0IEtpbGwgRmlzaCA1IGFtb3VudFxu4Lir4Liy4Liq4Li14LmA4Lir4Lil4Li34Lit4LiHLi7guJXguLXguJvguKXguLLguJfguLA14LiV4Lix4LinIikKaWYgX0cuQXV0b1F1ZXN0RG9qbyB0aGVuCl9HLmZhcm1zZWFldmVudCA9IHRydWUKX0cuQXV0b1RlcnJvcnNoYXJrID0gdHJ1ZQpfRy5GYXJtU2hhcmsgPSB0cnVlCl9HLmZhcm1waXJhbnlhID0gdHJ1ZQplbHNlCl9HLmZhcm1zZWFldmVudCA9IGZhbHNlCl9HLkF1dG9UZXJyb3JzaGFyayA9IGZhbHNlCl9HLkZhcm1TaGFyayA9IGZhbHNlCl9HLmZhcm1waXJhbnlhID0gZmFsc2UKZW5kCmVsc2VpZiBoYXNXaGl0ZSBhbmQgaGFzWWVsbG93IGFuZCBub3QgaGFzT3JhbmdlIHRoZW4KRGVidWcoIk9yYW5nZSBCZWx0IFRyYWRlIG9uIHlvdXIgb3duXG7guKvguLLguKrguLXguKrguYnguKEuLuC5gOC4l+C4o+C4lOC4nOC4peC4lOC5ieC4p+C4ouC4leC4seC4p+C5gOC4reC4hyIpCmVsc2VpZiBoYXNXaGl0ZSBhbmQgaGFzWWVsbG93IGFuZCBoYXNPcmFuZ2UgYW5kIG5vdCBoYXNHcmVlbiB0aGVuCkRlYnVnKCJHcmVlbiBCZWx0IERyaXZlIEJvYXQgNUsgTVxu4Lir4Liy4Liq4Li14LmA4LiC4Li14Lii4LinLi7guILguLHguJrguYDguKPguLfguK3guKvguYjguLLguIfguIjguLLguIHguYDguIHguLLguLDguKvguYnguLLguJ7guLHguJnguYDguKHguJXguKMiKQppZiBfRy5BdXRvUXVlc3REb2pvIHRoZW4KX0cuQXV0b0ZpbmRJc2xhbmQgPSB0cnVlCmVsc2UKX0cuQXV0b0ZpbmRJc2xhbmQgPSBmYWxzZQplbmQKZWxzZWlmIGhhc1doaXRlIGFuZCBoYXNZZWxsb3cgYW5kIGhhc09yYW5nZSBhbmQgaGFzR3JlZW4gYW5kIG5vdCBoYXNCbHVlIHRoZW4KRGVidWcoIkJsdWUgQmVsdCBEcm9wIEZydWl0IFdpdGggU29tZW9uZVxu4Lir4Liy4Liq4Li14LiZ4LmJ4Liz4LmA4LiH4Li04LiZLi7guYLguKLguJnguJzguKXguYPguKvguYnguIHguLHguJnguJTguYnguKfguKLguJXguLHguKfguYDguK3guIciKQplbHNlaWYgaGFzV2hpdGUgYW5kIGhhc1llbGxvdyBhbmQgaGFzT3JhbmdlIGFuZCBoYXNHcmVlbiBhbmQgaGFzQmx1ZSBhbmQgbm90IGhhc1B1cnBsZSB0aGVuCkRlYnVnKCJQdXJwbGUgQmVsdCBLaWxsIEVsaXRlIDMgYW1vdW50XG7guKvguLLguKrguLXguKHguYjguKfguIcuLuC4peC5iOC4suC4reC4teC4peC4tOC4l+C4ruC4seC4meC5gOC4leC4reC4o+C5jDPguJXguLHguKciKQppZiBfRy5BdXRvUXVlc3REb2pvIHRoZW4KX0cuQXV0b0VsaXRlSHVudGVyID0gdHJ1ZQpfRy5BdXRvRWxpdGVIdW50ZXJIb3AgPSB0cnVlCmVsc2UKX0cuQXV0b0VsaXRlSHVudGVyID0gZmFsc2UKX0cuQXV0b0VsaXRlSHVudGVySG9wID0gZmFsc2UKZW5kCmVsc2VpZiBoYXNXaGl0ZSBhbmQgaGFzWWVsbG93IGFuZCBoYXNPcmFuZ2UgYW5kIGhhc0dyZWVuIGFuZCBoYXNCbHVlIGFuZCBoYXNQdXJwbGUgYW5kIG5vdCBoYXNSZWQgdGhlbgpEZWJ1ZygiUmVkIEJlbHQgS2lsbCBSdW1ibGluZyBXYXRlcnNcbuC4q+C4suC4quC4teC5geC4lOC4hy4u4LiV4Li14LmA4LiI4LmJ4Liy4LiX4Liw4LmA4Lil4LiX4Li14LmI4LmA4LiB4Li04LiU4LmA4Lib4LmH4LiZ4LiB4Lil4Li44LmI4LihIikKaWYgX0cuQXV0b1F1ZXN0RG9qbyB0aGVuCl9HLkF1dG9TZWFiZXN0RmFybSA9IHRydWUKX0cuTm9jbGlwcm9jayA9IHRydWUKZWxzZQpfRy5BdXRvU2VhYmVzdEZhcm0gPSBmYWxzZQpfRy5Ob2NsaXByb2NrID0gZmFsc2UKZW5kCmVsc2VpZiBoYXNXaGl0ZSBhbmQgaGFzWWVsbG93IGFuZCBoYXNPcmFuZ2UgYW5kIGhhc0dyZWVuIGFuZCBoYXNCbHVlIGFuZCBoYXNQdXJwbGUgYW5kIGhhc1JlZCBhbmQgbm90IGhhc0JsYWNrIHRoZW4KRGVidWcoIkJsYWNrIEJlbHQgQ29tcGxldGUgdGhlIFZvbGNhbm8gRXZlbnRcbuC4q+C4suC4quC4teC4lOC4sy4u4Lic4LmI4Liy4LiZ4Lit4Li14LmA4Lin4LmJ4LiZ4LiX4LmM4Lig4Li54LmA4LiC4Liy4LmE4LifIikKaWYgX0cuQXV0b1F1ZXN0RG9qbyB0aGVuCl9HLkF1dG9GaW5kSXNsYW5kID0gdHJ1ZQpfRy52b2xjYW5vUm9ja3MgPSB0cnVlCl9HLktpbGxBdXJhID0gdHJ1ZQplbHNlCl9HLkF1dG9GaW5kSXNsYW5kID0gZmFsc2UKX0cudm9sY2Fub1JvY2tzID0gZmFsc2UKX0cuS2lsbEF1cmEgPSBmYWxzZQplbmQKZWxzZQpEZWJ1ZygiQ29tcGxldGUgQWxsIFF1ZXN0XG7guITguKPguJrguJfguLjguIHguYDguITguKfguKrguYHguKXguYnguKchIikKX0cuQXV0b1F1ZXN0RG9qbyA9IGZhbHNlCmVuZAplbmQKZW5kCmxvY2FsIGF1dG9RdWVzdEV2ZW50ID0gSW5zdGFuY2UubmV3KCJCaW5kYWJsZUV2ZW50IikKbG9jYWwgbGFzdEF1dG9RdWVzdFN0YXRlID0gX0cuQXV0b1F1ZXN0RG9qbwpzcGF3bihmdW5jdGlvbigpCndoaWxlIHRhc2sud2FpdCgpIGRvCmlmIF9HLkF1dG9RdWVzdERvam8gfj0gbGFzdEF1dG9RdWVzdFN0YXRlIHRoZW4KbGFzdEF1dG9RdWVzdFN0YXRlID0gX0cuQXV0b1F1ZXN0RG9qbwppZiBfRy5BdXRvUXVlc3REb2pvIHRoZW4Kc3Bhd24oUnVuQXV0b1F1ZXN0RG9qbykKZW5kCmVuZAplbmQKZW5kKQpwYWdlMTY6VG9nZ2xlKCJBdXRvUXVlc3REb2pvKEFjY2VwdCBRdWVzdCBvbiB5b3VyIG93bilcbuC4reC4reC5guC4leC5ieC5gOC4hOC4p+C4quC5guC4lOC5guC4iCjguKPguLHguJrguYDguITguKfguKrguJTguYnguKfguKLguJXguLHguKfguYDguK3guIcpIiwgX0cuQXV0b1F1ZXN0RG9qbywgZnVuY3Rpb24odmFsdWUpCl9HLkF1dG9RdWVzdERvam8gPSB2YWx1ZQplbmQpCnBhZ2UxNjpTZXBlcmF0b3IoIkRyYWdvbiBIdW50ZXIgUXVlc3RcbuC5gOC4hOC4p+C4quC4guC4reC4h+C4lOC4o+C4suC4geC5ieC4reC4meC4ruC4seC4meC5gOC4leC4reC4o+C5jCIpCnBhZ2UxNjpUb2dnbGUoIlRlbGVwb3J0IFRvIERyYWdvbkh1bnRlclxu4LmA4LiX4LmA4Lil4Lie4Lit4Lij4LmM4LiV4LmE4Lib4LiX4Li14LmIIERyYWdvbiBIdW50ZXIiLF9HLlRvRHJhZ29uSHVudGVyLCBmdW5jdGlvbih2YWx1ZSkKX0cuVG9EcmFnb25IdW50ZXIgPSB2YWx1ZQppZiB2YWx1ZSA9PSBmYWxzZSB0aGVuCnRvVGFyZ2V0KGdhbWUuUGxheWVycy5Mb2NhbFBsYXllci5DaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydC5DRnJhbWUpCmVuZAplbmQpCmxvY2FsIHBvc2l0aW9uRCA9IENGcmFtZS5uZXcoNTg2Ny4yNDQxNCwgMTIwOS40MzkzMywgODExLjIwMjk0MiwgMC43MDQ0NTI3NTMsIC0xLjg0OTA2NzM5ZS0wOCwgMC43MDk3NTA4OTEsIDEuMjQ5NzY1MjdlLTA4LCAxLCAxLjM2NDc5ODMyZS0wOCwgLTAuNzA5NzUwODkxLCAtNy40NDEzODk3M2UtMTAsIDAuNzA0NDUyNzUzKQpzcGF3bihmdW5jdGlvbigpCndoaWxlIHRhc2sud2FpdCgpIGRvCmlmIF9HLlRvRHJhZ29uSHVudGVyIHRoZW4KdG9UYXJnZXQocG9zaXRpb25EKQplbmQKZW5kCmVuZCkKX0cuQ3VycmVudFF1ZXN0ID0gbmlsCmxvY2FsIGFjdGl2ZVR3ZWVuID0gbmlsCmxvY2FsIGNoZWNrID0gdHJ1ZQpsb2NhbCBpc1F1ZXN0QWN0aXZlID0gZmFsc2UKbG9jYWwgdGFza0NvbXBsZXRlZCA9IGZhbHNlCnBhZ2UxNjpUb2dnbGUoIkF1dG9RdWVzdERyYWdvbkh1bnRlclxu4Lit4Lit4LmC4LiV4LmJ4LmA4LiE4Lin4Liq4LiU4Lij4Liy4LiB4LmJ4Lit4LiZ4Liu4Lix4LiZ4LmA4LiV4Lit4Lij4LmMIiwgX0cuZHJhZ29uaHVudGVycXVlc3QsIGZ1bmN0aW9uKHZhbHVlKQpfRy5kcmFnb25odW50ZXJxdWVzdCA9IHZhbHVlCmlmIG5vdCB2YWx1ZSB0aGVuCnN0b3BNb3ZlbWVudCgpCmdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLlBsYXllckd1aS5Ub3BiYXJTdGFuZGFyZC5FbmFibGVkID0gdHJ1ZQplbHNlCmdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLlBsYXllckd1aS5Ub3BiYXJTdGFuZGFyZC5FbmFibGVkID0gZmFsc2UKZW5kCmVuZCkKbG9jYWwgZHJhZ29uSHVudGVyTlBDUG9zID0gQ0ZyYW1lLm5ldyg1ODY3LjI0NDE0MDYyNSwgMTIwOS40MzkzMzEwNTQ2ODc1LCA4MTEuMjAyOTQxODk0NTMxMikKbG9jYWwgZHJhZ29uSHVudGVyTlBDID0gV29ya3NwYWNlLk5QQ3M6RmluZEZpcnN0Q2hpbGQoIkRyYWdvbiBIdW50ZXIiKQpsb2NhbCBmdW5jdGlvbiB3YWl0Rm9yQ2hhcmFjdGVyKCkKbG9jYWwgY2hhcmFjdGVyID0gTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyCmlmIG5vdCBjaGFyYWN0ZXIgb3Igbm90IGNoYXJhY3RlcjpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpIG9yIG5vdCBjaGFyYWN0ZXI6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkIikgdGhlbgpMb2NhbFBsYXllci5DaGFyYWN0ZXJBZGRlZDpXYWl0KCkKY2hhcmFjdGVyID0gTG9jYWxQbGF5ZXIuQ2hhcmFjdGVyCmNoYXJhY3RlcjpXYWl0Rm9yQ2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKQpjaGFyYWN0ZXI6V2FpdEZvckNoaWxkKCJIdW1hbm9pZCIpCmVuZApyZXR1cm4gY2hhcmFjdGVyCmVuZApsb2NhbCBmdW5jdGlvbiB0b1RhcmdldEQodGFyZ2V0Q0ZyYW1lLCBpc0RyYWdvbkh1bnRlcikKbG9jYWwgY2hhcmFjdGVyID0gd2FpdEZvckNoYXJhY3RlcigpCmxvY2FsIHJvb3RQYXJ0ID0gY2hhcmFjdGVyLkh1bWFub2lkUm9vdFBhcnQKaWYgaXNEcmFnb25IdW50ZXIgdGhlbgppZiBub3QgZHJhZ29uSHVudGVyTlBDIG9yIG5vdCBkcmFnb25IdW50ZXJOUEM6RmluZEZpcnN0Q2hpbGQoIkh1bWFub2lkUm9vdFBhcnQiKSB0aGVuCmRyYWdvbkh1bnRlck5QQyA9IFdvcmtzcGFjZS5OUENzOkZpbmRGaXJzdENoaWxkKCJEcmFnb24gSHVudGVyIikKaWYgbm90IGRyYWdvbkh1bnRlck5QQyB0aGVuCnRhcmdldENGcmFtZSA9IGRyYWdvbkh1bnRlck5QQ1BvcwplbHNlCnRhcmdldENGcmFtZSA9IGRyYWdvbkh1bnRlck5QQy5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZQplbmQKZWxzZQp0YXJnZXRDRnJhbWUgPSBkcmFnb25IdW50ZXJOUEMuSHVtYW5vaWRSb290UGFydC5DRnJhbWUKZW5kCmVuZApsb2NhbCBkaXN0YW5jZSA9IChyb290UGFydC5Qb3NpdGlvbiAtIHRhcmdldENGcmFtZS5Qb3NpdGlvbikuTWFnbml0dWRlCmxvY2FsIGluZm8gPSBUd2VlbkluZm8ubmV3KGRpc3RhbmNlIC8gMzAwLCBFbnVtLkVhc2luZ1N0eWxlLkxpbmVhcikKbG9jYWwgdHdlZW4gPSBUd2VlblNlcnZpY2U6Q3JlYXRlKHJvb3RQYXJ0LCBpbmZvLCB7Q0ZyYW1lID0gdGFyZ2V0Q0ZyYW1lfSkKYWN0aXZlVHdlZW4gPSB0d2Vlbgp0d2VlbjpQbGF5KCkKcmV0dXJuIHR3ZWVuCmVuZApsb2NhbCBmdW5jdGlvbiBzdG9wTW92ZW1lbnQoKQppZiBhY3RpdmVUd2VlbiB0aGVuCmFjdGl2ZVR3ZWVuOkNhbmNlbCgpCmFjdGl2ZVR3ZWVuID0gbmlsCmVuZAplbmQKbG9jYWwgZnVuY3Rpb24gdGFwU2NyZWVuQXRHdWlFbGVtZW50KGd1aUVsZW1lbnQpCmlmIG5vdCBndWlFbGVtZW50IHRoZW4KcmV0dXJuCmVuZApsb2NhbCBhYnNvbHV0ZVBvc2l0aW9uID0gZ3VpRWxlbWVudC5BYnNvbHV0ZVBvc2l0aW9uCmxvY2FsIGFic29sdXRlU2l6ZSA9IGd1aUVsZW1lbnQuQWJzb2x1dGVTaXplCmxvY2FsIHRhcFggPSBhYnNvbHV0ZVBvc2l0aW9uLlggKyAoYWJzb2x1dGVTaXplLlggLyAyKQpsb2NhbCB0YXBZID0gYWJzb2x1dGVQb3NpdGlvbi5ZICsgKGFic29sdXRlU2l6ZS5ZIC8gMikKbG9jYWwgc2NyZWVuU2l6ZSA9IEd1aVNlcnZpY2U6R2V0U2NyZWVuUmVzb2x1dGlvbigpCmlmIHRhcFggPCAwIG9yIHRhcFggPiBzY3JlZW5TaXplLlggb3IgdGFwWSA8IDAgb3IgdGFwWSA+IHNjcmVlblNpemUuWSB0aGVuCnJldHVybgplbmQKVmlydHVhbElucHV0TWFuYWdlcjpTZW5kTW91c2VCdXR0b25FdmVudCh0YXBYLCB0YXBZLCAwLCB0cnVlLCBnYW1lLCAwKQp0YXNrLndhaXQoMC4xKQpWaXJ0dWFsSW5wdXRNYW5hZ2VyOlNlbmRNb3VzZUJ1dHRvbkV2ZW50KHRhcFgsIHRhcFksIDAsIGZhbHNlLCBnYW1lLCAwKQplbmQKbG9jYWwgZnVuY3Rpb24gdGFwU2NyZWVuQ2VudGVyKCkKbG9jYWwgc2NyZWVuU2l6ZSA9IEd1aVNlcnZpY2U6R2V0U2NyZWVuUmVzb2x1dGlvbigpCmxvY2FsIGNlbnRlclggPSBzY3JlZW5TaXplLlggLyAyCmxvY2FsIGNlbnRlclkgPSBzY3JlZW5TaXplLlkgLyAyClZpcnR1YWxJbnB1dE1hbmFnZXI6U2VuZE1vdXNlQnV0dG9uRXZlbnQoY2VudGVyWCwgY2VudGVyWSwgMCwgdHJ1ZSwgZ2FtZSwgMCkKdGFzay53YWl0KDAuMSkKVmlydHVhbElucHV0TWFuYWdlcjpTZW5kTW91c2VCdXR0b25FdmVudChjZW50ZXJYLCBjZW50ZXJZLCAwLCBmYWxzZSwgZ2FtZSwgMCkKZW5kCmxvY2FsIHN1Y2Nlc3MsIE5ldCA9IHBjYWxsKGZ1bmN0aW9uKCkKcmV0dXJuIHJlcXVpcmUoUmVwbGljYXRlZFN0b3JhZ2UuTW9kdWxlcy5OZXQpCmVuZCkKaWYgbm90IHN1Y2Nlc3MgdGhlbgp3YXJuKCJGYWlsZWQgdG8gbG9hZCBSZXBsaWNhdGVkU3RvcmFnZS5Nb2R1bGVzLk5ldDoiLCBOZXQpCnJldHVybgplbmQKbG9jYWwgZHJhZ29uSHVudGVyCmlmIG5vdCBOZXQuUmVtb3RlRnVuY3Rpb24gb3IgdHlwZShOZXQuUmVtb3RlRnVuY3Rpb24pIH49ICJmdW5jdGlvbiIgdGhlbgpkcmFnb25IdW50ZXIgPSBSZXBsaWNhdGVkU3RvcmFnZS5Nb2R1bGVzLk5ldDpGaW5kRmlyc3RDaGlsZCgiUkYvRHJhZ29uSHVudGVyIikKaWYgbm90IGRyYWdvbkh1bnRlciB0aGVuCmxvY2FsIHBvc3NpYmxlRm9sZGVycyA9IHsiVXRpbCIsICJSZW1vdGVzIiwgIlJ1bWJsZVYyIiwgIkFzc2V0cyIsICJDb21tb24iLCAiRlgifQpmb3IgXywgZm9sZGVyTmFtZSBpbiBpcGFpcnMocG9zc2libGVGb2xkZXJzKSBkbwpsb2NhbCBmb2xkZXIgPSBSZXBsaWNhdGVkU3RvcmFnZTpGaW5kRmlyc3RDaGlsZChmb2xkZXJOYW1lKQppZiBmb2xkZXIgYW5kIGZvbGRlcjpGaW5kRmlyc3RDaGlsZCgiUkYvRHJhZ29uSHVudGVyIikgdGhlbgpkcmFnb25IdW50ZXIgPSBmb2xkZXI6RmluZEZpcnN0Q2hpbGQoIlJGL0RyYWdvbkh1bnRlciIpCmJyZWFrCmVuZAplbmQKZW5kCmlmIG5vdCBkcmFnb25IdW50ZXIgdGhlbgp3YXJuKCJSRi9EcmFnb25IdW50ZXIgbm90IGZvdW5kIGluIGFueSBmb2xkZXIiKQpsb2NhbCBjb21tRiA9IFJlcGxpY2F0ZWRTdG9yYWdlLlJlbW90ZXMuQ29tbUZfCmlmIGNvbW1GIHRoZW4KbG9jYWwgc3VjY2VzcywgcXVlc3RTdGF0dXMgPSBwY2FsbChmdW5jdGlvbigpCnJldHVybiBjb21tRjpJbnZva2VTZXJ2ZXIoIkNoZWNrUXVlc3QiLCAiRHJhZ29uSHVudGVyIikKZW5kKQplbmQKcmV0dXJuCmVuZAplbHNlCmxvY2FsIHN1Y2Nlc3MsIHJlc3VsdCA9IHBjYWxsKE5ldC5SZW1vdGVGdW5jdGlvbiwgIkRyYWdvbkh1bnRlciIpCmlmIHN1Y2Nlc3MgYW5kIHJlc3VsdCB0aGVuCmRyYWdvbkh1bnRlciA9IHJlc3VsdAplbHNlCmRyYWdvbkh1bnRlciA9IFJlcGxpY2F0ZWRTdG9yYWdlLk1vZHVsZXMuTmV0OkZpbmRGaXJzdENoaWxkKCJSRi9EcmFnb25IdW50ZXIiKQppZiBub3QgZHJhZ29uSHVudGVyIHRoZW4KcmV0dXJuCmVuZAplbmQKZW5kCmlmIG5vdCBkcmFnb25IdW50ZXIgb3Igbm90IGRyYWdvbkh1bnRlcjpJc0EoIlJlbW90ZUZ1bmN0aW9uIikgdGhlbgp3YXJuKCJkcmFnb25IdW50ZXIgaXMgbm90IGEgdmFsaWQgUmVtb3RlRnVuY3Rpb246IiwgZHJhZ29uSHVudGVyKQpyZXR1cm4KZW5kCmxvY2FsIGZ1bmN0aW9uIGNoZWNrVGFza0NvbXBsZXRlZCgpCmZvciBfLCB2IGluIGlwYWlycyhQbGF5ZXJHdWkuTm90aWZpY2F0aW9uczpHZXRDaGlsZHJlbigpKSBkbwppZiB2OklzQSgiVGV4dExhYmVsIikgYW5kIHYuVGV4dDpmaW5kKCJUYXNrIGNvbXBsZXRlZCEiKSB0aGVuCnJldHVybiB0cnVlCmVuZAplbmQKcmV0dXJuIGZhbHNlCmVuZApsb2NhbCBmdW5jdGlvbiBzdWJtaXRRdWVzdCgpCnRvVGFyZ2V0RChkcmFnb25IdW50ZXJOUENQb3MsIHRydWUpCnRhc2sud2FpdCgzKQpsb2NhbCBjaGFyYWN0ZXIgPSB3YWl0Rm9yQ2hhcmFjdGVyKCkKbG9jYWwgcm9vdFBhcnQgPSBjaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydApsb2NhbCBkaXN0YW5jZSA9IGRyYWdvbkh1bnRlck5QQyBhbmQgZHJhZ29uSHVudGVyTlBDOkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZFJvb3RQYXJ0IikKYW5kIChyb290UGFydC5Qb3NpdGlvbiAtIGRyYWdvbkh1bnRlck5QQy5IdW1hbm9pZFJvb3RQYXJ0LlBvc2l0aW9uKS5NYWduaXR1ZGUKb3IgKHJvb3RQYXJ0LlBvc2l0aW9uIC0gZHJhZ29uSHVudGVyTlBDUG9zLlBvc2l0aW9uKS5NYWduaXR1ZGUKaWYgZGlzdGFuY2UgPiAxMCB0aGVuCnJldHVybiBmYWxzZQplbmQKdGFwU2NyZWVuQ2VudGVyKCkKdGFzay53YWl0KDEpCmxvY2FsIGRpYWxvZ3VlID0gUGxheWVyR3VpOkZpbmRGaXJzdENoaWxkKCJNYWluIikgYW5kIFBsYXllckd1aS5NYWluOkZpbmRGaXJzdENoaWxkKCJEaWFsb2d1ZSIpCmxvY2FsIG9wdGlvbjEgPSBkaWFsb2d1ZSBhbmQgZGlhbG9ndWU6RmluZEZpcnN0Q2hpbGQoIk9wdGlvbjEiKQpsb2NhbCBvcHRpb24xVGV4dExhYmVsID0gb3B0aW9uMSBhbmQgb3B0aW9uMTpGaW5kRmlyc3RDaGlsZCgiVGV4dExhYmVsIikKaWYgb3B0aW9uMVRleHRMYWJlbCBhbmQgKG9wdGlvbjFUZXh0TGFiZWwuVGV4dCA9PSAiU3VibWl0IiBvciBvcHRpb24xVGV4dExhYmVsLlRleHQgPT0gIkNsYWltIikgdGhlbgp0YXBTY3JlZW5BdEd1aUVsZW1lbnQob3B0aW9uMSkKcmV0dXJuIHRydWUKZW5kCnJldHVybiBmYWxzZQplbmQKc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB0YXNrLndhaXQoKSBkbwppZiAgX0cuZHJhZ29uaHVudGVycXVlc3QgdGhlbgpsb2NhbCBjaGFyYWN0ZXIgPSB3YWl0Rm9yQ2hhcmFjdGVyKCkKbG9jYWwgcm9vdFBhcnQgPSBjaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydAppZiBjaGVja1Rhc2tDb21wbGV0ZWQoKSB0aGVuCnRhc2tDb21wbGV0ZWQgPSB0cnVlCmVuZAppZiBub3QgaXNRdWVzdEFjdGl2ZSB0aGVuCmxvY2FsIHN1Y2Nlc3MsIHF1ZXN0U3RhdHVzID0gcGNhbGwoZnVuY3Rpb24oKQpyZXR1cm4gZHJhZ29uSHVudGVyOkludm9rZVNlcnZlcih7Q29udGV4dCA9ICJDaGVjayJ9KQplbmQpCmlmIHN1Y2Nlc3MgYW5kIHR5cGUocXVlc3RTdGF0dXMpID09ICJ0YWJsZSIgdGhlbgpsb2NhbCBxdWVzdE5hbWUgPSBxdWVzdFN0YXR1cy5UZXh0IG9yIHF1ZXN0U3RhdHVzWyJUZXh0Il0KaWYgcXVlc3ROYW1lIHRoZW4KX0cuQ3VycmVudFF1ZXN0ID0gcXVlc3ROYW1lCmlzUXVlc3RBY3RpdmUgPSB0cnVlCnRhc2tDb21wbGV0ZWQgPSBmYWxzZQpjaGVjayA9IHRydWUKZWxzZQpfRy5DdXJyZW50UXVlc3QgPSBuaWwKZW5kCmVsc2UKd2FybigiRmFpbGVkIHRvIGNoZWNrIHF1ZXN0OiIsIHF1ZXN0U3RhdHVzKQpfRy5DdXJyZW50UXVlc3QgPSBuaWwKZW5kCmVuZAppZiBub3QgX0cuQ3VycmVudFF1ZXN0IHRoZW4KbG9jYWwgZGlzdGFuY2UgPSBkcmFnb25IdW50ZXJOUEMgYW5kIGRyYWdvbkh1bnRlck5QQzpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWRSb290UGFydCIpCmFuZCAocm9vdFBhcnQuUG9zaXRpb24gLSBkcmFnb25IdW50ZXJOUEMuSHVtYW5vaWRSb290UGFydC5Qb3NpdGlvbikuTWFnbml0dWRlCm9yIChyb290UGFydC5Qb3NpdGlvbiAtIGRyYWdvbkh1bnRlck5QQ1Bvcy5Qb3NpdGlvbikuTWFnbml0dWRlCmlmIGRpc3RhbmNlID4gMTAgdGhlbgp0b1RhcmdldEQoZHJhZ29uSHVudGVyTlBDUG9zLCB0cnVlKQplbmQKbG9jYWwgZGlhbG9ndWUgPSBQbGF5ZXJHdWk6RmluZEZpcnN0Q2hpbGQoIk1haW4iKSBhbmQgUGxheWVyR3VpLk1haW46RmluZEZpcnN0Q2hpbGQoIkRpYWxvZ3VlIikKbG9jYWwgb3B0aW9uMSA9IGRpYWxvZ3VlIGFuZCBkaWFsb2d1ZTpGaW5kRmlyc3RDaGlsZCgiT3B0aW9uMSIpCmxvY2FsIG9wdGlvbjFUZXh0TGFiZWwgPSBvcHRpb24xIGFuZCBvcHRpb24xOkZpbmRGaXJzdENoaWxkKCJUZXh0TGFiZWwiKQppZiBub3QgZGlhbG9ndWUgb3Igbm90IGRpYWxvZ3VlLlZpc2libGUgdGhlbgppZiBjaGVjayB0aGVuCnRhcFNjcmVlbkNlbnRlcigpCnRhc2sud2FpdCgwLjUpCmRpYWxvZ3VlID0gUGxheWVyR3VpOkZpbmRGaXJzdENoaWxkKCJNYWluIikgYW5kIFBsYXllckd1aS5NYWluOkZpbmRGaXJzdENoaWxkKCJEaWFsb2d1ZSIpCm9wdGlvbjEgPSBkaWFsb2d1ZSBhbmQgZGlhbG9ndWU6RmluZEZpcnN0Q2hpbGQoIk9wdGlvbjEiKQpvcHRpb24xVGV4dExhYmVsID0gb3B0aW9uMSBhbmQgb3B0aW9uMTpGaW5kRmlyc3RDaGlsZCgiVGV4dExhYmVsIikKZW5kCmVsc2VpZiBvcHRpb24xVGV4dExhYmVsIGFuZCBkaWFsb2d1ZS5WaXNpYmxlIHRoZW4KbG9jYWwgb3B0aW9uVGV4dCA9IG9wdGlvbjFUZXh0TGFiZWwuVGV4dApjaGVjayA9IGZhbHNlCmlmIChvcHRpb25UZXh0ID09ICJIdW50IiBvciBvcHRpb25UZXh0ID09ICJTdXJlIikgYW5kIG9wdGlvbjFUZXh0TGFiZWwuVmlzaWJsZSB0aGVuCmxvY2FsIHN1Y2Nlc3MsIGVyciA9IHBjYWxsKGZ1bmN0aW9uKCkKR3VpU2VydmljZS5TZWxlY3RlZE9iamVjdCA9IG9wdGlvbjEKZW5kKQppZiBzdWNjZXNzIHRoZW4KVmlydHVhbElucHV0TWFuYWdlcjpTZW5kS2V5RXZlbnQodHJ1ZSwgRW51bS5LZXlDb2RlLlJldHVybiwgZmFsc2UsIGdhbWUpCnRhc2sud2FpdCgwLjEpClZpcnR1YWxJbnB1dE1hbmFnZXI6U2VuZEtleUV2ZW50KGZhbHNlLCBFbnVtLktleUNvZGUuUmV0dXJuLCBmYWxzZSwgZ2FtZSkKdGFzay53YWl0KDAuNSkKR3VpU2VydmljZS5TZWxlY3RlZE9iamVjdCA9IG5pbAp0YXBTY3JlZW5DZW50ZXIoKQplbHNlCnRhcFNjcmVlbkF0R3VpRWxlbWVudChvcHRpb24xKQplbmQKZW5kCmVuZAplbHNlaWYgX0cuQ3VycmVudFF1ZXN0IHRoZW4KaWYgZ2FtZTpHZXRTZXJ2aWNlKCJQbGF5ZXJzIikuTG9jYWxQbGF5ZXIuUGxheWVyR3VpLk1haW4uRGlhbG9ndWUuVmlzaWJsZSB0aGVuCnRhcFNjcmVlbkNlbnRlcigpCmVsc2UKbG9jYWwgcXVlc3RUZXh0ID0gdG9zdHJpbmcoX0cuQ3VycmVudFF1ZXN0KTpsb3dlcigpCmlmIHF1ZXN0VGV4dDpmaW5kKCJ2ZW5vbW91cyIpIHRoZW4KbG9jYWwgdmVub21vdXNQb3MgPSBDRnJhbWUubmV3KDQ4NzkuOTE5OTIsIDEwOTMuNjg4OTYsIDExMDQuMDA4MDYsIDAuOTQzNzk1NDQzLCAwLCAwLjMzMDUzMDEzNywgMCwgMSwgMCwgLTAuMzMwNTMwMTM3LCAwLCAwLjk0Mzc5NTQ0MykKdG9UYXJnZXREKHZlbm9tb3VzUG9zKQpsb2NhbCBlbmVtaWVzS2lsbGVkID0gMApmb3IgXywgZW5lbXkgaW4gaXBhaXJzKFdvcmtzcGFjZS5FbmVtaWVzOkdldENoaWxkcmVuKCkpIGRvCmlmIGVuZW15Lk5hbWU6bG93ZXIoKTpmaW5kKCJ2ZW5vbW91cyIpIGFuZCBlbmVteTpGaW5kRmlyc3RDaGlsZCgiSHVtYW5vaWQiKSBhbmQgZW5lbXkuSHVtYW5vaWQuSGVhbHRoID4gMCB0aGVuCnJlcGVhdApjaGFyYWN0ZXIgPSB3YWl0Rm9yQ2hhcmFjdGVyKCkKdG9UYXJnZXREKGVuZW15Lkh1bWFub2lkUm9vdFBhcnQuQ0ZyYW1lICogTWV0aG9kRmFybSkKRXF1aXBXZWFwb24oX0cuU2VsZWN0V2VhcG9uKQpCcmluZ01vYiA9IHRydWUKRmFzdEF0dGFjayA9IHRydWUKZW5lbXkuSHVtYW5vaWRSb290UGFydC5DYW5Db2xsaWRlID0gZmFsc2UKZW5lbXkuSHVtYW5vaWQuV2Fsa1NwZWVkID0gMAplbmVteS5IdW1hbm9pZDpDaGFuZ2VTdGF0ZSgxMSkKZW5lbXkuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTQpCmVuZW15Lkh1bWFub2lkUm9vdFBhcnQuU2l6ZSA9IFZlY3RvcjMubmV3KDgwLCA4MCwgODApCnNldGhpZGRlbnByb3BlcnR5KExvY2FsUGxheWVyLCAiU2ltdWxhdGlvblJhZGl1cyIsIG1hdGguaHVnZSkKdGFzay53YWl0KCkKdW50aWwgbm90IGVuZW15LlBhcmVudCBvciBlbmVteS5IdW1hbm9pZC5IZWFsdGggPD0gMCBvciB0YXNrQ29tcGxldGVkIG9yIGNoZWNrVGFza0NvbXBsZXRlZCgpCmVuZW1pZXNLaWxsZWQgPSBlbmVtaWVzS2lsbGVkICsgMQppZiBlbmVtaWVzS2lsbGVkID49IDMgb3IgdGFza0NvbXBsZXRlZCBvciBjaGVja1Rhc2tDb21wbGV0ZWQoKSB0aGVuCl9HLkN1cnJlbnRRdWVzdCA9IG5pbAppc1F1ZXN0QWN0aXZlID0gZmFsc2UKdGFza0NvbXBsZXRlZCA9IGZhbHNlCnN1Ym1pdFF1ZXN0KCkKYnJlYWsKZW5kCmVuZAplbmQKZWxzZWlmIHF1ZXN0VGV4dDpmaW5kKCJkZXN0cm95IDEwIHRyZWVzIikgdGhlbgpsb2NhbCBwb3NpdGlvbjEgPSBDRnJhbWUubmV3KDUyMzcuMDE1NjIsIDEwMDQuMTMxOTYsIDQzMC44NDE5OCwgMC41NjA3ODMzODYsIDEuMzMwNjg3MTJlLTA4LCAtMC44Mjc5NjI1NzcsIC0xLjExOTM4NDU5ZS0wOCwgMSwgOC40OTAxNzY1NmUtMDksIDAuODI3OTYyNTc3LCA0LjUwNjkzNTI3ZS0wOSwgMC41NjA3ODMzODYpCmxvY2FsIHBvc2l0aW9uMiA9IENGcmFtZS5uZXcoNTM0NS40ODc3OSwgMTAwNC4xMzE5NiwgMzU3LjUxMTI2MSwgLTAuNDUyNTQ0OTU3LCA2LjUyNzEwNjY4ZS0wOCwgMC44OTE3NDE1NzQsIC0yLjQ3MDA1NjY5ZS0wOCwgMSwgLTguNTczMDE5OThlLTA4LCAtMC44OTE3NDE1NzQsIC02LjA4MjMyOTY2ZS0wOCwgLTAuNDUyNTQ0OTU3KQpsb2NhbCBjdXJyZW50VGFyZ2V0ID0gcG9zaXRpb24xCmxvY2FsIGlzTW92aW5ndG9UYXJnZXRpdGlvbjEgPSB0cnVlCndoaWxlIHRhc2sud2FpdCgwKSBkbwppZiBub3QgX0cuZHJhZ29uaHVudGVycXVlc3QgdGhlbiBicmVhayBlbmQKbG9jYWwgZGlzdHRvVGFyZ2V0MSA9IChyb290UGFydC5Qb3NpdGlvbiAtIHBvc2l0aW9uMS5Qb3NpdGlvbikuTWFnbml0dWRlCmxvY2FsIGRpc3R0b1RhcmdldDIgPSAocm9vdFBhcnQuUG9zaXRpb24gLSBwb3NpdGlvbjIuUG9zaXRpb24pLk1hZ25pdHVkZQppZiBkaXN0dG9UYXJnZXQxID49IDIwIGFuZCBkaXN0dG9UYXJnZXQyID49IDIwIHRoZW4KdG9UYXJnZXREKGN1cnJlbnRUYXJnZXQpCmVsc2UKaWYgZGlzdHRvVGFyZ2V0MSA8PSA1IHRoZW4KRXF1aXBBbGxXZWFwb24oKQpfRy5Vc2Vza2lsbCA9IHRydWUKaWYgaXNNb3Zpbmd0b1RhcmdldGl0aW9uMSB0aGVuCmN1cnJlbnRUYXJnZXQgPSBwb3NpdGlvbjIKaXNNb3Zpbmd0b1RhcmdldGl0aW9uMSA9IGZhbHNlCnRvVGFyZ2V0RChjdXJyZW50VGFyZ2V0KQplbmQKZWxzZWlmIGRpc3R0b1RhcmdldDIgPD0gNSB0aGVuCkVxdWlwQWxsV2VhcG9uKCkKX0cuVXNlc2tpbGwgPSB0cnVlCmlmIG5vdCBpc01vdmluZ3RvVGFyZ2V0aXRpb24xIHRoZW4KY3VycmVudFRhcmdldCA9IHBvc2l0aW9uMQppc01vdmluZ3RvVGFyZ2V0aXRpb24xID0gdHJ1ZQp0b1RhcmdldEQoY3VycmVudFRhcmdldCkKZW5kCmVuZAplbmQKaWYgdGFza0NvbXBsZXRlZCBvciBjaGVja1Rhc2tDb21wbGV0ZWQoKSB0aGVuCl9HLkN1cnJlbnRRdWVzdCA9IG5pbApfRy5Vc2Vza2lsbCA9IGZhbHNlCmlzUXVlc3RBY3RpdmUgPSBmYWxzZQp0YXNrQ29tcGxldGVkID0gZmFsc2UKc3VibWl0UXVlc3QoKQpicmVhawplbmQKZW5kCmVsc2VpZiBxdWVzdFRleHQ6ZmluZCgiaHlkcmEgZW5mb3JjZXJzIikgdGhlbgpsb2NhbCBlbmZvcmNlUG9zID0gQ0ZyYW1lLm5ldyg0NTQ3LjExNTIzLCAxMDAzLjEwMTk5LCAzMzQuMTk1MDA3LCAwLjM4ODgxMDQ1NiwgLTAsIC0wLjkyMTMxNzkzNSwgMCwgMSwgLTAsIDAuOTIxMzE3OTM1LCAwLCAwLjM4ODgxMDQ1NikKdG9UYXJnZXREKGVuZm9yY2VQb3MpCmxvY2FsIGVuZW1pZXNLaWxsZWQgPSAwCmZvciBfLCBlbmVteSBpbiBpcGFpcnMoV29ya3NwYWNlLkVuZW1pZXM6R2V0Q2hpbGRyZW4oKSkgZG8KaWYgZW5lbXkuTmFtZTpsb3dlcigpOmZpbmQoImh5ZHJhIGVuZm9yY2VyIikgYW5kIGVuZW15OkZpbmRGaXJzdENoaWxkKCJIdW1hbm9pZCIpIGFuZCBlbmVteS5IdW1hbm9pZC5IZWFsdGggPiAwIHRoZW4KcmVwZWF0CmNoYXJhY3RlciA9IHdhaXRGb3JDaGFyYWN0ZXIoKQp0b1RhcmdldEQoZW5lbXkuSHVtYW5vaWRSb290UGFydC5DRnJhbWUgKiBNZXRob2RGYXJtKQpFcXVpcFdlYXBvbihfRy5TZWxlY3RXZWFwb24pCkJyaW5nTW9iID0gdHJ1ZQpGYXN0QXR0YWNrID0gdHJ1ZQplbmVteS5IdW1hbm9pZFJvb3RQYXJ0LkNhbkNvbGxpZGUgPSBmYWxzZQplbmVteS5IdW1hbm9pZC5XYWxrU3BlZWQgPSAwCmVuZW15Lkh1bWFub2lkOkNoYW5nZVN0YXRlKDExKQplbmVteS5IdW1hbm9pZDpDaGFuZ2VTdGF0ZSgxNCkKZW5lbXkuSHVtYW5vaWRSb290UGFydC5TaXplID0gVmVjdG9yMy5uZXcoODAsIDgwLCA4MCkKc2V0aGlkZGVucHJvcGVydHkoTG9jYWxQbGF5ZXIsICJTaW11bGF0aW9uUmFkaXVzIiwgbWF0aC5odWdlKQp0YXNrLndhaXQoKQp1bnRpbCBub3QgZW5lbXkuUGFyZW50IG9yIGVuZW15Lkh1bWFub2lkLkhlYWx0aCA8PSAwIG9yIHRhc2tDb21wbGV0ZWQgb3IgY2hlY2tUYXNrQ29tcGxldGVkKCkKZW5lbWllc0tpbGxlZCA9IGVuZW1pZXNLaWxsZWQgKyAxCmlmIGVuZW1pZXNLaWxsZWQgPj0gMyBvciB0YXNrQ29tcGxldGVkIG9yIGNoZWNrVGFza0NvbXBsZXRlZCgpIHRoZW4KX0cuQ3VycmVudFF1ZXN0ID0gbmlsCmlzUXVlc3RBY3RpdmUgPSBmYWxzZQp0YXNrQ29tcGxldGVkID0gZmFsc2UKc3VibWl0UXVlc3QoKQpicmVhawplbmQKZW5kCmVuZAplbHNlCl9HLkN1cnJlbnRRdWVzdCA9IG5pbAppc1F1ZXN0QWN0aXZlID0gZmFsc2UKdGFza0NvbXBsZXRlZCA9IGZhbHNlCmVuZAplbmQKZW5kCmVuZAplbmQKc3RvcE1vdmVtZW50KCkKZW5kKQpwYWdlMTY6VG9nZ2xlKCJBdXRvIENvbGxldEVtYmVyRmxhbWVcbuC4reC4reC5guC4leC5ieC5gOC4geC5h+C4muC4peC4ueC4geC5hOC4nyIsIF9HLkF1dG9FbWJlciwgZnVuY3Rpb24odmFsdWUpCl9HLkF1dG9FbWJlciA9IHZhbHVlCnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgX0cuQXV0b0VtYmVyIGRvIHdhaXQoKQpwY2FsbChmdW5jdGlvbigpCmlmIHdvcmtzcGFjZTpGaW5kRmlyc3RDaGlsZCgiRW1iZXJUZW1wbGF0ZSIpIHRoZW4KZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyLkNoYXJhY3Rlci5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSA9IHdvcmtzcGFjZS5FbWJlclRlbXBsYXRlLlBhcnQuQ0ZyYW1lCmVuZAplbmQpCmVuZAplbmQpCmVuZCkKcGFnZTE2OkJ1dHRvbigiQ3JhZnQgVm9sY2FuaWMgTWFnbmV0XG7guITguKPguLLguJ/guJfguYzguJXguLDguYDguIHguLXguKLguIciLGZ1bmN0aW9uKCkKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpOldhaXRGb3JDaGlsZCgiUmVtb3RlcyIpOldhaXRGb3JDaGlsZCgiQ29tbUZfIik6SW52b2tlU2VydmVyKCJDcmFmdEl0ZW0iLCJDcmFmdCIsIlZvbGNhbmljIE1hZ25ldCIpCmVuZCkKcGFnZTE2OlNlcGVyYXRvcigiVm9jYWxuby/guKDguLnguYDguILguLLguYTguJ8iKQpsb2NhbCBmdW5jdGlvbiBmaXJlUHJveGltaXR5UHJvbXB0KHByb21wdCkKaWYgcHJvbXB0IGFuZCBwcm9tcHQ6SXNBKCJQcm94aW1pdHlQcm9tcHQiKSB0aGVuCmlmIG5vdCBwcm9tcHQuRW5hYmxlZCB0aGVuCndhcm4oIlByb3hpbWl0eVByb21wdCDguJbguLnguIHguJvguLTguJTguYPguIrguYnguIfguLLguJkiKQpyZXR1cm4gZmFsc2UKZW5kCnByb21wdDpJbnB1dEhvbGRCZWdpbigpCnRhc2sud2FpdChwcm9tcHQuSG9sZER1cmF0aW9uKQpwcm9tcHQ6SW5wdXRIb2xkRW5kKCkKcHJpbnQoIuC4geC4lCBQcm94aW1pdHlQcm9tcHQg4Liq4Liz4LmA4Lij4LmH4LiIIikKcmV0dXJuIHRydWUKZWxzZQp3YXJuKCLguYTguKHguYjguJ7guJogUHJveGltaXR5UHJvbXB0IOC4q+C4o+C4t+C4reC5hOC4oeC5iOC4luC4ueC4geC4leC5ieC4reC4hyIpCnJldHVybiBmYWxzZQplbmQKZW5kCnBhZ2UxNjpUb2dnbGUoIkF1dG8gVm9sY2FubyBJc2xhbmRcbuC4reC4reC5guC4leC5ieC5gOC4geC4suC4sOC4oOC4ueC5gOC4guC4suC5hOC4nyIsIF9HLnZvbGNhbm9Sb2NrcywgZnVuY3Rpb24odmFsdWUpCl9HLnZvbGNhbm9Sb2NrcyA9IHZhbHVlCnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgdGFzay53YWl0KDAuMSkgZG8KaWYgX0cudm9sY2Fub1JvY2tzIHRoZW4KbG9jYWwgcGxheWVyID0gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyCmxvY2FsIGlzRmlnaHRpbmcgPSBmYWxzZQpsb2NhbCB2b2xjYW5vUm9ja3NGb2xkZXIgPSB3b3Jrc3BhY2UuTWFwLlByZWhpc3RvcmljSXNsYW5kLkNvcmU6RmluZEZpcnN0Q2hpbGQoIlZvbGNhbm9Sb2NrcyIpCmxvY2FsIGhhc0JyaWdodFJlZFJvY2sgPSBmYWxzZQppZiB2b2xjYW5vUm9ja3NGb2xkZXIgdGhlbgpmb3IgXywgdiBpbiBwYWlycyh2b2xjYW5vUm9ja3NGb2xkZXI6R2V0Q2hpbGRyZW4oKSkgZG8KaWYgKHYuTmFtZSA9PSAiUm9jayIgb3Igdi5OYW1lID09ICJ2b2xjYW5vcm9jayIpIGFuZCB2OklzQSgiQmFzZVBhcnQiKSB0aGVuCmxvY2FsIGJyaWNrQ29sb3JOYW1lID0gdi5Ccmlja0NvbG9yLk5hbWUKbG9jYWwgciA9IG1hdGguZmxvb3Iodi5Db2xvci5SICogMjU1KQpsb2NhbCBnID0gbWF0aC5mbG9vcih2LkNvbG9yLkcgKiAyNTUpCmxvY2FsIGIgPSBtYXRoLmZsb29yKHYuQ29sb3IuQiAqIDI1NSkKbG9jYWwgbWF0ZXJpYWwgPSB2Lk1hdGVyaWFsCmlmIGJyaWNrQ29sb3JOYW1lID09ICJCcmlnaHQgcmVkIiBhbmQgciA9PSAxODUgYW5kIGcgPT0gNTMgYW5kIGIgPT0gNTYgYW5kIG1hdGVyaWFsID09IEVudW0uTWF0ZXJpYWwuTmVvbiB0aGVuCmhhc0JyaWdodFJlZFJvY2sgPSB0cnVlCmJyZWFrCmVuZAplbmQKZW5kCmVuZApsb2NhbCBoYXNMYXZhR29sZW0gPSBmYWxzZQpmb3IgXywgZW5lbXkgaW4gcGFpcnMod29ya3NwYWNlLkVuZW1pZXM6R2V0Q2hpbGRyZW4oKSkgZG8KaWYgc3RyaW5nLmZpbmQoZW5lbXkuTmFtZSwgIkxhdmEgR29sZW0iKSB0aGVuCmhhc0xhdmFHb2xlbSA9IHRydWUKYnJlYWsKZW5kCmVuZAppZiBub3QgaGFzQnJpZ2h0UmVkUm9jayBhbmQgbm90IGhhc0xhdmFHb2xlbSBhbmQgbm90IGlzRmlnaHRpbmcgdGhlbgpwcmludCgi4LmE4Lih4LmI4Lih4Li1IFZvbGNhbm9Sb2NrcyDguKrguLXguYHguJTguIcg4LmB4Lil4LiwIExhdmEgR29sZW0sIOC5hOC4m+C4geC4lCBQcm94aW1pdHlQcm9tcHQiKQpsb2NhbCByZWxpY0NGcmFtZSA9IHJlbGljLldvcmxkUGl2b3QKbG9jYWwgb2Zmc2V0ID0gQ0ZyYW1lLm5ldygwLCAtNTAsIDMwKQpsb2NhbCBuZXdDRnJhbWUgPSByZWxpY0NGcmFtZSAqIG9mZnNldApodW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSA9IG5ld0NGcmFtZQpsb2NhbCBhY3RpdmF0aW9uUHJvbXB0ID0gY29yZTpGaW5kRmlyc3RDaGlsZCgiQWN0aXZhdGlvblByb21wdCIpCmxvY2FsIHByb21wdCA9IGFjdGl2YXRpb25Qcm9tcHQgYW5kIGFjdGl2YXRpb25Qcm9tcHQ6RmluZEZpcnN0Q2hpbGQoIlByb3hpbWl0eVByb21wdCIpCmlmIHByb21wdCB0aGVuCnByaW50KCLguJ7guJogUHJveGltaXR5UHJvbXB0LCDguIHguLPguKXguLHguIfguIHguJQuLi4iKQpsb2NhbCBzdWNjZXNzID0gZmlyZVByb3hpbWl0eVByb21wdChwcm9tcHQpCmlmIHN1Y2Nlc3MgdGhlbgpwcmludCgi4Lij4Lit4LmD4Lir4LmJIFByb3hpbWl0eVByb21wdCDguKvguLLguKLguYTguJsiKQpyZXBlYXQKdGFzay53YWl0KDAuMSkKZ2FtZTpHZXRTZXJ2aWNlKCJWaXJ0dWFsSW5wdXRNYW5hZ2VyIik6U2VuZEtleUV2ZW50KHRydWUsIEVudW0uS2V5Q29kZS5FLCBmYWxzZSwgZ2FtZSkKdW50aWwgbm90IHByb21wdC5QYXJlbnQgb3Igbm90IF9HLnZvbGNhbm9Sb2NrcwpnYW1lOkdldFNlcnZpY2UoIlZpcnR1YWxJbnB1dE1hbmFnZXIiKTpTZW5kS2V5RXZlbnQodHJ1ZSwgRW51bS5LZXlDb2RlLkUsIGZhbHNlLCBnYW1lKQpnYW1lOkdldFNlcnZpY2UoIlZpcnR1YWxJbnB1dE1hbmFnZXIiKTpTZW5kS2V5RXZlbnQoZmFsc2UsIEVudW0uS2V5Q29kZS5FLCBmYWxzZSwgZ2FtZSkKcHJpbnQoIuC4reC4teC5gOC4p+C4meC4leC5jOC5gOC4o+C4tOC5iOC4oeC5geC4peC5ieC4pyBQcm94aW1pdHlQcm9tcHQg4Lir4Liy4Lii4LmE4LibIikKZW5kCmVsc2UKd2Fybigi4LmE4Lih4LmI4Lie4LiaIFByb3hpbWl0eVByb21wdCIpCmVuZAplbmQKbG9jYWwgZm91bmRCcmlnaHRSZWRSb2NrID0gZmFsc2UKaWYgdm9sY2Fub1JvY2tzRm9sZGVyIHRoZW4KZm9yIF8sIHYgaW4gcGFpcnModm9sY2Fub1JvY2tzRm9sZGVyOkdldENoaWxkcmVuKCkpIGRvCmlmIG5vdCBfRy52b2xjYW5vUm9ja3MgdGhlbiBicmVhayBlbmQKaWYgKHYuTmFtZSA9PSAiUm9jayIgb3Igdi5OYW1lID09ICJ2b2xjYW5vcm9jayIpIGFuZCB2OklzQSgiQmFzZVBhcnQiKSB0aGVuCmxvY2FsIGJyaWNrQ29sb3JOYW1lID0gdi5Ccmlja0NvbG9yLk5hbWUKbG9jYWwgciA9IG1hdGguZmxvb3Iodi5Db2xvci5SICogMjU1KQpsb2NhbCBnID0gbWF0aC5mbG9vcih2LkNvbG9yLkcgKiAyNTUpCmxvY2FsIGIgPSBtYXRoLmZsb29yKHYuQ29sb3IuQiAqIDI1NSkKbG9jYWwgbWF0ZXJpYWwgPSB2Lk1hdGVyaWFsCmlmIGJyaWNrQ29sb3JOYW1lID09ICJCcmlnaHQgcmVkIiBhbmQgciA9PSAxODUgYW5kIGcgPT0gNTMgYW5kIGIgPT0gNTYgYW5kIG1hdGVyaWFsID09IEVudW0uTWF0ZXJpYWwuTmVvbiB0aGVuCmZvdW5kQnJpZ2h0UmVkUm9jayA9IHRydWUKaXNGaWdodGluZyA9IHRydWUKcHJpbnQoIuC4nuC4miB2b2xjYW5vcm9jayDguKrguLXguYHguJTguIcsIOC5gOC4o+C4tOC5iOC4oeC4leC4tSIpCnJlcGVhdAp0YXNrLndhaXQoKQpQb3NpdGlvblNraWxsTWFzdGVyeURldmlsRnJ1aXQgPSB2LlBvc2l0aW9uCnRvVGFyZ2V0KHYuQ0ZyYW1lICogQ0ZyYW1lLm5ldygwLCAyMCwgMCkpCkVxdWlwQWxsV2VhcG9uKCkKX0cuVXNlc2tpbGwgPSB0cnVlCnVudGlsIHYuQnJpY2tDb2xvci5OYW1lIH49ICJCcmlnaHQgcmVkIiBvciBub3Qgdi5QYXJlbnQgb3Igbm90IF9HLnZvbGNhbm9Sb2NrcwpfRy5Vc2Vza2lsbCA9IGZhbHNlCmlzRmlnaHRpbmcgPSBmYWxzZQpwcmludCgi4LiV4Li1IHZvbGNhbm9yb2NrIOC5gOC4quC4o+C5h+C4iOC5geC4peC5ieC4pyIpCmJyZWFrCmVuZAplbmQKZW5kCmVuZAppZiBub3QgZm91bmRCcmlnaHRSZWRSb2NrIHRoZW4KbG9jYWwgZm91bmRHb2xlbSA9IGZhbHNlCmZvciBfLCBlbmVteSBpbiBwYWlycyh3b3Jrc3BhY2UuRW5lbWllczpHZXRDaGlsZHJlbigpKSBkbwppZiBub3QgX0cudm9sY2Fub1JvY2tzIHRoZW4gYnJlYWsgZW5kCmlmIHN0cmluZy5maW5kKGVuZW15Lk5hbWUsICJMYXZhIEdvbGVtIikgdGhlbgpmb3VuZEdvbGVtID0gdHJ1ZQppc0ZpZ2h0aW5nID0gdHJ1ZQpwcmludCgi4Lie4LiaIExhdmEgR29sZW0sIOC5gOC4o+C4tOC5iOC4oeC4leC4tSIpCnJlcGVhdAp0b1RhcmdldChlbmVteS5IdW1hbm9pZFJvb3RQYXJ0LkNGcmFtZSAqIE1ldGhvZEZhcm0pCkVxdWlwV2VhcG9uKF9HLlNlbGVjdFdlYXBvbikKQnJpbmdNb2IgPSB0cnVlCkZhc3RBdHRhY2sgPSB0cnVlCl9HLlVzZXNraWxsID0gZmFsc2UKZW5lbXkuSHVtYW5vaWRSb290UGFydC5DYW5Db2xsaWRlID0gZmFsc2UKZW5lbXkuSHVtYW5vaWQuV2Fsa1NwZWVkID0gMAplbmVteS5IdW1hbm9pZDpDaGFuZ2VTdGF0ZSgxMSkKZW5lbXkuSHVtYW5vaWQ6Q2hhbmdlU3RhdGUoMTQpCmVuZW15Lkh1bWFub2lkUm9vdFBhcnQuU2l6ZSA9IFZlY3RvcjMubmV3KDgwLCA4MCwgODApCnNldGhpZGRlbnByb3BlcnR5KHBsYXllciwgIlNpbXVsYXRpb25SYWRpdXMiLCBtYXRoLmh1Z2UpCnRhc2sud2FpdCgwLjEpCnVudGlsIG5vdCBlbmVteS5QYXJlbnQgb3IgZW5lbXkuSHVtYW5vaWQuSGVhbHRoIDw9IDAgb3Igbm90IF9HLnZvbGNhbm9Sb2NrcwpCcmluZ01vYiA9IGZhbHNlCkZhc3RBdHRhY2sgPSBmYWxzZQppc0ZpZ2h0aW5nID0gZmFsc2UKcHJpbnQoIuC4leC4tSBMYXZhIEdvbGVtIOC5gOC4quC4o+C5h+C4iOC5geC4peC5ieC4pyIpCmJyZWFrCmVuZAplbmQKaWYgbm90IGZvdW5kR29sZW0gdGhlbgpwcmludCgi4LmE4Lih4LmI4Lie4LiaIExhdmEgR29sZW0sIOC4o+C4rSBWb2xjYW5vUm9ja3Mg4LiV4LmI4Lit4LmE4LibLi4uIikKZW5kCmVuZAplbHNlCnByaW50KCLguJvguLTguJQgQXV0byBWb2xjYW5vIElzbGFuZCIpCl9HLlVzZXNraWxsID0gZmFsc2UKQnJpbmdNb2IgPSBmYWxzZQpGYXN0QXR0YWNrID0gZmFsc2UKYnJlYWsKZW5kCmVuZAplbmQpCmVuZCkKcGFnZTE2OlRvZ2dsZSgiQXV0byBDb2xsZWN0IEJvbmVcbuC5gOC4geC5h+C4muC4geC4o+C4sOC4lOC4ueC4geC5hOC4lOC5guC4meC5gOC4quC4suC4o+C5jCIsZmFsc2UsZnVuY3Rpb24odmFsdWUpCl9HLkNvbGxlY3RCb25lID0gdmFsdWUKZW5kKQpzcGF3bihmdW5jdGlvbigpCndoaWxlIHRhc2sud2FpdCgpIGRvCmlmIF9HLkNvbGxlY3RCb25lIHRoZW4KZm9yIF8sIHYgaW4gcGFpcnMoZ2FtZS5Xb3Jrc3BhY2U6R2V0Q2hpbGRyZW4oKSkgZG8KaWYgdi5OYW1lID09ICJEaW5vQm9uZSIgdGhlbgp0b1RhcmdldCh2LkNGcmFtZSAqIENGcmFtZS5uZXcoMCwgMiwgMCkpCmVuZAplbmQKZW5kCmVuZAplbmQpCnBhZ2UxNjpUb2dnbGUoIlRlbHBvcnQgVG8gTlBDIEZvc3NpbCBFeHBlcnRcbuC5gOC4l+C5gOC4peC4nuC4reC4o+C5jOC4leC5hOC4m+C4q+C4suC4leC4seC4p+C4peC4sOC4hOC4o+C4hOC4o+C4suC4n+C4guC4reC4hyIsZmFsc2UsZnVuY3Rpb24odmFsdWUpCl9HLlRucGMgPSB2YWx1ZQplbmQpCnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgdGFzay53YWl0KCkgZG8KaWYgX0cuVG5wYyB0aGVuCmlmIHdvcmtzcGFjZS5NYXAuUHJlaGlzdG9yaWNJc2xhbmQuQ29yZTpGaW5kRmlyc3RDaGlsZCgiRm9zc2lsRXhwZXJ0U3Bhd24iKSB0aGVuCnRvVGFyZ2V0KHdvcmtzcGFjZS5NYXAuUHJlaGlzdG9yaWNJc2xhbmQuQ29yZS5Gb3NzaWxFeHBlcnRTcGF3bi5DRnJhbWUgKiBDRnJhbWUubmV3KDAsNSwwKSkKZW5kCmVuZAplbmQKZW5kKQpwYWdlMTE6U2VwZXJhdG9yKCJIYWtpLExlZ2VuZFN3b3JkL+C4ruC4suC4hOC4tCzguJTguLLguJrguYLguIvguYLguKUiKQpwYWdlMTE6VG9nZ2xlKCJBdXRvQnV5TGVnZW5kYXJ5U3dvcmRcbuC4reC4reC5guC4leC5ieC4i+C4t+C5ieC4reC4lOC4suC4muC5guC4i+C5guC4pSIsIF9HLkF1dG9CdXlMZWdlbmRhcnlTd29yZCwgZnVuY3Rpb24odmFsdWUpCl9HLkF1dG9CdXlMZWdlbmRhcnlTd29yZCA9IHZhbHVlCnRhc2suc3Bhd24oZnVuY3Rpb24oKQp3aGlsZSB0YXNrLndhaXQoKSBkbwpwY2FsbChmdW5jdGlvbigpCmlmIF9HLkF1dG9CdXlMZWdlbmRhcnlTd29yZCB0aGVuCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkxlZ2VuZGFyeVN3b3JkRGVhbGVyIiwgIjEiKQpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJMZWdlbmRhcnlTd29yZERlYWxlciIsICIyIikKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiTGVnZW5kYXJ5U3dvcmREZWFsZXIiLCAiMyIpCmVuZAplbmQpCmVuZAplbmQpCmVuZCkKcGFnZTExOlRvZ2dsZSgiQXV0b0J1eUxlZ2VuZGFyeVN3b3JkSG9wXG7guK3guK3guYLguJXguYnguIvguLfguYnguK3guJTguLLguJrguYLguIvguYLguKXguKLguYnguLLguKLguIvguLTguJ8iLCBfRy5TZXR0aW5ncy5BdXRvQnV5TGVnZW5kYXJ5U3dvcmRIb3AsIGZ1bmN0aW9uKHZhbHVlKQpfRy5BdXRvQnV5TGVnZW5kYXJ5U3dvcmRIb3AgPSB2YWx1ZQpfRy5TZXR0aW5ncy5BdXRvQnV5TGVnZW5kYXJ5U3dvcmRIb3AgPSB2YWx1ZQpTYXZlU2V0dGluZ3MoKQplbmQpCnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgdGFzay53YWl0KCkgZG8KcGNhbGwoZnVuY3Rpb24oKQppZiBfRy5TZXR0aW5ncy5BdXRvQnV5TGVnZW5kYXJ5U3dvcmRIb3AgdGhlbgpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJMZWdlbmRhcnlTd29yZERlYWxlciIsICIxIikKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiTGVnZW5kYXJ5U3dvcmREZWFsZXIiLCAiMiIpCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkxlZ2VuZGFyeVN3b3JkRGVhbGVyIiwgIjMiKQpnYW1lOkdldFNlcnZpY2UoIlN0YXJ0ZXJHdWkiKTpTZXRDb3JlKCJTZW5kTm90aWZpY2F0aW9uIix7VGl0bGUgPSAiVmVjdG9ySHViIixUZXh0ID0gIkhvcFNlcnZlci4uLiIsSWNvbiA9ICJyYnhhc3NldGlkOi8vMTYxMjkyMzUwNTQiLER1cmF0aW9uID0gNX0pCndoaWxlIF9HLkF1dG9CdXlMZWdlbmRhcnlTd29yZEhvcCBkbyB0YXNrLndhaXQoKQp3YWl0KDcpCkhvcCgpCmVuZAplbmQKZW5kKQplbmQKZW5kKQpwYWdlMTE6VG9nZ2xlKCJBdXRvQnV5RW5jaGFubWVudEhha2lcbuC4reC4reC5guC4leC5ieC4i+C4t+C5ieC4reC4quC4teC4ruC4suC4hOC4tCIsIHRydWUsIGZ1bmN0aW9uKHZhbHVlKQpfRy5BdXRvQnV5RW5jaGFubWVudEhha2kgPSB2YWx1ZQp0YXNrLnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgdGFzay53YWl0KCkgZG8KcGNhbGwoZnVuY3Rpb24oKQppZiBfRy5BdXRvQnV5RW5jaGFubWVudEhha2kgdGhlbgpsb2NhbCBhcmdzID0gewpbMV0gPSAiQ29sb3JzRGVhbGVyIiwKWzJdID0gIjIiCn0KZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcih1bnBhY2soYXJncykpCmVuZAplbmQpCmVuZAplbmQpCmVuZCkKcGFnZTExOlRvZ2dsZSgiQXV0b0J1eUVuY2hhbm1lbnRIYWtpSG9wXG7guK3guK3guYLguJXguYnguIvguLfguYnguK3guKrguLXguK7guLLguITguLTguKLguYnguLLguKLguYDguIvguLTguJ8iLCBfRy5TZXR0aW5ncy5BdXRvQnV5RW5jaGFubWVudEhha2lIb3AsIGZ1bmN0aW9uKHZhbHVlKQpfRy5BdXRvQnV5RW5jaGFubWVudEhha2lIb3AgPSB2YWx1ZQpfRy5TZXR0aW5ncy5BdXRvQnV5RW5jaGFubWVudEhha2lIb3AgPSB2YWx1ZQpTYXZlU2V0dGluZ3MoKQp0YXNrLnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgdGFzay53YWl0KCkgZG8KcGNhbGwoZnVuY3Rpb24oKQppZiBfRy5TZXR0aW5ncy5BdXRvQnV5RW5jaGFubWVudEhha2lIb3AgdGhlbgpsb2NhbCBhcmdzID0gewpbMV0gPSAiQ29sb3JzRGVhbGVyIiwKWzJdID0gIjIiCn0KZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcih1bnBhY2soYXJncykpCmdhbWU6R2V0U2VydmljZSgiU3RhcnRlckd1aSIpOlNldENvcmUoIlNlbmROb3RpZmljYXRpb24iLHtUaXRsZSA9ICJWZWN0b3JIdWIiLFRleHQgPSAiSG9wU2VydmVyLi4uIixJY29uID0gInJieGFzc2V0aWQ6Ly8xNjEyOTIzNTA1NCIsRHVyYXRpb24gPSA1fSkKd2hpbGUgX0cuQXV0b0J1eUVuY2hhbm1lbnRIYWtpSG9wIGRvIHRhc2sud2FpdCgpCndhaXQoNykKSG9wKCkKZW5kCmVuZAplbmQpCmVuZAplbmQpCmVuZCkKcGFnZTExOlNlcGVyYXRvcigiRnJhZ21lbnQv4LmA4LiH4Li04LiZ4Lih4LmI4Lin4LiHIikKcGFnZTExOkJ1dHRvbigiUmVmdW5kIFN0YXQgWzIsNTAwRl1cbuC4o+C4teC4hOC5iOC4suC4quC5gOC4leC4leC4seC4qiBbMiw1MDAg4LmA4LiH4Li04LiZ4Lih4LmI4Lin4LiHXSIsIGZ1bmN0aW9uKCkKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQmxhY2tiZWFyZFJld2FyZCIsICJSZWZ1bmQiLCAiMSIpCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkJsYWNrYmVhcmRSZXdhcmQiLCAiUmVmdW5kIiwgIjIiKQplbmQpCnBhZ2UxMTpCdXR0b24oIlJlcm9sbCBSYWNlIFszLDAwMEZdXG7guKPguLXguYLguKPguKXguYDguJzguYjguLLguJ7guLHguJnguJjguLjguYwgWzMsMDAwIOC5gOC4h+C4tOC4meC4oeC5iOC4p+C4h10iLCBmdW5jdGlvbigpCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkJsYWNrYmVhcmRSZXdhcmQiLCAiUmVyb2xsIiwgIjEiKQpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJCbGFja2JlYXJkUmV3YXJkIiwgIlJlcm9sbCIsICIyIikKZW5kKQpwYWdlMTE6U2VwZXJhdG9yKCJBYmlsaXRpZXNcbuC4l+C4seC4geC4qeC4sCIpCnBhZ2UxMTpCdXR0b24oIkhha2kgWzI1LDAwJF1cbuC4ruC4suC4hOC4tCBbMjUsMDAg4LmA4LiH4Li04LiZ4LmA4LiC4Li14Lii4LinXSIsIGZ1bmN0aW9uKCkKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQnV5SGFraSIsICJCdXNvIikKZW5kKQpwYWdlMTE6QnV0dG9uKCJHZXBwbyBbMTAsMDAwJF1cbuC5gOC4lOC4tOC4meC4iuC4oeC4iOC4seC4meC4l+C4o+C5jCBbMTAsMDAwIOC5gOC4h+C4tOC4meC5gOC4guC4teC4ouC4p10iLCBmdW5jdGlvbigpCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkJ1eUhha2kiLCAiR2VwcG8iKQplbmQpCnBhZ2UxMTpCdXR0b24oIlNvcnUgWzEwMCwwMDAkXVxu4LmC4LiL4LilIFsxMDAsMDAwIOC5gOC4h+C4tOC4meC5gOC4guC4teC4ouC4p10iLCBmdW5jdGlvbigpCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkJ1eUhha2kiLCAiU29ydSIpCmVuZCkKcGFnZTExOkJ1dHRvbigiT2JzZXJ2YXRpb25IYWtpIFs3NTAsMDAwJF1cbuC4ruC4suC4hOC4tOC4quC4seC4h+C5gOC4geC4lSBbNzUwLDAwMCDguYDguIfguLTguJnguYDguILguLXguKLguKddIiwgZnVuY3Rpb24oKQpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJLZW5UYWxrIiwgIkJ1eSIpCmVuZCkKcGFnZTExOlNlcGVyYXRvcigiRmlnaHRpbmcgU3R5bGVcbuC4l+C4seC4geC4qeC4sOC4geC4suC4o+C4leC5iOC4reC4quC4ueC5iSIpCnBhZ2UxMTpCdXR0b24oIkJsYWNrIExlZyBbMTUwLDAwMCRdXG7guILguLLguJTguLMgWzE1MCwwMDAg4LmA4LiH4Li04LiZ4LmA4LiC4Li14Lii4LinXSIsIGZ1bmN0aW9uKCkKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQnV5QmxhY2tMZWciKQplbmQpCnBhZ2UxMTpCdXR0b24oIkVsZWN0cm8gWzUwMCwwMDAkXVxu4Lir4Lih4Lix4LiU4Liq4Liy4Lii4Lif4LmJ4LiyIFs1MDAsMDAwIOC5gOC4h+C4tOC4meC5gOC4guC4teC4ouC4p10iLCBmdW5jdGlvbigpCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkJ1eUVsZWN0cm8iKQplbmQpCnBhZ2UxMTpCdXR0b24oIkZpc2htYW4gS2FyYXRlIFs3NTAsMDAwJF1cbuC4q+C4oeC4seC4lOC4oeC4meC4uOC4qeC4ouC5jOC5gOC4h+C4t+C4reC4gSBbNzUwLDAwMCDguYDguIfguLTguJnguYDguILguLXguKLguKddIiwgZnVuY3Rpb24oKQpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJCdXlGaXNobWFuS2FyYXRlIikKZW5kKQpwYWdlMTE6QnV0dG9uKCJEcmFnb24gQ2xhdyBbMSw1MDBGXVxu4Lir4Lih4Lix4LiU4Lih4Lix4LiH4LiB4LijIFsxLDUwMCDguYDguIfguLTguJnguKHguYjguKfguIddIiwgZnVuY3Rpb24oKQpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJCbGFja2JlYXJkUmV3YXJkIiwgIkRyYWdvbkNsYXciLCAiMSIpCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkJsYWNrYmVhcmRSZXdhcmQiLCAiRHJhZ29uQ2xhdyIsICIyIikKZW5kKQpwYWdlMTE6QnV0dG9uKCJTdXBlcmh1bWFuIFszLDAwMCwwMDBdXG7guIrguLjguJvguYDguJvguK3guKPguK7guLTguKfguYHguKHguJkgWzMsMDAwLDAwMCDguYDguIfguLTguJnguYDguILguLXguKLguKddIiwgZnVuY3Rpb24oKQpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJCdXlTdXBlcmh1bWFuIikKZW5kKQpwYWdlMTE6QnV0dG9uKCJEZWF0aCBTdGVwIFsyLDUwMCwwMDAvNSwwMDBGXVxu4LiC4Liy4LiU4Liz4LiC4Lix4LmJ4LiZ4Liq4Lit4LiHIFsyLDUwMCwwMDAg4LmA4LiH4Li04LiZ4LmA4LiC4Li14Lii4LinLzUsMDAwIOC5gOC4h+C4tOC4meC4oeC5iOC4p+C4h10iLCBmdW5jdGlvbigpCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkJ1eURlYXRoU3RlcCIpCmVuZCkKcGFnZTExOkJ1dHRvbigiU2hhcmttYW4gS2FyYXRlIFsyLDUwMCwwMDAvNSwwMDBGXVxu4Lir4Lih4Lix4LiU4Lih4LiZ4Li44Lip4Lii4LmM4LmA4LiH4Li34Lit4LiB4LiC4Lix4LmJ4LiZ4Liq4Lit4LiHIFsyLDUwMCwwMDAg4LmA4LiH4Li04LiZ4LmA4LiC4Li14Lii4LinLzUsMDAwIOC5gOC4h+C4tOC4meC4oeC5iOC4p+C4h10iLCBmdW5jdGlvbigpCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkJ1eVNoYXJrbWFuS2FyYXRlIiwgdHJ1ZSkKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQnV5U2hhcmttYW5LYXJhdGUiKQplbmQpCnBhZ2UxMTpCdXR0b24oIkVsZWN0cmljIENsYXcgWzMsMDAwLDAwMC81LDAwMEZdXG7guKvguKHguLHguJTguKrguLLguKLguJ/guYnguLLguILguLHguYnguJnguKrguK3guIcgWzMsMDAwLDAwMCDguYDguIfguLTguJnguYDguILguLXguKLguKcvNSwwMDAg4LmA4LiH4Li04LiZ4Lih4LmI4Lin4LiHXSIsIGZ1bmN0aW9uKCkKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQnV5RWxlY3RyaWNDbGF3IiwgdHJ1ZSkKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQnV5RWxlY3RyaWNDbGF3IikKZW5kKQpwYWdlMTE6QnV0dG9uKCJEcmFnb24gVGFsb24gWzMsMDAwLDAwMC81LDAwMEZdXG7guKvguKHguLHguJTguKHguLHguIfguIHguKPguILguLHguYnguJnguKrguK3guIcgWzMsMDAwLDAwMCDguYDguIfguLTguJnguYDguILguLXguKLguKcvNSwwMDAg4LmA4LiH4Li04LiZ4Lih4LmI4Lin4LiHXSIsIGZ1bmN0aW9uKCkKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQnV5RHJhZ29uVGFsb24iLCB0cnVlKQpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJCdXlEcmFnb25UYWxvbiIpCmVuZCkKcGFnZTExOkJ1dHRvbigiR29kaHVtYW4gWzUsMDAwLDAwMC81LDAwMEZdXG7guIrguLjguJvguYDguJvguK3guKPguK7guLTguKfguYHguKHguJnguILguLHguYnguJnguKrguK3guIcgWzUsMDAwLDAwMCDguYDguIfguLTguJnguYDguILguLXguKLguKcvNSwwMDAg4LmA4LiH4Li04LiZ4Lih4LmI4Lin4LiHXSIsIGZ1bmN0aW9uKCkKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQnV5R29kaHVtYW4iLCB0cnVlKQpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJCdXlHb2RodW1hbiIpCmVuZCkKcGFnZTExOkJ1dHRvbigiU2FuZ3VpbmVBcnQgWzUsMDAwLDAwMC81LDAwMEZdXG7guKvguKHguLHguJTguYHguKfguKHguYTguJ7guKPguYwgWzUsMDAwLDAwMCDguYDguIfguLTguJnguYDguILguLXguKLguKcvNSwwMDAg4LmA4LiH4Li04LiZ4Lih4LmI4Lin4LiHXSIsIGZ1bmN0aW9uKCkKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQnV5U2FuZ3VpbmVBcnQiLCB0cnVlKQpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJCdXlTYW5ndWluZUFydCIpCmVuZCkKcGFnZTExOlNlcGVyYXRvcigiV2VhcG9uXG7guK3guLLguKfguLjguJgiKQpwYWdlMTE6QnV0dG9uKCJLYXRhbmEgWzEsMDAwXVxu4LiE4Liy4LiV4Liy4LiZ4LiwIFsxLDAwMCDguYDguIfguLTguJnguYDguILguLXguKLguKddIiwgZnVuY3Rpb24oKQpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJCdXlJdGVtIiwgIkthdGFuYSIpCmVuZCkKcGFnZTExOkJ1dHRvbigiQ3V0bGFzcyBbMSwwMDBdXG7guITguLHguJXguKXguLLguKogWzEsMDAwIOC5gOC4h+C4tOC4meC5gOC4guC4teC4ouC4p10iLCBmdW5jdGlvbigpCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkJ1eUl0ZW0iLCAiQ3V0bGFzcyIpCmVuZCkKcGFnZTExOkJ1dHRvbigiRHVlbCBLYXRhbmEgWzEyLDAwMF1cbuC4hOC4suC4leC4suC4meC4sOC4hOC4ueC5iCBbMTIsMDAwIOC5gOC4h+C4tOC4meC5gOC4guC4teC4ouC4p10iLCBmdW5jdGlvbigpCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkJ1eUl0ZW0iLCAiRHVlbCBLYXRhbmEiKQplbmQpCnBhZ2UxMTpCdXR0b24oIklyb24gTWFjZSBbMjUsMDAwXVxu4LiB4Lij4Liw4Lia4Lit4LiHIFsyNSwwMDAg4LmA4LiH4Li04LiZ4LmA4LiC4Li14Lii4LinXSIsIGZ1bmN0aW9uKCkKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQnV5SXRlbSIsICJJcm9uIE1hY2UiKQplbmQpCnBhZ2UxMTpCdXR0b24oIlBpcGUgWzEwMCwwMDBdXG7guJfguYjguK3guIvguLLguYLguJrguYkgWzEwMCwwMDAg4LmA4LiH4Li04LiZ4LmA4LiC4Li14Lii4LinXSIsIGZ1bmN0aW9uKCkKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQnV5SXRlbSIsICJQaXBlIikKZW5kKQpwYWdlMTE6QnV0dG9uKCJUcmlwbGUgS2F0YW5hIFs2MCwwMDBdXG7guITguLLguJXguLLguJnguLDguKrguLLguKHguYDguKXguYjguKEgWzYwLDAwMCDguYDguIfguLTguJnguYDguILguLXguKLguKddIiwgZnVuY3Rpb24oKQpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJCdXlJdGVtIiwgIlRyaXBsZSBLYXRhbmEiKQplbmQpCnBhZ2UxMTpCdXR0b24oIkR1YWwtSGVhZGVkIEJsYWRlIFs0MDAsMDAwXVxu4LiX4Lin4LiZ4Liq4Lit4LiH4LiU4LmJ4Liy4LiZIFs0MDAsMDAwIOC5gOC4h+C4tOC4meC5gOC4guC4teC4ouC4p10iLCBmdW5jdGlvbigpCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkJ1eUl0ZW0iLCAiRHVhbC1IZWFkZWQgQmxhZGUiKQplbmQpCnBhZ2UxMTpCdXR0b24oIkJpc2VudG8gWzEsMDAwLDAwMF1cbuC4l+C4p+C4meC4guC4meC4suC4lOC5g+C4q+C4jeC5iCBbMSwwMDAsMDAwIOC5gOC4h+C4tOC4meC5gOC4guC4teC4ouC4p10iLCBmdW5jdGlvbigpCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkJ1eUl0ZW0iLCAiQmlzZW50byIpCmVuZCkKcGFnZTExOkJ1dHRvbigiU291bCBDYW5lIFs3NTAsMDAwXVxu4LmE4Lih4LmJ4LmA4LiX4LmJ4Liy4Lia4Lij4Li54LmK4LiEIFs3NTAsMDAwIOC5gOC4h+C4tOC4meC5gOC4guC4teC4ouC4p10iLCBmdW5jdGlvbigpCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkJ1eUl0ZW0iLCAiU291bCBDYW5lIikKZW5kKQpwYWdlMTE6U2VwZXJhdG9yKCJHdW5cbuC4m+C4t+C4mSIpCnBhZ2UxMTpCdXR0b24oIlNsaW5nc2hvdCBbNSwwMDBdXG7guKvguJnguLHguIfguKrguJXguLTguYrguIEgWzUsMDAwIOC5gOC4h+C4tOC4meC5gOC4guC4teC4ouC4p10iLCBmdW5jdGlvbigpCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkJ1eUl0ZW0iLCAiU2xpbmdzaG90IikKZW5kKQpwYWdlMTE6QnV0dG9uKCJNdXNrZXQgWzgsMDAwXVxu4Lib4Li34LiZ4LmE4Lih4LmJ4LiU4LmJ4Liy4Lih4Lii4Liy4LinIFs4LDAwMCDguYDguIfguLTguJnguYDguILguLXguKLguKddIiwgZnVuY3Rpb24oKQpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJCdXlJdGVtIiwgIk11c2tldCIpCmVuZCkKcGFnZTExOkJ1dHRvbigiRmxpbnRsb2NrIFsxMCw1MDBdXG7guJvguLfguJnguYDguKvguKXguYfguIHguJTguYnguLLguKHguKrguLHguYnguJkgWzEwLDUwMCDguYDguIfguLTguJnguYDguILguLXguKLguKddIiwgZnVuY3Rpb24oKQpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJCdXlJdGVtIiwgIkZsaW50bG9jayIpCmVuZCkKcGFnZTExOkJ1dHRvbigiUmVmaW5lZCBGbGludGxvY2sgWzY1LDAwMF1cbuC4m+C4t+C4meC5gOC4q+C4peC5h+C4geC4lOC5ieC4suC4oeC4ouC4suC4pyBbNjUsMDAwXSIsIGZ1bmN0aW9uKCkKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQnV5SXRlbSIsICJSZWZpbmVkIEZsaW50bG9jayIpCmVuZCkKcGFnZTExOkJ1dHRvbigiQ2Fubm9uIFsxMDAsMDAwXVxu4Lib4Li34LiZ4LmD4Lir4LiN4LmIIFsxMDAsMDAwIOC5gOC4h+C4tOC4meC5gOC4guC4teC4ouC4p10iLCBmdW5jdGlvbigpCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkJ1eUl0ZW0iLCAiQ2Fubm9uIikKZW5kKQpwYWdlMTE6QnV0dG9uKCJLYWJ1Y2hhIFsxNTAwRl1cbuC4q+C4meC4seC4h+C4quC4leC4tOC5iuC4geC4guC4meC4suC4lOC5g+C4q+C4jeC5iCBbMTUwMCDguYDguIfguLTguJnguKHguYjguKfguIddIiwgZnVuY3Rpb24oKQpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJCbGFja2JlYXJkUmV3YXJkIiwgIlNsaW5nc2hvdCIsICIxIikKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQmxhY2tiZWFyZFJld2FyZCIsICJTbGluZ3Nob3QiLCAiMiIpCmVuZCkKcGFnZTExOlNlcGVyYXRvcigiQWNjZXNzb3J5XG7guILguK3guIfguYHguJXguYjguIfguIHguLLguKIiKQpwYWdlMTE6QnV0dG9uKCJCbGFjayBDYXBlIFs1MCwwMDBdXG7guJzguYnguLLguITguKXguLjguKHguKrguLXguJTguLMgWzUwLDAwMCDguYDguIfguLTguJnguYDguILguLXguKLguKddIiwgZnVuY3Rpb24oKQpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJCdXlJdGVtIiwgIkJsYWNrIENhcGUiKQplbmQpCnBhZ2UxMTpCdXR0b24oIlRvZW1vIFJpbmcgWzUwMCwwMDBdXG7guIHguKXguK3guIfguYDguK3guYDguJnguKUgWzUwMCwwMDAg4LmA4LiH4Li04LiZ4LmA4LiC4Li14Lii4LinXSIsIGZ1bmN0aW9uKCkKZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcigiQnV5SXRlbSIsICJUb21vZSBSaW5nIikKZW5kKQpwYWdlMTE6QnV0dG9uKCJTd29yZHNtYW4gSGF0IFsxNTAsMDAwXVxu4Lir4Lih4Lin4LiB4LiZ4Lix4LiB4LiU4Liy4LiaIFsxNTAsMDAwIOC5gOC4h+C4tOC4meC5gOC4guC4teC4ouC4p10iLCBmdW5jdGlvbigpCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIkJ1eUl0ZW0iLCAiU3dvcmRzbWFuIEhhdCIpCmVuZCkKcGFnZTEyOlNlcGVyYXRvcigiVGVhbS/guJfguLXguKEiKQpwYWdlMTI6QnV0dG9uKCJKb2luIFBpcmF0ZXMgVGVhbVxu4LmA4LiC4LmJ4Liy4Lij4LmI4Lin4Lih4LiX4Li14Lih4LmC4LiI4Lij4Liq4Lil4Lix4LiUIiwgZnVuY3Rpb24oKQpnYW1lOkdldFNlcnZpY2UoIlJlcGxpY2F0ZWRTdG9yYWdlIikuUmVtb3Rlcy5Db21tRl86SW52b2tlU2VydmVyKCJTZXRUZWFtIiwgIlBpcmF0ZXMiKQplbmQpCnBhZ2UxMjpCdXR0b24oIkpvaW4gTWFyaW5lcyBUZWFtXG7guYDguILguYnguLLguKPguYjguKfguKHguJfguLXguKHguJfguKvguLLguKPguYDguKPguLfguK0iLCBmdW5jdGlvbigpCmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIoIlNldFRlYW0iLCAiTWFyaW5lcyIpCmVuZCkKcGFnZTEyOlNlcGVyYXRvcigiU2VydmVyL+C5gOC4i+C4tOC4n+C5gOC4p+C4reC4o+C5jCIpCmxvY2FsIFRQUyA9IGdhbWU6R2V0U2VydmljZSgiVGVsZXBvcnRTZXJ2aWNlIikKbG9jYWwgTFAgPSBnYW1lOkdldFNlcnZpY2UoIlBsYXllcnMiKS5Mb2NhbFBsYXllcgpwYWdlMTI6VGV4dGJveCgiSm9iSURcbuC4iOC5h+C4reC4muC5hOC4reC4lOC4tSIsIiIsZnVuY3Rpb24oeCkKSm9iSWRfVGV4dGJveCA9IHgKZW5kKQpwYWdlMTI6QnV0dG9uKCJKb2luIEpvYklEXG7guYDguILguYnguLLguKPguYjguKfguKHguIjguYfguK3guJrguYTguK3guJTguLUiLCBmdW5jdGlvbigpClRQUzpUZWxlcG9ydFRvUGxhY2VJbnN0YW5jZShnYW1lLlBsYWNlSWQsIEpvYklkX1RleHRib3gsIExQKQpnYW1lOkdldFNlcnZpY2UoIlN0YXJ0ZXJHdWkiKTpTZXRDb3JlKCJTZW5kTm90aWZpY2F0aW9uIix7VGl0bGUgPSAiVmVjdG9ySHViIixUZXh0ID0gIlN1Y2Nlc3MgSm9iSUQgUGxlYXNlIFdhaXQiLEljb24gPSAicmJ4YXNzZXRpZDovLzE2MTI5MjM1MDU0IixEdXJhdGlvbiA9IDN9KQplbmQpCnBhZ2UxMjpCdXR0b24oIkNvcHkgSm9iSURcbuC4geC5h+C4reC4m+C4m+C4teC5ieC4iOC5h+C4reC4muC5hOC4reC4lOC4tSIsZnVuY3Rpb24oKQpzZXRjbGlwYm9hcmQoZ2FtZS5Kb2JJZCkKZ2FtZTpHZXRTZXJ2aWNlKCJTdGFydGVyR3VpIik6U2V0Q29yZSgiU2VuZE5vdGlmaWNhdGlvbiIse1RpdGxlID0gIlZlY3Rvckh1YiIsVGV4dCA9ICJTdWNjZXNzIENvcHkgSm9iSUQiLEljb24gPSAicmJ4YXNzZXRpZDovLzE2MTI5MjM1MDU0IixEdXJhdGlvbiA9IDN9KQplbmQpCnBhZ2UxMjpCdXR0b24oIkpvaW5TZXJ2ZXIgSG9wXG7guYDguILguYnguLLguYDguIvguLTguJ/guITguJnguYDguKLguK3guLAiLCBmdW5jdGlvbigpCnJlcGVhdCB3YWl0KCkgdW50aWwgZ2FtZTpJc0xvYWRlZCgpIGFuZCBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIKbG9jYWwgSHR0cFNlcnZpY2UsIFRQU2VydmljZSA9IGdhbWU6R2V0U2VydmljZSAiSHR0cFNlcnZpY2UiLCBnYW1lOkdldFNlcnZpY2UgIlRlbGVwb3J0U2VydmljZSI7CmxvY2FsIE90aGVyU2VydmVycyA9IEh0dHBTZXJ2aWNlOkpTT05EZWNvZGUoZ2FtZTpIdHRwR2V0KCJodHRwczovL2dhbWVzLnJvYmxveC5jb20vdjEvZ2FtZXMvIiAuLgpnYW1lLlBsYWNlSWQgLi4gIi9zZXJ2ZXJzL1B1YmxpYz9zb3J0T3JkZXI9QXNjJmxpbWl0PTEwMCIpKQpmdW5jdGlvbiBqb2luTmV3KCkKaWYgbm90IGlzZmlsZSgnc2VydmVycy5zc3MnKSB0aGVuCndyaXRlZmlsZSgnc2VydmVycy5zc3MnLCBIdHRwU2VydmljZTpKU09ORW5jb2RlKHt9KSkKZW5kCmxvY2FsIGRvbnRKb2luID0gcmVhZGZpbGUoJ3NlcnZlcnMuc3NzJykKZG9udEpvaW4gPSBIdHRwU2VydmljZTpKU09ORGVjb2RlKGRvbnRKb2luKQpmb3IgSW5kZXgsIFNlcnZlciBpbiBuZXh0LCBPdGhlclNlcnZlcnNbImRhdGEiXSBkbwppZiBTZXJ2ZXIgfj0gZ2FtZS5Kb2JJZCB0aGVuCmxvY2FsIGogPSB0cnVlCmZvciBhLCBjIGluIHBhaXJzKGRvbnRKb2luKSBkbwppZiBjID09IFNlcnZlci5pZCB0aGVuCmogPSBmYWxzZQplbmQKZW5kCmlmIGogdGhlbgp0YWJsZS5pbnNlcnQoZG9udEpvaW4sIFNlcnZlclsiaWQiXSkKd3JpdGVmaWxlKCJzZXJ2ZXJzLnNzcyIsIEh0dHBTZXJ2aWNlOkpTT05FbmNvZGUoZG9udEpvaW4pKQp3YWl0KCkKcmV0dXJuIFNlcnZlclsnaWQnXQplbmQKZW5kCmVuZAplbmQKbG9jYWwgc2VydmVyID0gam9pbk5ldygpCmlmIG5vdCBzZXJ2ZXIgdGhlbgp3cml0ZWZpbGUoInNlcnZlcnMuc3NzIiwgSHR0cFNlcnZpY2U6SlNPTkVuY29kZSh7fSkpCmxvY2FsIHNlcnZlciA9IGpvaW5OZXcoKQpUUFNlcnZpY2U6VGVsZXBvcnRUb1BsYWNlSW5zdGFuY2UoZ2FtZS5QbGFjZUlkLCBzZXJ2ZXIpCmVsc2UKVFBTZXJ2aWNlOlRlbGVwb3J0VG9QbGFjZUluc3RhbmNlKGdhbWUuUGxhY2VJZCwgc2VydmVyKQplbmQKZW5kKQpwYWdlMTI6QnV0dG9uKCJSZWpvaW5TZXJ2ZXJcbuC5gOC4guC5ieC4suC5gOC4i+C4tOC4n+C5gOC4lOC4tOC4oSIsIGZ1bmN0aW9uKCkKbG9jYWwgdHMgPSBnYW1lOkdldFNlcnZpY2UoIlRlbGVwb3J0U2VydmljZSIpCmxvY2FsIHAgPSBnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIKdHM6VGVsZXBvcnQoZ2FtZS5QbGFjZUlkLCBwKQplbmQpCnBhZ2UxMjpTZXBlcmF0b3IoIk90aGVyL+C4reC4t+C5iOC4meC5hiIpCnBhZ2UxMjpCdXR0b24oIkthaXR1biBDYXB0dXJlXG7guJbguYjguLLguKLguKDguLLguJ7guYTguIHguYjguJXguLHguJkiLCBmdW5jdGlvbigpCmthaXR1bmNhcCgpCmVuZCkKcGFnZTEyOkJ1dHRvbigiU2hvdyBTa2lsbERldmlsRnJ1aXNBd2FrZWRcbuC5geC4quC4lOC4h+C4quC4geC4tOC4peC4nOC4peC5hOC4oeC5ieC4m+C4teC4qOC4suC4iOC4leC4t+C5iOC4mSIsIGZ1bmN0aW9uKCkKbG9jYWwgYXJncyA9IHsKWzFdID0gImdldEF3YWtlbmVkQWJpbGl0aWVzIgp9CmdhbWU6R2V0U2VydmljZSgiUmVwbGljYXRlZFN0b3JhZ2UiKS5SZW1vdGVzLkNvbW1GXzpJbnZva2VTZXJ2ZXIodW5wYWNrKGFyZ3MpKQpnYW1lLlBsYXllcnMuTG9jYWxQbGF5ZXIuUGxheWVyR3VpLk1haW4uQXdha2VuaW5nVG9nZ2xlci5WaXNpYmxlID0gdHJ1ZQplbmQpCnBhZ2UxMjpCdXR0b24oIlNob3cgVGl0bGVzXG7guYHguKrguJTguIfguInguLLguKLguLIiLCBmdW5jdGlvbigpCmxvY2FsIGFyZ3MgPSB7ClsxXSA9ICJnZXRUaXRsZXMiCn0KZ2FtZTpHZXRTZXJ2aWNlKCJSZXBsaWNhdGVkU3RvcmFnZSIpLlJlbW90ZXMuQ29tbUZfOkludm9rZVNlcnZlcih1bnBhY2soYXJncykpCmdhbWUuUGxheWVycy5sb2NhbFBsYXllci5QbGF5ZXJHdWkuTWFpbi5UaXRsZXMuVmlzaWJsZSA9IHRydWUKZW5kKQpwYWdlMTI6QnV0dG9uKCJTaG93IENvbG9ySGFraVxu4LmB4Liq4LiU4LiH4Liq4Li14Liu4Liy4LiE4Li0IiwgZnVuY3Rpb24oKQpnYW1lLlBsYXllcnMubG9jYWxQbGF5ZXIuUGxheWVyR3VpLk1haW4uQ29sb3JzLlZpc2libGUgPSB0cnVlCmVuZCkKZnVuY3Rpb24gRnVsbEJyaWdodCgpCnBjYWxsKGZ1bmN0aW9uKCkKbG9jYWwgbGlnaHRpbmcgPSBnYW1lOkdldFNlcnZpY2UoIkxpZ2h0aW5nIikKbGlnaHRpbmcuQW1iaWVudCA9IENvbG9yMy5mcm9tUkdCKDI1NSwgMjU1LCAyNTUpCmxpZ2h0aW5nLkJyaWdodG5lc3MgPSAxCmxpZ2h0aW5nLkZvZ0VuZCA9IDFlMTAKZm9yIGksIHYgaW4gcGFpcnMobGlnaHRpbmc6R2V0RGVzY2VuZGFudHMoKSkgZG8KaWYKdjpJc0EoIkJsb29tRWZmZWN0Iikgb3IgdjpJc0EoIkJsdXJFZmZlY3QiKSBvciB2OklzQSgiQ29sb3JDb3JyZWN0aW9uRWZmZWN0Iikgb3IgdjpJc0EoIlN1blJheXNFZmZlY3QiKQp0aGVuCnYuRW5hYmxlZCA9IGZhbHNlCmVuZAplbmQKbGlnaHRpbmcuQ2hhbmdlZDpDb25uZWN0KGZ1bmN0aW9uKCkKbGlnaHRpbmcuQW1iaWVudCA9IENvbG9yMy5mcm9tUkdCKDI1NSwgMjU1LCAyNTUpCmxpZ2h0aW5nLkJyaWdodG5lc3MgPSAxCmxpZ2h0aW5nLkZvZ0VuZCA9IDFlMTAKZW5kKQpzcGF3bihmdW5jdGlvbigpCmxvY2FsIGNoYXJhY3RlciA9IGdhbWU6R2V0U2VydmljZSgiUGxheWVycyIpLkxvY2FsUGxheWVyLkNoYXJhY3Rlcgp3aGlsZSB3YWl0KCkgZG8KcmVwZWF0CndhaXQoKQp1bnRpbCBjaGFyYWN0ZXIgfj0gbmlsCmlmIG5vdCBjaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydDpGaW5kRmlyc3RDaGlsZFdoaWNoSXNBKCJQb2ludExpZ2h0IikgdGhlbgpsb2NhbCBoZWFkbGlnaHQgPSBJbnN0YW5jZS5uZXcoIlBvaW50TGlnaHQiLCBjaGFyYWN0ZXIuSHVtYW5vaWRSb290UGFydCkKaGVhZGxpZ2h0LkJyaWdodG5lc3MgPSAxCmhlYWRsaWdodC5SYW5nZSA9IDYwCmVuZAplbmQKZW5kKQplbmQpCnJlcGVhdAp0YXNrLndhaXQoKQp1bnRpbCBnYW1lOklzTG9hZGVkKCkKd2FpdCg1KQpmb3IgaSwgdiBpbiBwYWlycyhnYW1lLkxpZ2h0aW5nOkdldENoaWxkcmVuKCkpIGRvCmlmIHY6SXNBKCIiKSBvciB2OklzQSgiU2t5Iikgb3IgdjpJc0EoIkJsdXJFZmZlY3QiKSBvciB2OklzQSgiQmxvb21FZmZlY3QiKSBvciB2OklzQSgiU3VuUmF5c0VmZmVjdCIpIHRoZW4KdjpEZXN0cm95KCkKZW5kCmVuZApnYW1lLkxpZ2h0aW5nLkFtYmllbnQgPSBDb2xvcjMuZnJvbVJHQigyNTUsIDI1NSwgMjU1KQpnYW1lLkxpZ2h0aW5nLkJyaWdodG5lc3MgPSAxCmdhbWUuTGlnaHRpbmcuQ2xvY2tUaW1lID0gMTQKZ2FtZS5MaWdodGluZy5Db2xvclNoaWZ0X0JvdHRvbSA9IENvbG9yMy5mcm9tUkdCKDI1NSwgMjU1LCAyNTUpCmdhbWUuTGlnaHRpbmcuQ29sb3JTaGlmdF9Ub3AgPSBDb2xvcjMuZnJvbVJHQigyNTUsIDI1NSwgMjU1KQpnYW1lLkxpZ2h0aW5nLkV4cG9zdXJlQ29tcGVuc2F0aW9uID0gMApnYW1lLkxpZ2h0aW5nLkZvZ0NvbG9yID0gQ29sb3IzLmZyb21SR0IoMjU1LCAyNTUsIDI1NSkKZ2FtZS5MaWdodGluZy5Gb2dFbmQgPSA5OTk5OTk5OTkKZ2FtZS5MaWdodGluZy5HZW9ncmFwaGljTGF0aXR1ZGUgPSA0MS43MzMKZ2FtZS5MaWdodGluZy5PdXRkb29yQW1iaWVudCA9IENvbG9yMy5mcm9tUkdCKDI1NSwgMjU1LCAyNTUpCmdhbWUuTGlnaHRpbmcuR2xvYmFsU2hhZG93cyA9IHRydWUKZ2FtZS5MaWdodGluZy5DaGFuZ2VkOkNvbm5lY3QoZnVuY3Rpb24oKQpnYW1lLkxpZ2h0aW5nLkFtYmllbnQgPSBDb2xvcjMuZnJvbVJHQigyNTUsIDI1NSwgMjU1KQpnYW1lLkxpZ2h0aW5nLkJyaWdodG5lc3MgPSAxCmdhbWUuTGlnaHRpbmcuQ2xvY2tUaW1lID0gMTQKZ2FtZS5MaWdodGluZy5Db2xvclNoaWZ0X0JvdHRvbSA9IENvbG9yMy5mcm9tUkdCKDI1NSwgMjU1LCAyNTUpCmdhbWUuTGlnaHRpbmcuQ29sb3JTaGlmdF9Ub3AgPSBDb2xvcjMuZnJvbVJHQigyNTUsIDI1NSwgMjU1KQpnYW1lLkxpZ2h0aW5nLkV4cG9zdXJlQ29tcGVuc2F0aW9uID0gMApnYW1lLkxpZ2h0aW5nLkZvZ0NvbG9yID0gQ29sb3IzLmZyb21SR0IoMjU1LCAyNTUsIDI1NSkKZ2FtZS5MaWdodGluZy5Gb2dFbmQgPSA5OTk5OTk5OTkKZ2FtZS5MaWdodGluZy5HZW9ncmFwaGljTGF0aXR1ZGUgPSA0MS43MzMKZ2FtZS5MaWdodGluZy5PdXRkb29yQW1iaWVudCA9IENvbG9yMy5mcm9tUkdCKDI1NSwgMjU1LCAyNTUpCmdhbWUuTGlnaHRpbmcuR2xvYmFsU2hhZG93cyA9IHRydWUKZW5kKQpnYW1lLkxpZ2h0aW5nLkRlc2NlbmRhbnRBZGRlZDpDb25uZWN0KGZ1bmN0aW9uKG9iaikKaWYgb2JqOklzQSgiIikgb3Igb2JqOklzQSgiU2t5Iikgb3Igb2JqOklzQSgiQmx1ckVmZmVjdCIpIG9yIG9iajpJc0EoIkJsb29tRWZmZWN0Iikgb3Igb2JqOklzQSgiU3VuUmF5c0VmZmVjdCIpIHRoZW4Kb2JqOkRlc3Ryb3koKQplbmQKZW5kKQplbmQKcGFnZTEyOkJ1dHRvbigiRnVsbEJyaWdodFxu4LmB4Lih4Lie4Liq4Lin4LmI4Liy4LiHIiwgZnVuY3Rpb24oKQpGdWxsQnJpZ2h0KCkKZW5kKQpwYWdlMTI6VG9nZ2xlKCJXYWxrIE9uIFdhdGVyXG7guYDguJTguLTguJnguJrguJnguJnguYnguLMiLGZhc2xlLGZ1bmN0aW9uKHZhbHVlKQpfRy5XYWxrV2F0ZXIgPSB2YWx1ZQplbmQpCnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgdGFzay53YWl0KCkgZG8KcGNhbGwoZnVuY3Rpb24oKQppZiBfRy5XYWxrV2F0ZXIgdGhlbgpnYW1lOkdldFNlcnZpY2UoIldvcmtzcGFjZSIpLk1hcFsiV2F0ZXJCYXNlLVBsYW5lIl0uU2l6ZSA9IFZlY3RvcjMubmV3KDEwMDAsMTEyLDEwMDApCmVsc2UKZ2FtZTpHZXRTZXJ2aWNlKCJXb3Jrc3BhY2UiKS5NYXBbIldhdGVyQmFzZS1QbGFuZSJdLlNpemUgPSBWZWN0b3IzLm5ldygxMDAwLDgwLDEwMDApCmVuZAplbmQpCmVuZAplbmQpCl9HLkF1dG9SZWpvaW4gPSB0cnVlCnNwYXduKGZ1bmN0aW9uKCkKd2hpbGUgdGFzay53YWl0KCkgZG8KaWYgX0cuQXV0b1Jlam9pbiAgdGhlbgpfRy5BdXRvUmVqb2luICA9IGdhbWU6R2V0U2VydmljZSgiQ29yZUd1aSIpLlJvYmxveFByb21wdEd1aS5wcm9tcHRPdmVybGF5LkNoaWxkQWRkZWQ6Q29ubmVjdChmdW5jdGlvbihjaGlsZCkKaWYgY2hpbGQuTmFtZSA9PSAnRXJyb3JQcm9tcHQnIGFuZCBjaGlsZDpGaW5kRmlyc3RDaGlsZCgnTWVzc2FnZUFyZWEnKSBhbmQgY2hpbGQuTWVzc2FnZUFyZWE6RmluZEZpcnN0Q2hpbGQoIkVycm9yRnJhbWUiKSB0aGVuCmdhbWU6R2V0U2VydmljZSgiVGVsZXBvcnRTZXJ2aWNlIik6VGVsZXBvcnQoZ2FtZS5QbGFjZUlkKQplbmQKZW5kKQplbmQKZW5kCmVuZCkKVmVjKCI8Q29sb3I9Q3lhbj5WZWN0b3IgSHViKEJFVEEpIExvYWRpbmcgU3VjY2VzczxDb2xvcj0vPiIp'
local c='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
local r=""
d=d:gsub('[^'..c..'=]','')
for i=1,#d,4 do
local function f(x)for j=1,#c do if c:sub(j,j)==x then return j-1 end end return -1 end
local a,b,c,d=f(d:sub(i,i)),f(d:sub(i+1,i+1)),f(d:sub(i+2,i+2)),f(d:sub(i+3,i+3))
if a>=0 and b>=0 then
r=r..string.char((a*4)+math.floor(b/16))
if c>=0 then r=r..string.char(((b%16)*16)+math.floor(c/4))if d>=0 then r=r..string.char(((c%4)*64)+d)end end end end
return loadstring(r)()
