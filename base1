-- AUTO-GENERATED COMPRESSED ROBLOX SCRIPT
-- Fixed Version - Compatible with all Roblox versions
-- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢: Roblox Compression Pipeline v2

local jbbjbUjatlmu = 'P98R1Ntn5IR9NSR'
local GYHnMYJsNoAM = 'pQAyN4bmv5t32tj'
local esCRuxRIPCIR = 'MeJnfvnJs5Q9xeA'
local ZiVlUUHFxrBT = 'SEl4dNi5Xnh3A0q'
local wbIwcphLITPR = 'LS0gRnRnenAubHVhIC0g4Liq4LiE4Lij4Li04Lib4LiV4LmM4LiV4LmJ4LiZ4LiJ4Lia4Lix4Lia4Liq4Liz4Lir4Lij4Lix4Lia4LiX4LiU4Liq4Lit4LiaCi0tIOC5hOC4n+C4peC5jOC4meC4teC5ieC4iOC4sOC4luC4ueC4geC4meC4s+C5hOC4myBjb21wcmVzcyDguYHguKXguLAgb2JmdXNjYXRlCgpwcmludCgi4LiX4Liz4LiH4Liy4LiZ4LmE4LiU4LmJIi'
local BxYTYCWDFwTC = 'kKCi0tIOC5gOC4nuC4tOC5iOC4oeC5guC4hOC5ieC4lOC4reC4t+C5iOC4meC5hiDguJbguYnguLLguJXguYnguK3guIfguIHguLLguKMKcHJpbnQoIuC4quC4hOC4o+C4tOC4m+C4leC5jOC4guC4reC4h+C4hOC4uOC4k+C5guC4q+C4peC4lOC4quC4s+C5gOC4o+C5h+C4iOC5geC4peC5ieC4pyEiKQpwcmludCgi4Lin4Lix4LiZ4LiX4Li14LmIOiAiIC4uIG9z'
local zWUTVfmPuolg = 'LmRhdGUoIiVZLSVtLSVkICVIOiVNOiVTIikpCgotLSDguJXguLHguKfguK3guKLguYjguLLguIfguJ/guLHguIfguIHguYzguIrguLHguJnguYDguJ7guLTguYjguKHguYDguJXguLTguKEKbG9jYWwgZnVuY3Rpb24gdGVzdEZ1bmN0aW9uKCkKICAgIHJldHVybiAiSGVsbG8gZnJvbSBjb21wcmVzc2VkIHNjcmlwdCEiCmVuZAoKcHJpbnQodGVzdEZ1bmN0aW9uKCkp'
local zFCGLeYeUYRf = wbIwcphLITPR .. BxYTYCWDFwTC .. zWUTVfmPuolg
local OLPVlyxyuzkj = 2887
local YKlxljVFQUrb = 7413

-- Simple Base64 Decoder ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÉ‡∏ô Roblox
local function simpleBase64Decode(data)
    local chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    local result = ""
    
    -- ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    data = data:gsub('[^' .. chars .. '=]', '')
    
    local function indexOf(str, char)
        for i = 1, #str do
            if str:sub(i, i) == char then
                return i - 1
            end
        end
        return -1
    end
    
    -- ‡πÅ‡∏õ‡∏•‡∏á base64 ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ bit operations
    for i = 1, #data, 4 do
        local a = indexOf(chars, data:sub(i, i))
        local b = indexOf(chars, data:sub(i+1, i+1))
        local c = indexOf(chars, data:sub(i+2, i+2))
        local d = indexOf(chars, data:sub(i+3, i+3))
        
        if a >= 0 and b >= 0 then
            -- ‡πÉ‡∏ä‡πâ math operations ‡πÅ‡∏ó‡∏ô bit operations
            local byte1 = (a * 4) + math.floor(b / 16)
            result = result .. string.char(byte1)
            
            if c >= 0 then
                local byte2 = ((b % 16) * 16) + math.floor(c / 4)
                result = result .. string.char(byte2)
                
                if d >= 0 then
                    local byte3 = ((c % 4) * 64) + d
                    result = result .. string.char(byte3)
                end
            end
        end
    end
    
    return result
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö execute script
local function executeDecodedScript()
    print("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå...")
    
    -- ‡πÑ‡∏î‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà encode ‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏≤‡∏Å‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ obfuscated
    local encodedData = zFCGLeYeUYRf
    
    -- ‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™ base64
    local originalScript = simpleBase64Decode(encodedData)
    
    print("‚úÖ ‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
    print("üìä ‡∏Ç‡∏ô‡∏≤‡∏î‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå: " .. #originalScript .. " characters")
    
    -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏î‡πâ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if #originalScript > 0 and originalScript:find("print") then
        print("‚úÖ ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏î‡∏π‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
        
        -- Execute ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö
        local success, result = pcall(function()
            local func, err = loadstring(originalScript)
            if func then
                return func()
            else
                error("Loadstring error: " .. tostring(err))
            end
        end)
        
        if success then
            print("üöÄ Execute ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
            return result
        else
            warn("‚ùå Execute ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: " .. tostring(result))
            print("üìù ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏î‡πâ (100 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÅ‡∏£‡∏Å):")
            print(originalScript:sub(1, 100) .. "...")
            return nil
        end
    else
        warn("‚ùå ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏î‡πâ‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥")
        print("üìù ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ (50 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÅ‡∏£‡∏Å):")
        print(originalScript:sub(1, 50) .. "...")
        return nil
    end
end

-- Debug mode: ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
local DEBUG_MODE = false  -- ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô true ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ debug

if DEBUG_MODE then
    print("üêõ Debug Mode ‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà")
    print("üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà encode:")
    print("   ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß encoded data: " .. #zFCGLeYeUYRf)
    print("   ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ 50 ‡∏ï‡∏±‡∏ß‡πÅ‡∏£‡∏Å: " .. zFCGLeYeUYRf:sub(1, 50))
end

-- ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
return executeDecodedScript()
